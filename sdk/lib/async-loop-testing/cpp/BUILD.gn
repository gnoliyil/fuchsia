# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/cpp/sdk_source_set.gni")

config("include") {
  include_dirs = [ "include" ]
}

# Simplifies and supports deriving test fixtures with an event loop that
# supports multi-process tests, and can exercise FIDL.
sdk_source_set("cpp") {
  category = "partner"
  sdk_name = "async-loop-testing"

  public = [ "include/lib/async-loop/testing/cpp/real_loop.h" ]

  sources = [ "real_loop.cc" ]

  public_deps = [
    # <real_loop.h> has #include <lib/fit/function.h>
    "//sdk/lib/fit",

    # <real_loop.h> has #include <lib/stdcompat/optional.h>
    "//sdk/lib/stdcompat",

    # <real_loop.h> has #include <lib/zx/time.h>
    "//zircon/system/ulib/zx",

    # <real_loop.h> has #include <lib/async/cpp/executor.h>
    "//zircon/system/ulib/async:async-cpp",

    # <real_loop.h> has #include <lib/async-loop/cpp/loop.h>
    "//zircon/system/ulib/async-loop:async-loop-cpp",

    # <real_loop.h> has #include <lib/async-loop/default.h>
    "//zircon/system/ulib/async-loop:async-loop-default",
  ]

  public_configs = [ ":include" ]
}

group("tests") {
  testonly = true
  deps = [ "tests" ]
}
