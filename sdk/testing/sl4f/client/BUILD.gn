# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/dart/dart_library.gni")
import("//build/dart/dart_tool.gni")
import("//build/dart/test.gni")
import("//build/testing/host_test_data.gni")

dart_library("client") {
  package_name = "sl4f"

  sdk_category = "partner"

  sources = [
    "sl4f.dart",
    "src/audio.dart",
    "src/component.dart",
    "src/device.dart",
    "src/device_log.dart",
    "src/diagnostics.dart",
    "src/dump.dart",
    "src/exceptions.dart",
    "src/factory_store.dart",
    "src/feedback_data_provider.dart",
    "src/flatland_example.dart",
    "src/input.dart",
    "src/inspect.dart",
    "src/modular.dart",
    "src/performance.dart",
    "src/performance_publish.dart",
    "src/proxy.dart",
    "src/scenic.dart",
    "src/setui.dart",
    "src/sl4f_client.dart",
    "src/ssh.dart",
    "src/storage.dart",
    "src/time.dart",
    "src/trace_processing/metrics/camera_metrics.dart",
    "src/trace_processing/metrics/common.dart",
    "src/trace_processing/metrics/cpu_metrics.dart",
    "src/trace_processing/metrics/drm_fps.dart",
    "src/trace_processing/metrics/flatland_latency.dart",
    "src/trace_processing/metrics/flutter_frame_stats.dart",
    "src/trace_processing/metrics/gpu_metrics.dart",
    "src/trace_processing/metrics/input_latency.dart",
    "src/trace_processing/metrics/memory_metrics.dart",
    "src/trace_processing/metrics/power_metrics.dart",
    "src/trace_processing/metrics/scenic_frame_stats.dart",
    "src/trace_processing/metrics/temperature_metrics.dart",
    "src/trace_processing/metrics/total_trace_wall_time.dart",
    "src/trace_processing/metrics_results.dart",
    "src/trace_processing/metrics_spec.dart",
    "src/trace_processing/time_delta.dart",
    "src/trace_processing/time_point.dart",
    "src/trace_processing/trace_importing.dart",
    "src/trace_processing/trace_model.dart",
    "src/virtual_camera.dart",
    "src/webdriver.dart",
    "trace_processing.dart",
  ]

  deps = [
    "//third_party/dart-pkg/pub/archive",
    "//third_party/dart-pkg/pub/collection",
    "//third_party/dart-pkg/pub/image",
    "//third_party/dart-pkg/pub/logging",
    "//third_party/dart-pkg/pub/meta",
    "//third_party/dart-pkg/pub/path",
    "//third_party/dart-pkg/pub/pedantic",
    "//third_party/dart-pkg/pub/quiver",
    "//third_party/dart-pkg/pub/retry",
    "//third_party/dart-pkg/pub/webdriver",
  ]
}

dart_test("sl4f_client_tests") {
  sources = [
    "component_test.dart",
    "device_log_test.dart",
    "device_test.dart",
    "dump_test.dart",
    "factory_store_test.dart",
    "feedback_data_provider_test.dart",
    "input_test.dart",
    "inspect_test.dart",
    "modular_test.dart",
    "performance_publish_test.dart",
    "performance_test.dart",
    "proxy_test.dart",
    "scenic_test.dart",
    "sl4f_client_test.dart",
    "ssh_test.dart",
    "storage_test.dart",
    "time_test.dart",
    "trace_processing_test.dart",
    "virtual_camera_test.dart",
    "webdriver_from_existing_chromedriver_test.dart",
    "webdriver_single_test.dart",
    "webdriver_test.dart",
  ]

  deps = [
    ":client",
    "//third_party/dart-pkg/pub/archive",
    "//third_party/dart-pkg/pub/glob",
    "//third_party/dart-pkg/pub/image",
    "//third_party/dart-pkg/pub/mockito",
    "//third_party/dart-pkg/pub/path",
    "//third_party/dart-pkg/pub/quiver",
    "//third_party/dart-pkg/pub/test",
    "//third_party/dart-pkg/pub/webdriver",
  ]

  non_dart_deps = [ ":runtime_deps($host_toolchain)" ]
}

if (is_host) {
  host_test_data("runtime_deps") {
    sources = [
      "${root_out_dir}/fake_zedmon",
      "test/trace_processing_test_data/camera.json",
      "test/trace_processing_test_data/chrome_metadata.json",
      "test/trace_processing_test_data/cpu_metric.json",
      "test/trace_processing_test_data/cpu_metric_system_metrics_logger.json",
      "test/trace_processing_test_data/flow_event_binding.json",
      "test/trace_processing_test_data/flow_ids.json",
      "test/trace_processing_test_data/flutter_app.json",
      "test/trace_processing_test_data/flutter_app_long_name.json",
      "test/trace_processing_test_data/flutter_app_no_scenic.json",

      #     TODO(fxbug.dev/73367): Clean up this test data file after complete VsyncProcessCallback transition
      "test/trace_processing_test_data/flutter_app_vsync_process_callback.json",
      "test/trace_processing_test_data/gpu_utilization.json",
      "test/trace_processing_test_data/gpu_utilization_sub_second.json",
      "test/trace_processing_test_data/gpu_utilization_super_second.json",
      "test/trace_processing_test_data/id2_async.json",
      "test/trace_processing_test_data/input_latency.json",
      "test/trace_processing_test_data/memory_metric.json",
      "test/trace_processing_test_data/memory_no_bandwidth.json",
      "test/trace_processing_test_data/model.json",
      "test/trace_processing_test_data/power_metric.json",
      "test/trace_processing_test_data/scenic.json",
      "test/trace_processing_test_data/temperature_metric.json",
    ]

    outputs = [ "$target_gen_dir/runtime_deps/{{source_file_part}}" ]

    deps = [ "//tools/zedmon/fake_zedmon:bin" ]
  }
}

group("tests") {
  testonly = true

  deps = [ ":sl4f_client_tests($host_toolchain)" ]
}
