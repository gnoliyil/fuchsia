// Copyright 2022 The Fuchsia Authors.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

/// This library contains protocols used by the `ffx audio` tool only.
@available(added=HEAD)
library fuchsia.audio.ffxdaemon;

using fuchsia.media;
using zx;

/// Where to route incoming audio data.
type PlayLocation = flexible union {
    /// Play audio through an AudioRenderer.
    1: renderer RendererInfo;
};

/// Configuration for AudioRenderer.
type RendererInfo = table {
    1: usage fuchsia.media.AudioRenderUsage;
};

/// Gain settings.
type GainSettings = table {
    /// Whether to mute the audio stream.
    1: mute bool;

    /// Gain level in dB.
    2: gain float32;
};

/// The main entry point for ffx audio.
@discoverable
protocol AudioDaemon {
    /// Plays audio data from socket on either AudioRenderer or on device ring buffer.
    /// Returns sockets for transmitting info back to stdout and stderr on host.
    Play(resource table {
        /// Socket for audio data. Should transmit entire file in WAV format.
        1: socket zx.handle:SOCKET;

        /// Play on device ring buffer or AudioRenderer.
        2: location PlayLocation;

        /// Play settings.
        3: gain_settings GainSettings;
    }) -> (resource table {
        /// Information from daemon component for ffx plugin to display.
        1: stdout zx.handle:SOCKET;

        /// Errors from daemon component for ffx plugin to display.
        2: stderr zx.handle:SOCKET;
    }) error zx.status;
};
