// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        {
            type: "expect_pass",
            matchers: [
                "*",
            ],
        },
        {
            type: "expect_failure",
            matchers: [
                // chroot_test
                "ChrootTest.PermissionDenied",
                "ChrootTest.ProcMemSelfFdsNoEscapeProcOpen",
                "ChrootTest.ProcMountsMountinfoNoEscape",

                // clock_nanosleep_test
                "ClockNanosleepProcessTest.SleepFiveSeconds",
                "Sleepers/WallClockNanosleepTest.SleepOneSecond/0",
                "Sleepers/WallClockNanosleepTest.InterruptedNanosleep/*",
                "Sleepers/WallClockNanosleepTest.UninterruptedNanosleep/0",
                "Sleepers/WallClockNanosleepTest.SleepUntil/0",

                // dev_test
                "DevTest.OpenDevFuse",

                // dup_test
                "DupTest.Rlimit",

                // epoll_test - https://fxbug.dev/79261
                "EpollTest.DoubleEpollOneShot",
                "EpollTest.CloseFile",

                // eventfd_test - https://fxbug.dev/79262
                "EventfdTest.SpliceReturnsEINVAL",

                // exec_test
                // Disable InterpreterScript because the script has the path /bin/bash which is not
                // where bash is located on the Android system image.
                "ExecTest.InterpreterScript",

                // Disable FromSiblingThread as we don't handle multithreading.
                "ExecTest.FromSiblingThread",

                // Disable NoExecPerm because execute rights are not yet checked.
                "ExecTest.NoExecPerm",
                "ProcSelfExe.ChangesAcrossExecve",
                "ExecveatTest.BasicWithFDCWD",
                "ExecveatTest.Basic",
                "ExecveatTest.FDNotADirectory",
                "ExecveatTest.AbsolutePathWithFDCWD",
                "ExecveatTest.AbsolutePath",
                "ExecveatTest.EmptyPathBasic",
                "ExecveatTest.EmptyPathWithDirFD",
                "ExecveatTest.EmptyPathWithoutEmptyPathFlag",
                "ExecveatTest.AbsolutePathWithEmptyPathFlag",
                "ExecveatTest.RelativePathWithEmptyPathFlag",
                "ExecveatTest.SymlinkNoFollowWithRelativePath",
                "ExecveatTest.UnshareFiles",
                "ExecveatTest.SymlinkNoFollowWithAbsolutePath",
                "ExecveatTest.SymlinkNoFollowAndEmptyPath",
                "ExecveatTest.SymlinkNoFollowIgnoreSymlinkAncestor",
                "ExecveatTest.SymlinkNoFollowWithNormalFile",
                "ExecveatTest.BasicWithCloexecFD",
                "ExecveatTest.InterpreterScriptWithCloexecFD",
                "ExecveatTest.InterpreterScriptWithCloexecDirFD",
                "ExecveatTest.InvalidFlags",
                "GetpriorityTest.ExecveMaintainsPriority",

                // exit_test
                "ExitTest.SigkillZombieGroup",
                "ExitTest.SigkillZombieThread",

                // fcntl_test
                "FcntlTest.SetFileStatusFlagWithOpath",
                "FcntlTest.BadFcntlsWithOpath",
                "FcntlTest.GetAllFlags",
                "FcntlTest.SetFlags",
                "FcntlTest.SetFlO_ASYNC",
                "FcntlTest.DupAfterO_ASYNC",
                "FcntlTest.GetOwnExNone",
                "FcntlTest.SetOwnInvalidPid",
                "FcntlTest.SetOwnInvalidPgrp",
                "FcntlTest.SetOwnPgrp",
                "FcntlTest.SetOwnUnset",
                "FcntlTest.SetOwnExInvalidTid",
                "FcntlTest.SetOwnExInvalidPid",
                "FcntlTest.SetOwnExInvalidPgrp",
                "FcntlTest.SetOwnExTid",
                "FcntlTest.SetOwnExPid",
                "FcntlTest.SetOwnExPgrp",
                "FcntlTest.SetOwnExUnset",
                "FcntlTest.GetOwnExTid",
                "FcntlTest.GetOwnExPid",
                "FcntlTest.GetOwnExPgrp",
                "FcntlTest.SetSig",
                "FcntlTest.SetSigDefaultsToZero",
                "FcntlTest.SetSigToDefault",
                "FcntlTest.SetSigInvalid",
                "FcntlTest.SetSigInvalidDoesNotResetPreviousChoice",
                "FcntlTest.SetFlSetOwnSetSigDoNotRace",
                "FcntlSignalTest.SetSigDefault",
                "FcntlSignalTest.SignalFD",
                "FcntlSignalTest.SetSigCustom",
                "FcntlSignalTest.SetSigUnregisterStillGetsSigio",
                "FcntlSignalTest.SetSigWithSigioStillGetsSiginfo",
                "FcntlSignalTest.SetSigDupThenCloseOld",
                "FcntlSignalTest.SetSigDupThenCloseNew",
                "FcntlSignalTest.SetSigDupOldRegistered",
                "FcntlSignalTest.SetSigDupNewRegistered",
                "FcntlSignalTest.SetSigDupBothRegistered",
                "FcntlSignalTest.SetSigDupBothRegisteredAfterDup",
                "FcntlSignalTest.SetSigDupUnregisterOld",
                "FcntlSignalTest.SetSigDupUnregisterNew",
                "FifoTest.OpenBlockedAndInterrupted",

                // flock_test
                "FlockTest.TestSharedLockFailExclusiveHolderBlocking",
                "FlockTest.TestExclusiveLockFailExclusiveHolderBlocking",
                "FlockTestNoFixture.FlockSymlink",

                // fork_test
                "ForkTest.Alarm",
                "CloneTest.NewUserNamespacePermitsAllOtherNamespaces",
                "CloneTest.NonCanonicalTLS",

                // futex_test
                "PrivateFutexTest.WakeOp0Set",
                "PrivateFutexTest.WakeOp0Add",
                "PrivateFutexTest.WakeOp0Or",
                "PrivateFutexTest.WakeOp0Andn",
                "PrivateFutexTest.WakeOp0Xor",
                "SharedPrivate/PrivateAndSharedFutexTest.PIBasic/*",
                "SharedPrivate/PrivateAndSharedFutexTest.PIConcurrency/*",
                "SharedPrivate/PrivateAndSharedFutexTest.PIWaiters/*",
                "SharedPrivate/PrivateAndSharedFutexTest.PITryLock/*",

                // getdents_test
                "ReaddirTest.RootContainsBasicDirectories",

                // lseek_test
                "LseekTest.ProcFile",
                "LseekTest.SysDir",
                "LseekTest.ProcStatTwice",
                "LseekTest.EtcPasswdDup",

                // madvise_test
                "MadviseDontneedTest.CleansPrivateFilePage",
                "MadviseDontforkTest.AddressLength",
                "MadviseDontforkTest.DontforkShared",
                "MadviseDontforkTest.DontforkAnonPrivate",

                // memfd_test
                "MemfdTest.Name",
                "MemfdTest.SealingDisabledByDefault",
                "MemfdTest.SealsGetSet",
                "MemfdTest.SealGrowWithTruncate",
                "MemfdTest.SealGrowWithWrite",
                "MemfdTest.SealGrowPartialWriteTruncated",
                "MemfdTest.SealGrowPartialWriteTruncatedSamePage",
                "MemfdTest.SealShrink",
                "MemfdTest.SealWriteWithWrite",
                "MemfdTest.SealWriteWithMmap",
                "MemfdTest.SealWriteWithOutstandingWritbleMapping",
                "MemfdTest.NoPartialSealApplicationWhenWriteSealRejected",
                "MemfdTest.SealsAreInodeLevelProperties",
                "MemfdTest.TmpfsFilesHaveSealSeal",
                "MemfdTest.MemfdMustBeWritableToModifySeals",

                // mkdir_test - https://fxbug.dev/79298
                "MkdirTest.DirAlreadyExists",

                // mmap_test
                "MMapDeathTest.TruncateAfterCOWBreak",
                "MMapTest.MapDevZeroShared",
                "MMapTest.MapDevZeroPrivate",
                "MMapTest.MapDevZeroNoPersistence",
                "MMapTest.MapDevZeroSharedMultiplePages",
                "MMapTest.MapDevZeroSharedFdNoPersistence",
                "MMapTest.MapDevZeroSegfaultAfterUnmap",
                "MMapTest.MapDevZeroUnaligned",
                "MMapTest.MapLocked",
                "MMapTest.ProtNoneDeath",
                "MMapTest.ReadOnlyDeath",
                "MMapTest.MprotectReadOnlyDeath",
                "MMapTest.MprotectHugeLength",
                "MMapTest.NoProtExecDeath",
                "MMapTest.NoExceedLimitData",
                "MMapTest.ExceedLimitData",
                "MMapTest.ExceedLimitDataPrlimit",
                "MMapTest.ExceedLimitDataPrlimitPID",
                "MMapTest.NoExceedLimitAS",
                "MMapTest.ExceedLimitAS",
                "MMapFileTest.MapOffsetBeyondEnd",
                "MMapFileTest.MapLastPositivePage",
                "MMapFileTest.MapFirstNegativePage",
                "MMapFileTest.MapSecondToLastNegativePage",
                "MMapFileTest.MapLastNegativePage",
                "MMapFileTest.ReadSharedTruncateSIGBUS",
                "MMapFileTest.WriteSharedTruncateSIGBUS",
                "ReadWriteSharedPrivate/MMapFileParamTest.SigBusDeath/*",

                // mount_test
                "MountTest.OpenFileBusy",
                "MountTest.ActiveSubmountBusy",
                "MountTest.MountTmpfsMagicValIgnored",
                "MountTest.MountReadonly",
                "MountTest.MountNoAtime",
                "MountTest.MountNoExec",
                "MountTest.MountInfo",
                "MountTest.TmpfsSizeRoundUpSinglePageSize",
                "MountTest.TmpfsSizeAllocationMultiplePages",
                "MountTest.TmpfsSizeMoreThanSinglePgSZMultipleFiles",
                "MountTest.TmpfsSizeFtruncate",
                "MountTest.TmpfsDirectoryAllocCheck",
                "MountTest.TmpfsSymlinkAllocCheck",
                "MountTest.TmpfsSymlinkUnallocCheck",
                "MountTest.TmpfsHardLinkAllocCheck",
                "MountTest.TmpfsEmptySizeAllocCheck",
                "MountTest.TmpfsSizePartialWriteSinglePage",
                "MountTest.TmpfsSizePartialWriteMultiplePages",
                "MountTest.TmpfsSizeMmap",
                "MountTest.BindToSelf",
                "MountTest.MaxMounts",
                "MountTest.MakeShared",
                "MountTest.MakeMultipleShared",
                "MountTest.ReuseGroupIDs",
                "MountTest.InerheritPropagation",
                "MountTest.MakePrivate",
                "MountTest.ArgumentsAreIgnored",
                "MountTest.SetMountPropagationOfStackedMounts",
                "MountTest.MakePeer",
                "MountTest.PropagateMountEvent",
                "MountTest.PropagateUmountEvent",
                "MountTest.UmountIgnoresPeersWithChildren",
                "MountTest.BindSharedOnShared",
                "MountTest.BindSharedOnPrivate",
                "MountTest.BindPeerGroupsWithChildren",
                "MountTest.BindParentToChild",
                "MountTest.MountInfoHasRoot",

                // mremap_test - https://fxbug.dev/79303
                // Skip the only death test since Starnix doesn't support handling SIGBUS
                // for processes.
                "MremapDeathTest.SharedAnon",

                // ping_socket_test
                "PingSocket.PayloadTooLarge",
                "PingSocket.ReceiveTOS",
                "PingSocket.ReceiveTClass",
                "PingSocket.ReceiveTTL",
                "PingSocket.ReceiveHopLimit",
                "PingSocket.ReceiveIPPacketInfo",
                "PingSocket.ReceiveIPv6PktInfo",

                // pipe_test
                "Pipes/PipeTest.Flags/namednonblocking",
                "Pipes/PipeTest.Flags/namedblocking",
                "PingSockets/Fixture.Bind/ICMP_socket_V6Any",
                "PingSockets/Fixture.Bind/ICMP_socket_V6Loopback",
                "PingSockets/Fixture.Bind/ICMP_socket_V6Multicast",
                "PingSockets/Fixture.Bind/ICMP_socket_V6MulticastInterfaceLocalAllNodes",
                "PingSockets/Fixture.Bind/ICMP_socket_V6MulticastLinkLocalAllNodes",
                "PingSockets/Fixture.Bind/ICMP_socket_V6MulticastLinkLocalAllRouters",
                "PingSockets/Fixture.Bind/ICMP_socket_IPv6UnknownUnicast",

                // poll_test - https://fxbug.dev/79315
                "PollTest.NonBlockingEventPOLLRDNORM",
                "PollTest.NonBlockingEventPOLLRDNORM_POLLIN",
                "PollTest.BlockingEventPOLLRDNORM_POLLIN",
                "PollTest.NonBlockingEventPOLLWRNORM",
                "PollTest.NonBlockingEventPOLLWRNORM_POLLOUT",
                "PollTest.BlockingEventPOLLWRNORM_POLLOUT",
                "PollTest.Nfds",

                // ppoll_test - https://fxbug.dev/79316
                // InvalidMaskSize requires an additional parameter to ppoll, need to determine
                // the validity of that.
                "PpollTest.InvalidMaskSize",

                // SignalMask[Blocks/Allows]Signal require timers to send signals.
                "PpollTest.SignalMaskBlocksSignal",

                // proc_test
                "ProcSelfAuxv.EntryPresence",
                "ProcSelfAuxv.EntryValues",
                "ProcPidMem.Read",
                "ProcPidMem.Unmapped",
                "ProcPidMem.RepeatedRead",
                "ProcPidMem.RepeatedSeek",
                "ProcPidMem.PartialRead",
                "ProcPidMem.AfterExit",
                "ProcPidMem.SameUser",
                "ProcSelfMaps.Basic",
                "ProcSelfMaps.Map2",
                "ProcSelfMaps.MapUnmap",
                "ProcSelfMaps.SharedAnon",
                "ProcSelfFdInfo.Flags",
                "ProcSelfCwd.Absolute",
                "ProcSelfRoot.IsRoot",
                "ProcCpuinfo.RequiredFieldsArePresent",
                "ProcCpuinfo.Stable",
                "ProcUptime.IsPresent",
                "ProcMeminfo.ContainsBasicFields",
                "ProcSentryMeminfo.ContainsFieldsAndEndsWithNewline",
                "ProcStat.ContainsBasicFields",
                "ProcStat.EndsWithNewline",
                "ProcStat.Fields",
                "ProcLoadavg.EndsWithNewline",
                "ProcLoadavg.Fields",
                "ProcSelfStat.PopulateWriteRSS",
                "ProcPidStatusTest.HasBasicFields",
                "ProcPidStatusTest.StateRunning",
                "ProcPidStatusTest.StateSleeping",
                "ProcPidStatusTest.Threads",
                "ProcPidStatTest.VmStats",
                "ProcPidCmdline.SubprocessForkSameCmdline",
                "ProcPidCmdline.SubprocessSeekCmdline",
                "ProcPidEnviron.MatchesEnviron",
                "ProcPidSymlink.SubprocessRunning",
                "ProcPidSymlink.SubprocessZombied",
                "ProcPidSymlink.SubprocessExited",
                "ProcPidExe.Subprocess",
                "ProcPidCwd.Subprocess",
                "ProcPidRoot.Subprocess",
                "ProcPidFile.SubprocessRunning",
                "ProcPidFile.SubprocessZombie",
                "ProcPidFile.SubprocessExited",
                "ProcTask.VerifyTaskDir",
                "ProcTask.TaskDirHasCorrectMetadata",
                "ProcTask.VerifyTaskDirNlinks",
                "ProcSysKernelHostname.Exists",
                "ProcSysKernelHostname.MatchesUname",
                "ProcSysVmMaxmapCount.HasNumericValue",
                "ProcSysVmMmapMinAddr.HasNumericValue",
                "ProcSysVmOvercommitMemory.HasNumericValue",
                "ProcFilesystems.Bug65172365",
                "ProcMounts.IsSymlink",
                "ProcSelfMountinfo.RequiredFieldsArePresent",
                "ProcSelfMountinfo.ContainsProcfsEntry",
                "ProcSelfMounts.RequiredFieldsArePresent",
                "ProcSelfMounts.ContainsProcfsEntry",
                "Proc.GetdentsEnoent",
                "Proc.PidTidIOAccounting",
                "ProcPid.RootDumpableOwner",
                "SelfAndNumericPid/ProcPidStatTest.HasBasicFields/*",
                "SelfAndNumericPid/ProcPidStatmTest.HasBasicFields/*",

                // pselect_test
                "PselectTest.SignalMaskBlocksSignal", // maybe flaky

                // readv_test
                "ReadvTestNoFixture.TruncatedAtMax",

                // rename_test - https://fxbug.dev/79345
                "RenameTest.FileNameTooLong",
                "RenameTest.FailsWhenOldParentNotWritable",
                "RenameTest.FailsWhenNewParentNotWritable",
                "RenameTest.OverwriteFailsWhenNewParentNotWritable",

                // select_test
                "SelectTest.SetrlimitCallNOFILE",

                // sigaltstack_test - https://fxbug.dev/79359
                "SigaltstackTest.ResetByExecve",
                "SigaltstackTest.SetCurrentStack",

                // signalfd_test
                "Signalfd.KillStillKills",
                "Signalfd/SignalfdTest.SetMask/kSigno",
                "Signalfd/SignalfdTest.SetMask/kSignoMax",

                // socket_abstract_test - https://fxbug.dev/79366
                "AbstractUnixSockets/AllSocketPairTest.SetSocketRecvBufForceAboveMax/*",
                "AbstractUnixSockets/AllSocketPairTest.GetSocketOutOfBandInlineOption/*",
                "AbstractUnixSockets/AllSocketPairTest.GetSetSocketRcvlowatOption/*",
                "AbstractUnixSockets/UnixSocketPairTest.NetdeviceIoctlsSucceed/*",
                "AbstractUnixSockets/UnixSocketPairCmsgTest.SendNullCredsBeforeSoPassCredRecvEndAfterSendEnd/*",
                "AbstractUnixSockets/UnixSocketPairCmsgTest.WriteBeforeSoPassCredRecvEndAfterSendEnd/*",

                // socket_domain_test
                // TODO: same name of test in socket_ip_tcp_loopback_test that passes

                // socket_filesystem_test
                "FilesystemUnixSockets/AllSocketPairTest.SetSocketRecvBufForceAboveMax/*",
                "FilesystemUnixSockets/AllSocketPairTest.GetSocketOutOfBandInlineOption/*",
                "FilesystemUnixSockets/AllSocketPairTest.GetSetSocketRcvlowatOption/*",
                "FilesystemUnixSockets/UnixSocketPairTest.NetdeviceIoctlsSucceed/*",
                "FilesystemUnixSockets/UnixSocketPairCmsgTest.SendNullCredsBeforeSoPassCredRecvEndAfterSendEnd/*",
                "FilesystemUnixSockets/UnixSocketPairCmsgTest.WriteBeforeSoPassCredRecvEndAfterSendEnd/*",

                // socket_ip_tcp_loopback_test
                "AllUnixDomainSockets/AllSocketPairTest.SendmsgRecvmsgMsgCtruncNoop/*",
                "AllUnixDomainSockets/AllSocketPairTest.SetSocketRecvBufForceAboveMax/*",
                "AllUnixDomainSockets/AllSocketPairTest.GetSetSocketRcvlowatOption/*",

                // socket_ip_udp_loopback_test
                "AllUDPSockets/AllSocketPairTest.SetSocketRecvBufForceAboveMax/*",
                "AllUDPSockets/AllSocketPairTest.SetAndGetBooleanSocketOptions/*",
                "AllUDPSockets/AllSocketPairTest.GetSetSocketRcvlowatOption/*",
                "AllUDPSockets/NonStreamSocketPairTest.SendMsgTooLarge/*",
                "AllUDPSockets/NonStreamSocketPairTest.RecvmsgMsghdrFlagMsgTrunc/*",
                "AllUDPSockets/UDPSocketPairTest.ReceiveOrigDstAddrDefault/*",
                "AllUDPSockets/UDPSocketPairTest.PayloadTooBig/*",
                "AllUDPSockets/UDPSocketPairTest.SetAndGetReceiveOrigDstAddr/*",

                // socket_ipv4_datagram_based_socket_unbound_loopback_test
                "IPv4Sockets/IPv4DatagramBasedUnboundSocketTest.IpMulticastIfSetShort/*",
                "IPv4Sockets/IPv4DatagramBasedUnboundSocketTest.IpMulticastIfSetNicGetReqn/*",
                "IPv4Sockets/IPv4DatagramBasedUnboundSocketTest.IpMulticastIfSetNic/*",
                "IPv4Sockets/IPv4DatagramBasedUnboundSocketTest.TestMultipleJoinsOnSingleSocket/*",

                // socket_netlink_route_test
                "NetlinkRouteTest.GetLinkDump",
                "NetlinkRouteTest.GetLinkByIndex",
                "NetlinkRouteTest.GetLinkByName",
                "NetlinkRouteTest.GetLinkByIndexNotFound",
                "NetlinkRouteTest.GetLinkByNameNotFound",
                "NetlinkRouteTest.RemoveLoopbackByName",
                "NetlinkRouteTest.RemoveLoopbackByIndex",
                "NetlinkRouteTest.RemoveLinkByIndexNotFound",
                "NetlinkRouteTest.RemoveLinkByNameNotFound",
                "NetlinkRouteTest.MsgHdrMsgUnsuppType",
                "NetlinkRouteTest.SpliceFromPipe",
                "NetlinkRouteTest.ControlMessageIgnored",
                "NetlinkRouteTest.AddAndRemoveAddr",
                "NetlinkRouteTest.GetRouteDump",
                "NetlinkRouteTest.GetRouteRequest",
                "NetlinkRouteTest.RecvmsgTrunc",
                "NetlinkRouteTest.RecvmsgTruncPeek",
                "NetlinkRouteTest.PasscredCreds",

                // socket_unix_pair_test - https://fxbug.dev/79408
                "AllUnixDomainSockets/UnixSocketPairTest.NetdeviceIoctlsSucceed/*",
                "AllUnixDomainSockets/UnixSocketPairCmsgTest.SendNullCredsBeforeSoPassCredRecvEndAfterSendEnd/*",
                "AllUnixDomainSockets/UnixSocketPairCmsgTest.WriteBeforeSoPassCredRecvEndAfterSendEnd/*",

                // socket_unix_unbound_abstract_test
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/0",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/1",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/2",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/3",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.GetSockNamePartialLength/*",

                // socket_unix_seqpacket_local_test
                "SeqpacketUnixSockets/SeqpacketUnixSocketPairTest.Sendto/*",

                // socket_unix_unbound_dgram_test
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.Sendto/*",
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.SendtoWithoutConnect/*",
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.SendtoWithoutConnectPassCreds/*",

                // socket_unix_unbound_stream_test
                "AllUnixDomainSockets/UnixStreamSocketPairTest.FDPassPartialRead/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.CredPassPartialRead/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.SinglePeek/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.CredsNotCoalescedUp/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.CoalescedCredsNoPasscred/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.CoalescedCreds2/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.CoalescedDifferingCreds/*",
                "AllUnixDomainSockets/UnboundUnixStreamSocketPairTest.SendtoWithoutConnect/*",

                // stat_test
                "StatTest.StatxAbsPath",
                "StatTest.StatxRelPathDirFD",
                "StatTest.StatxRelPathCwd",
                "StatTest.StatxEmptyPath",
                "StatTest.StatxDoesNotRejectExtraneousMaskBits",
                "StatTest.StatxRejectsReservedMaskBit",
                "StatTest.StatxSymlink",
                "StatTest.StatxInvalidFlags",

                // statfs_test
                "FstatfsTest.BlocksFree",

                // timerfd_test - https://fxbug.dev/79430
                "AllTimerTypes/TimerfdTest.BlockingPoll_SetTimeResetsExpirations/CLOCK_MONOTONIC",
                "AllTimerTypes/TimerfdTest.BlockingPoll_SetTimeResetsExpirations/CLOCK_BOOTTIME",

                // time_test
                "TimeTest.VsyscallTime_InvalidAddressSIGSEGV",

                // uidgid_test - https://fxbug.dev/79438
                "UidGidRootTest.SetgidNotFromThreadGroupLeader",

                // unlink_test
                "UnlinkTest.ParentDegradedPermissions",
                "RmdirTest.CanRemoveWithTrailingSlashes",

                // wait_test - https://fxbug.dev/79451
                "WaitTest.KillZombie",
                "WaitTest.Wait4Rusage",
                "WaitTest.WaitidRusage",
                "WaitTest.TraceeWALL",
                "Waiters/WaitAnyChildTest.CloneSIGCHLD/*",
                "Waiters/WaitAnyChildTest.ForkAndClone/*",
                "Waiters/WaitAnyChildTest.WaitedChildRusage/*",
                "Waiters/WaitAnyChildTest.IgnoredChildRusage/*",
                "Waiters/WaitSpecificChildTest.SiblingChildrenWNOTHREAD/0",
                "Waiters/WaitSpecificChildTest.CloneSIGCHLD/*",
                "Waiters/WaitSpecificChildTest.CloneNoSIGCHLD/*",
                "Waiters/WaitSpecificChildTest.CloneAfterExit/*",
                "Waiters/WaitSpecificChildTest.CloneWCLONE/0",
                "Waiters/WaitSpecificChildTest.ForkWCLONE/0",
                "Waiters/WaitSpecificChildTest.WALL/0",
                "Waiters/WaitSpecificChildTest.AfterChildExecve/*",

                // write_test
                "WriteTest.WriteNoExceedsRLimit",
                "WriteTest.WriteExceedsRLimit",
                "WriteTest.PartialWriteSIGSEGV",
                "WriteTest.PartialWriteSIGBUS",
            ],
        },
        {
            type: "skip",
            matchers: [
                // These tests hang.
                "ChrootTest.ProcMemSelfMapsNoEscapeProcOpen",
                "ConcurrencyTest.MultiProcessConcurrency",
                "SharedPrivate/PrivateAndSharedFutexTest.Wake0/*",
                "SharedPrivate/PrivateAndSharedFutexTest.WakeOpCondSuccess/*",
                "SharedPrivate/PrivateAndSharedFutexTest.WakeOpCondFailure/*",
                "PingSocket.ICMPPortExhaustion",
                "Pipes/PipeTest.ZeroSize/*",
                "PollTest.BlockingEventPOLLRDNORM",
                "PollTest.BlockingEventPOLLWRNORM",
                "ProcTask.TaskDirCannotBeDeleted",
                "SigaltstackTest.WalksOffBottom",
                "Signalfd/SignalfdTest.Blocking/*",
                "Signalfd/SignalfdTest.ThreadGroup/*",
                "SigtimedwaitTest.AlarmReturnsAlarm",
                "SigtimedwaitTest.NullTimeoutReturnsEINTR",
                "NetlinkRouteTest.LookupAll",
                "BlockingTCPSockets/BlockingStreamSocketPairTest.SendMsgTooLarge/*",
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.ZeroWriteAllowed/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.ZeroLengthMessageFDDiscarded/*",

                // TODO(fxbug.dev/105339): Re-enable once flake is resolved.
                "Waiters/WaitSpecificChildTest.MultipleForkOutOfOrder/*",

                // These tests are flaky.
                "FcntlTest.SetFdO_ASYNC",

                // TODO: These tests have different outcomes in socket_domain_test and
                // socket_ip_tcp_loopback_test.
                "AllUnixDomainSockets/AllSocketPairTest.SendmsgRecvmsgMsgCtruncNoop/*",
                "AllUnixDomainSockets/AllSocketPairTest.SetAndGetBooleanSocketOptions/*",
                "AllUnixDomainSockets/AllSocketPairTest.GetSocketOutOfBandInlineOption/*",
            ],
        },
    ],
}
