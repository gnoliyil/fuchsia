// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        {
            type: "expect_pass",
            matchers: [
                "*",
            ],
        },
        {
            type: "expect_failure",
            matchers: [
                // raw_socket_icmp
                "RawSocketICMPTest.IPv6ChecksumNotSupported",
                "RawSocketICMPTest.ICMPv6FilterNotSupported",
                "RawSocketICMPTest.SendAndReceiveBadChecksum",
                "RawSocketICMPTest.SendAndReceive",
                "RawSocketICMPTest.MultipleSocketReceive",
                "RawSocketICMPTest.RawAndPingSockets",
                "RawSocketICMPTest.SendAndReceiveViaConnect",
                "RawSocketICMPTest.BindSendAndReceive",
                "RawSocketICMPTest.BindConnectSendAndReceive",

                // raw_socket_test
                "RawSocketTest.ReceiveIPPacketInfo",
                "RawSocketTest.ReceiveIPv6PacketInfo",
                "RawSocketTest.ReceiveTOS",
                "RawSocketTest.ReceiveTClass",
                "RawSocketTest.ReceiveTTL",
                "RawSocketTest.ReceiveHopLimit",
                "AllInetTests/RawSocketTest.SetSocketDetachFilterNoInstalledFilter/*",

                // socket_ipv4_udp_unbound_loopback_test
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackNicNoDefaultSendIf/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackNic/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackIfaceIndexAndAddr/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackIfNic/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackIfNicConnect/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackIfNicSelf/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackIfNicSelfConnect/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastLoopbackIfNicSelfNoLoop/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastDropNic/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.TestTwoSocketsJoinSameMulticastGroup/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.TestBindToMcastThenJoinThenReceive/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.SetAndReceiveIPPKTINFO/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.SetAndReceiveIPReceiveOrigDstAddr/*",
                "IPv4UDPSockets/IPv4UDPUnboundSocketTest.IpMulticastIPPacketInfo/*",

                // socket_unix_unbound_abstract_test
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/0",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/1",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/2",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.ListenZeroBacklog/3",
                "AllUnixDomainSockets/UnboundAbstractUnixSocketPairTest.GetSockNamePartialLength/*",

                // unlink_test
                "UnlinkTest.ParentDegradedPermissions",
                "RmdirTest.CanRemoveWithTrailingSlashes",
            ],
        },
        {
            type: "skip",
            matchers: [
                // These tests are flaky.
                "AllInetTests/RawSocketTest.SendAndReceive/*",
                "AllInetTests/RawSocketTest.MultipleSocketReceive/*",
                "AllInetTests/RawSocketTest.RecvBufLimitsEmptyRecvBuffer/*",
                "AllInetTests/RawSocketTest.SendAndReceiveViaConnect/*",
            ],
        },
    ],
}
