// Copyright 2023 The Fuchsia Authors.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        {
            type: "expect_pass",
            matchers: [
                "BitSet*",
                "LooperTest.PollOnce_WhenNon*",
                "LooperTest.PollOnce_WhenZero*",
                "LooperTest.AddFd*",
                "LooperTest.RemoveFd*",
                "LooperTest.SendMessage*",
                "LooperTest.RemoveMessage*",
                "LooperTest.MultiThreaded*",
                "errors.*",
                "LruCacheTest.*",
                "Mutex.*",
                "SharedBufferTest.*",
                "String*",
                "StrongPointer*",
                "Timers*",
                "UnicodeTest.*",
                "VectorTest.*",
                "LooperTest.*",
                "RefBase.*",
                "SystemClock.*",
            ],
        },
        {
            type: "expect_failure",
            matchers: [
                "FileMap.*",
                "SingletonTest.*",
                "errors.unwrap_or_fatal",
                "SharedBufferTest.alloc_death",
                "SharedBufferTest.editResize_death",
                "StrongPointer/0.AssertStrongRefExists",
                "StrongPointer/1.AssertStrongRefExists",
                "Timers.systemTime_invalid",
                "UnicodeTest.InvalidUtf8OverreadDetected",
                "VectorTest.SetCapacity_Overflow",
                "VectorTest._grow_OverflowSize",
                "VectorTest._grow_OverflowCapacityDoubling",
                "VectorTest._grow_OverflowBufferAlloc",
                "VectorTest.removeItemsAt_overflow",
                "LooperTest.PollOnce_WhenCallbackAddedTwice_OnlySecondCallbackShouldBeInvoked",
                "RefBase.AssertWeakRefExistsDeath",
                "RefBase.DoubleOwnershipDeath",
                "VectorTest._grow_OverflowSize",
                "VectorTest._grow_OverflowCapacityDoubling",
                "VectorTest._grow_OverflowBufferAlloc",
                "VectorTest.removeItemsAt_overflow",
                "LooperTest.PollOnce_WhenCallbackAddedTwice_OnlySecondCallbackShouldBeInvoked",
                "RefBase.AssertWeakRefExistsDeath",
                "RefBase.DoubleOwnershipDeath",
            ],
        },
        {
            type: "skip",
            matchers: [],
        },
    ],
}
