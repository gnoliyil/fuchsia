# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/testing/environments.gni")

# For data_filesystem_format
import("//src/storage/fshost/generated_fshost_config.gni")

# This is copied from "//zircon/kernel/lib/instrumentation/asan" to
# detect if we are running an ASAN build.
#
# Note that the `is_asan` check below comes first so that we do not get
# an error that this variable is unused.
#_asan_config = [ "//build/config/sanitizers:asan" ]
#_toolchain_configs = toolchain_variant.configs
#is_asan = _toolchain_configs + _asan_config - _asan_config != _toolchain_configs

# This directory contains tests for diagnostic data presence in "core".
#
# Diagnostics data presence tests touch multiple components on the system
# and are non-hermetic.
#
# We disable these tests in debug, coverage, and ASAN
# builds. Coverage/ASAN will not provide meaningful results for these
# tests, since the tests themselves are only configuration, and the reduced
# performance of such builds makes these tests flaky.
group("tests") {
  testonly = true

  #  if (!is_asan && !is_debug && !is_coverage) {
  deps = [
    ":appmgr-cpu-stats-tests",
    ":appmgr-log-tests",
    ":archivist-feedback-health-tests",
    ":archivist-pipeline-metrics-tests",
    ":archivist-sampler-metrics-tests",
    ":component-manager-cpu-stats-tests",
    ":component-manager-status-tests",
    ":diagnostics-kcounter-inspect-tests",
    ":diagnostics-persistence-inspect-tests",
    ":fshost-stats-tests",
    ":legacy-metrics-tests",
    ":log-stats-inspect-tests",
  ]

  #  }

  if (data_filesystem_format == "fxfs") {
    deps += [ ":fshost-fxfs-stats-tests" ]
  }
}

fuchsia_unittest_package("appmgr-log-tests") {
  manifest = "meta/appmgr_log_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("appmgr-cpu-stats-tests") {
  manifest = "meta/appmgr_cpu_stats_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("fshost-stats-tests") {
  manifest = "meta/fshost_stats_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("fshost-fxfs-stats-tests") {
  manifest = "meta/fshost_fxfs_stats_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("component-manager-status-tests") {
  manifest = "meta/component_manager_status_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("component-manager-cpu-stats-tests") {
  manifest = "meta/component_manager_cpu_stats_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("archivist-feedback-health-tests") {
  manifest = "meta/archivist_feedback_health_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("archivist-pipeline-metrics-tests") {
  manifest = "meta/archivist_pipeline_metrics_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("archivist-sampler-metrics-tests") {
  manifest = "meta/archivist_sampler_metrics_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("legacy-metrics-tests") {
  manifest = "meta/legacy_metrics_tests.cml"

  test_specs = {
    environments = [
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("log-stats-inspect-tests") {
  manifest = "meta/log_stats_inspect_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("diagnostics-kcounter-inspect-tests") {
  manifest = "meta/diagnostics_kcounter_inspect_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}

fuchsia_unittest_package("diagnostics-persistence-inspect-tests") {
  manifest = "meta/persistence_tests.cml"

  test_specs = {
    environments = [
      emu_env,
      {
        dimensions = {
          device_type = "Astro"
        }
      },
    ]
  }
}
