# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/components/fuchsia_test_package.gni")
import("//build/components/fuchsia_unittest_component.gni")
import("//build/components/fuchsia_unittest_package.gni")
import("//build/test.gni")
import("//build/testing/environments.gni")

group("benchmarks") {
  testonly = true
  deps = [
    ":socket-benchmarks-tests",
    ":socket-benchmarks-with-tracing-pkg",
    ":udp-serde-benchmarks",
    "resource-usage:tests",
  ]
}

test("udp_serde_benchmarks") {
  sources = [ "udp_serde_benchmarks.cc" ]

  deps = [
    "//sdk/lib/fidl/cpp/wire",
    "//sdk/lib/syslog/cpp",
    "//src/connectivity/network/netstack/udp_serde",
    "//src/connectivity/network/netstack/udp_serde:udp_serde_test_util",
    "//src/lib/fxl",
    "//zircon/system/ulib/perftest",
  ]
}

test("socket_benchmarks") {
  sources = [
    "../os.h",
    "socket_benchmarks.cc",
  ]
  if (is_fuchsia) {
    sources += [
      "tracing.cc",
      "tracing.h",
    ]
  }

  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/perftest",
    "//zircon/system/ulib/zx",
  ]
  if (is_fuchsia) {
    deps += [
      "//sdk/fidl/fuchsia.tracing.controller:fuchsia.tracing.controller_cpp",
      "//sdk/lib/component/incoming/cpp",
      "//zircon/system/ulib/trace",
      "//zircon/system/ulib/trace-provider",
    ]
  }
}

fuchsia_unittest_component("socket-benchmarks") {
  manifest = "meta/socket-benchmarks.cml"
  deps = [
    ":socket_benchmarks",
    "//src/connectivity/network/netstack:component",
  ]
}

fuchsia_unittest_component("socket-benchmarks-with-fast-udp") {
  manifest = "meta/socket-benchmarks-with-fast-udp.cml"
  deps = [
    ":socket_benchmarks",
    "//src/connectivity/network/netstack:component-with-fast-udp",
  ]
}

fuchsia_unittest_component("socket-benchmarks-with-fake-netstack") {
  manifest = "meta/socket-benchmarks-with-fake-netstack.cml"
  deps = [
    ":socket_benchmarks",
    "fake-netstack",
  ]
}

fuchsia_unittest_component("socket-benchmarks-with-netstack3") {
  manifest = "meta/socket-benchmarks-with-netstack3.cml"
  deps = [
    ":socket_benchmarks",
    "//src/connectivity/network/netstack3:component",
  ]
}

fuchsia_test_package("socket-benchmarks-tests") {
  test_components = [
    ":socket-benchmarks",
    ":socket-benchmarks-with-fake-netstack",
    ":socket-benchmarks-with-fast-udp",
    ":socket-benchmarks-with-netstack3",
  ]
}

fuchsia_unittest_component("socket-benchmarks-with-tracing") {
  manifest = "meta/socket-benchmarks-with-tracing.cml"
  deps = [
    ":socket_benchmarks",
    "//src/connectivity/network/netstack:component-with-tracing",
  ]
}

# TODO(https://fxbug.dev/117883): Delete this once Fast UDP is the default.
fuchsia_unittest_component("socket-benchmarks-with-fast-udp-tracing") {
  manifest = "meta/socket-benchmarks-with-fast-udp-tracing.cml"
  deps = [
    ":socket_benchmarks",
    "//src/connectivity/network/netstack:component-with-fast-udp-tracing",
  ]
}

fuchsia_test_package("socket-benchmarks-with-tracing-pkg") {
  test_components = [
    ":socket-benchmarks-with-tracing",
    ":socket-benchmarks-with-fast-udp-tracing",
  ]

  # Prevent this test from being run as a target-side test, since it's kicked
  # off by the dart wrapper.
  test_specs = {
    environments = []
  }
}

fuchsia_unittest_package("udp-serde-benchmarks") {
  manifest = "meta/udp-serde-benchmarks.cml"
  deps = [ ":udp_serde_benchmarks" ]
}

group("tests") {
  testonly = true
  deps = [
    ":socket-benchmarks-tests",
    ":udp-serde-benchmarks",
    "resource-usage:tests",
  ]
  if (host_os == "linux") {
    deps += [ ":socket_benchmarks($host_toolchain)" ]
  }
}
