# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//build/cipd.gni")
import("//build/components.gni")
import("//build/dist/resource.gni")
import("//build/drivers.gni")

# Firmware file copying below.  There are three targets:
#
# * brcmfmac-firmware-copy
# * brcmfmac-nvram-copy
# * brcmfmac-clm-copy
#
# which copy the firmware, NVRAM definition, and CLM blob respectively.  They are either copy()
# targets, or empty group() targets, for use in the driver_driver_package() targets below.
#
# All files that must be included as libraries in the driver_driver_package() target are added to the
# driver_library_files list.

template("brcmfmac_driver") {
  if (internal_access) {
    forward_variables_from(invoker,
                           [
                             "board",
                             "chip",
                             "bus",
                             "clm_present",
                           ])
  } else {
    not_needed(invoker, "*")
  }
  orig_target_name = target_name
  _deps = []

  if (internal_access) {
    resource("brcmfmac-firmware-${orig_target_name}") {
      sources = [ "firmware/${chip}-${bus}-${board}.bin" ]
      outputs = [ "lib/firmware/brcmfmac/${chip}-${bus}.bin" ]
    }
    resource("brcmfmac-nvram-${orig_target_name}") {
      sources = [ "firmware/${chip}-${bus}-${board}.txt" ]
      outputs = [ "lib/firmware/brcmfmac/${chip}-${bus}.txt" ]
    }
    _deps += [
      ":brcmfmac-firmware-${orig_target_name}",
      ":brcmfmac-nvram-${orig_target_name}",
    ]
    if (clm_present) {
      resource("brcmfmac-clm-${orig_target_name}") {
        sources = [ "firmware/${chip}-${bus}-${board}.clm_blob" ]
        outputs = [ "lib/firmware/brcmfmac/${chip}-${bus}.clm_blob" ]
      }
      _deps += [ ":brcmfmac-clm-${orig_target_name}" ]
    }
  }

  # Targets not needed for the driver itself, but should be included whenever
  # the driver is.
  if (defined(invoker.diagnostic_deps)) {
    _deps += invoker.diagnostic_deps
  }

  # Driver package for the brcmfmac driver.
  fuchsia_driver_package(orig_target_name) {
    deps = _deps
    driver_components = [ ":fuchsia_driver" ]
    visibility = [ "*" ]
  }

  fuchsia_driver_package("test-${orig_target_name}") {
    deps = _deps
    driver_components = [ ":test_fuchsia_driver" ]
    visibility = [ "*" ]
  }
}
