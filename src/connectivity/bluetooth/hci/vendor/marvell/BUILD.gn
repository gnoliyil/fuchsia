# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")
import("//third_party/github.com/google/emboss/build_defs.gni")

driver_bind_rules("bt_hci_marvell_bind") {
  rules = "bt_hci_marvell.bind"
  header_output = "bt_hci_marvell_bind.h"
  tests = "bind_tests.json"
  deps = [
    ":fuchsia.bt.vendor.marvell",
    "//src/devices/bind/fuchsia.sdmmc",
  ]
}

bind_library("fuchsia.bt.vendor.marvell") {
  source = "fuchsia.bt.vendor.marvell.bind"
}

source_set("common") {
  configs += [ "//build/config:all_source" ]
  sources = [
    "bt_hci_marvell.cc",
    "bt_hci_marvell.h",
    "device_oracle.cc",
    "device_oracle.h",
    "host_channel.h",
    "host_channel_manager.cc",
    "host_channel_manager.h",
    "interrupt_key_allocator.h",
  ]
  deps = [
    ":bt_hci_marvell_bind",
    "//src/devices/lib/driver",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/fzl",
  ]
  public_deps = [
    ":marvell-frame",
    "//sdk/banjo/fuchsia.hardware.bt.hci:fuchsia.hardware.bt.hci_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.sdio:fuchsia.hardware.sdio_banjo_cpp",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/sync:sync-cpp",
    "//zircon/system/ulib/zircon-internal",
  ]
}

emboss_cc_library("marvell-frame") {
  source = "marvell_frame.emb"
}

fuchsia_driver("bt-hci-marvell-driver") {
  output_name = "bt-hci-marvell"
  deps = [ ":common" ]
}

fuchsia_driver_component("bt-hci-marvell") {
  component_name = "bt-hci-marvell"
  deps = [ ":bt-hci-marvell-driver" ]
  info = "bt-hci-marvell-info.json"
  colocate = true
}

fuchsia_driver_package("marvell") {
  driver_components = [ ":bt-hci-marvell" ]
  deps = []
}

group("tests") {
  testonly = true
  deps = [
    ":bt_hci_marvell_bind_test",
    "tests",
  ]
}
