# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/config.gni")
import("//build/rust/rustc_binary.gni")
import("//src/sys/core/build/core_shard.gni")

rustc_binary("bin") {
  name = "bt_init"
  edition = "2021"
  source_root = "src/main.rs"
  with_unit_tests = true

  deps = [
    ":bt_init_config",
    "//sdk/fidl/fuchsia.bluetooth.bredr:fuchsia.bluetooth.bredr_rust",
    "//sdk/fidl/fuchsia.bluetooth.snoop:fuchsia.bluetooth.snoop_rust",
    "//sdk/fidl/fuchsia.bluetooth.sys:fuchsia.bluetooth.sys_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:tracing",
  ]

  test_deps = [
    "//src/lib/fuchsia",
    "//src/lib/zircon/rust:fuchsia-zircon",
  ]

  sources = [ "src/main.rs" ]

  configs -= [ "//build/config/rust/lints:allow_unused_results" ]
}

fuchsia_component_manifest("manifest") {
  component_name = "bt-init"
  manifest = "meta/bt-init.cml"
}

fuchsia_structured_config_rust_lib("bt_init_config") {
  cm_label = ":manifest"
}

fuchsia_structured_config_values("default_config_values") {
  cm_label = ":manifest"
  values = {
    autostart_snoop = true
  }
}

fuchsia_component("component") {
  cm_label = ":manifest"
  deps = [ ":bin" ]
}

fuchsia_package("bt-init") {
  deps = [
    ":component",
    ":default_config_values",
  ]
}

fuchsia_component("testonly_component") {
  manifest = "meta/bt-init-testonly.cml"
  component_name = "bt-init-testonly"
  deps = [ ":bin" ]
}

fuchsia_package("bt-init-testonly") {
  deps = [
    ":default_config_values",
    ":testonly_component",
  ]
}

# The fuchsia.bluetooth.sys.Bootstrap service is not relevant to all configurations, so products
# that require it should include this shard to expose the protocol to appmgr via bt-init.
core_shard("bt-bootstrap-core-shard") {
  shard_file = "meta/bt-bootstrap.core_shard.cml"
}

core_shard("fastpair-core-shard") {
  shard_file = "meta/bt-fastpair.core_shard.cml"
}

# The fuchsia.bluetooth.rfcomm.test.RfcommTest capability is only relevant to test configurations.
# Product integrators that require it should include this shard to expose the protocol to appmgr via
# bt-init.
core_shard("bt-init-testonly-core-shard") {
  shard_file = "meta/bt-init-testonly.core_shard.cml"
}

fuchsia_unittest_package("tests") {
  component_name = "bt-init-unittests"
  package_name = "bt-init-unittests"

  deps = [
    ":bin_test",
    ":default_config_values",
  ]
}
