# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fuzz.gni")
import("//src/connectivity/bluetooth/core/bt-host/build/bt_gtest_package.gni")

source_set("common") {
  sources = [
    "advertising_data.cc",
    "advertising_data.h",
    "assert.h",
    "bounded_inspect_list_node.cc",
    "bounded_inspect_list_node.h",
    "byte_buffer.cc",
    "byte_buffer.h",
    "device_address.cc",
    "device_address.h",
    "device_class.cc",
    "device_class.h",
    "error.h",
    "expiring_set.h",
    "fake_inspect.h",
    "host_error.cc",
    "host_error.h",
    "identifier.cc",
    "identifier.h",
    "inspect.h",
    "inspectable.h",
    "log.cc",
    "log.h",
    "macros.h",
    "manufacturer_names.cc",
    "manufacturer_names.h",
    "metrics.cc",
    "metrics.h",
    "packet_view.h",
    "pipeline_monitor.h",
    "random.cc",
    "random.h",
    "retire_log.cc",
    "retire_log.h",
    "slab_allocator.cc",
    "slab_allocator.h",
    "slab_buffer.h",
    "supplement_data.cc",
    "supplement_data.h",
    "to_string.h",
    "trace.h",
    "uint128.h",
    "uint256.h",
    "uuid.cc",
    "uuid.h",
    "weak_self.h",
    "windowed_inspect_numeric_property.h",
  ]

  public_deps = [
    "//sdk/lib/fit",
    "//sdk/lib/sys/inspect/cpp",
    "//src/connectivity/bluetooth/lib/cpp-string",
    "//src/connectivity/bluetooth/lib/cpp-type",
    "//third_party/pigweed:pw_assert",
    "//third_party/pigweed:pw_intrusive_ptr",
    "//third_party/pigweed:pw_log",
    "//third_party/pigweed:pw_random",
    "//third_party/pigweed:pw_span",
    "//third_party/pigweed:pw_string",
    "//third_party/pigweed/src/pw_bluetooth:emboss_hci",
    "//zircon/system/ulib/async:async-cpp",
    "//zircon/system/ulib/async-default",
  ]
}

source_set("tests") {
  testonly = true

  sources = [
    "advertising_data_unittest.cc",
    "bounded_inspect_list_node_unittest.cc",
    "byte_buffer_unittest.cc",
    "device_address_unittest.cc",
    "device_class_unittest.cc",
    "error_unittest.cc",
    "expiring_set_unittest.cc",
    "identifier_unittest.cc",
    "inspectable_unittest.cc",
    "manufacturer_names_unittest.cc",
    "metrics_unittest.cc",
    "packet_view_unittest.cc",
    "pipeline_monitor_unittest.cc",
    "retire_log_unittest.cc",
    "slab_allocator_unittest.cc",
    "supplement_data_unittest.cc",
    "uuid_unittest.cc",
    "weak_self_unittest.cc",
    "windowed_inspect_numeric_property_unittest.cc",
  ]

  deps = [
    ":common",
    "//src/connectivity/bluetooth/core/bt-host/testing",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
  ]
}

bt_gtest_package("bt-host-common-tests") {
  with_death_tests = true
  deps = [ ":tests" ]
}

fuchsia_library_fuzzer("advertising_data_fuzzer") {
  sources = [ "advertising_data_fuzztest.cc" ]
  deps = [
    ":common",
    "//src/connectivity/bluetooth/core/bt-host/testing:fuzztest_driver",
  ]
}
