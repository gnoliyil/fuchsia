# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import "hci-protocol.emb" as hci

[$default byte_order: "LittleEndian"]
[(cpp) namespace: "pw::bluetooth::emboss"]
# This file contains packet definitions for extensions to the Bluetooth Host-Controller interface. 
# These extensions are not standardized through the Bluetooth SIG.
#
# NOTE: The definitions below are incomplete. They get added as needed.
# This list will grow as we support more vendor features.

# ======================= Android HCI extensions ========================
# Documentation: https://source.android.com/devices/bluetooth/hci_requirements


# ============ Events ============


struct LEMultiAdvtStateChangeSubevent:
  -- LE multi-advertising state change subevent.
  0     [+hci.VendorDebugEvent.$size_in_bytes]  hci.VendorDebugEvent  vendor_event
  $next [+1]                                    UInt                  advertising_handle
    -- Handle used to identify an advertising set.

  $next [+1]                                    hci.StatusCode        status
    -- Reason for state change. Currently will always be 0x00.
    -- 0x00: Connection received.

  $next [+2]                                    UInt                  connection_handle
    -- Handle used to identify the connection that caused the state change (i.e.
    -- advertising instance to be disabled). Value will be 0xFFFF if invalid.
