# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_library.gni")

rustc_library("openthread_fuchsia") {
  edition = "2021"
  with_unit_tests = true
  deps = [
    "//sdk/fidl/fuchsia.net:fuchsia.net_rust",
    "//sdk/fidl/fuchsia.net.mdns:fuchsia.net.mdns_rust",
    "//src/connectivity/lowpan/lib/lowpan_driver_common",
    "//src/connectivity/lowpan/lib/openthread_rust:openthread",
    "//src/connectivity/lowpan/lib/openthread_sys",
    "//src/connectivity/lowpan/lib/spinel_pack",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:hex",
    "//third_party/rust_crates:socket2",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:tracing",
  ]

  sources = [
    "src/backing/alarm.rs",
    "src/backing/infra_if.rs",
    "src/backing/mod.rs",
    "src/backing/radio.rs",
    "src/backing/reset.rs",
    "src/backing/trel.rs",
    "src/backing/udp.rs",
    "src/binding.rs",
    "src/lib.rs",
    "src/logging.rs",
    "src/to_escaped_string.rs",
  ]

  non_rust_deps =
      [ "//src/connectivity/openthread/third_party/openthread/platform" ]

  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
}

fuchsia_unittest_package("openthread-fuchsia-tests") {
  deps = [ ":openthread_fuchsia_test" ]
}

group("tests") {
  testonly = true
  deps = [ ":openthread-fuchsia-tests" ]
}
