// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        // Import the default behaviour (gVisor tests running on tmpfs)
        {
            include: "default.json5",
        },

        // Define tests that failed when running on Fxfs
        {
            type: "expect_failure",
            matchers: [
                // access_test
                "AccessTest.RelativeFile",
                "AccessTest.RelativeDir",
                "AccessTest.AbsFile",
                "AccessTest.AbsDir",
                "AccessTest.RelDoesNotExist",
                "AccessTest.AbsDoesNotExist",
                "AccessTest.InvalidMode",
                "AccessTest.NoPerms",
                "AccessTest.InvalidName",
                "AccessTest.UsrReadOnly",
                "AccessTest.UsrReadExec",
                "AccessTest.UsrReadWrite",
                "AccessTest.UsrReadWriteExec",

                // chdir_test
                "ChdirTest.PermissionDenied",
                "ChdirTest.Success",

                // chmod_test
                "ChmodTest.ChmodDirSucceeds",
                "ChmodTest.FchmodatDir",
                "ChmodTest.FchmodatDirAbsolutePath",
                "ChmodTest.FchmodDirSucceeds",
                "ChmodTest.FchmodDirWithOpath",

                // chown_test
                "ChownKinds/ChownParamTest.ChownFileSucceedsAsRoot/*",
                "ChownTest.FchownDirWithOpath",
                "ChownTest.FchownatWithOpath",
                "ChownTest.FchownatEmptyPath",

                // chroot_test
                "ChrootTest.ProcFdLinkResolutionInChroot",
                "ChrootTest.ProcMemSelfFdsNoEscapeProcOpen",
                "ChrootTest.ProcMountsMountinfoNoEscape",
                "ChrootTest.DotDotFromOpenFD",
                "ChrootTest.CreatesNewRoot",
                "ChrootTest.WithoutCapability",
                "ChrootTest.PermissionDenied",

                // exec_test
                "ExecTest.SymlinkLimitRefreshedForInterpreter",

                // fallocate_test
                "AllocateTest.Fallocate",

                // fchdir_test
                "FchdirTest.FchdirWithOpath",
                "FchdirTest.PermissionDenied",
                "FchdirTest.Success",

                // fcntl_test
                "FcntlLockTest.SetLockAcrossRename",
                "FcntlLockTest.SetLockDir",
                "FcntlTest.GetOpathFlag",

                // fifo_test
                "FifoTest.Fifo",
                "FifoTest.FifoOpenRDWR",
                "FifoTest.FifoOtrunc",
                "FifoTest.FifoTruncNoOp",
                "FifoTest.MknodAtFIFO",

                // flock_test
                "FlockTestNoFixture.FlockDir",

                // fsync_test
                "FsyncTest.TempDirSucceeds",

                // fuse_test
                "FuseTest.RejectBadInit",

                // getdents_test
                "GetdentsTest/*.Issue128ProcSeekEnd",
                "GetdentsTest/*.LargeDir",
                "GetdentsTest/*.NotDir",
                "GetdentsTest/*.OpathDirectory",
                "GetdentsTest/*.OpathFile",
                "GetdentsTest/*.PartialBuffer",
                "GetdentsTest/*.ProcSelfFd",
                "GetdentsTest/*.SeekResetsCursor",
                "GetdentsTest/*.SmallDir",
                "GetdentsTest/*.VerifyEntries",
                "GetdentsTest/*.VerifyPadding",
                "GetdentsTest/*.ZeroLengthOutBuffer",
                "ReaddirTest.GoneAfterRemoveCache",
                "ReaddirTest.GoneAfterRenameCache",

                // inotify_test
                "Inotify.CanDeleteFileAfterRemovingWatch",
                "Inotify.ClosingInotifyFdWithoutRemovingWatchesWorks",
                "Inotify.ConcurrentFileDeletionAndWatchRemoval",
                "InotifyTest.NotifyNoDeadlock",

                // link_test
                "LinkTest.AbsPathsNonDirFDsWithOpath",
                "LinkTest.AbsPathsWithNonDirFDs",
                "LinkTest.CanCreateLinkFile",
                "LinkTest.CannotLinkDirectory",
                "LinkTest.LinkDoesNotFollowSymlinks",
                "LinkTest.LinkatDoesNotFollowSymlinkByDefault",
                "LinkTest.LinkatWithSymlinkFollow",
                "LinkTest.NewDirFDWithOpath",
                "LinkTest.WithNewDirFD",
                "LinkTest.WithOldDirFD",

                // mkdir_test
                "MkdirTest.CanCreateWritableDir",
                "MkdirTest.DirAlreadyExists",
                "MkdirTest.FailsOnDirWithoutWritePerms",
                "MkdirTest.HonorsUmask",
                "MkdirTest.HonorsUmask2",
                "MkdirTest.MkdirAtEmptyPath",
                "MkdirTest.TrailingSlash",

                // mknod_test
                "MknodTest.MknodAtEmptyPath",
                "MknodTest.MknodAtFIFO",
                "MknodTest.RegularFilePermissions",
                "MknodTest.Socket",

                // mount_test
                "MountTest.ArgumentsAreIgnored",
                "MountTest.BindParentToChild",
                "MountTest.BindPeerGroupsWithChildren",
                "MountTest.BindSharedOnPrivate",
                "MountTest.BindSharedOnShared",
                "MountTest.DeadMountsAreDecRefd",
                "MountTest.InerheritPropagation",
                "MountTest.MakeMultipleShared",
                "MountTest.MakePeer",
                "MountTest.MakePrivate",
                "MountTest.MakeShared",
                "MountTest.MountBadFilesystem",
                "MountTest.MountInfoHasRoot",
                "MountTest.MountNoAtime",
                "MountTest.MountOverBusy",
                "MountTest.MountPermDenied",
                "MountTest.MountTmpfs",
                "MountTest.MultiplePropagationFlagsFails",
                "MountTest.NullData",
                "MountTest.PropagateMountEvent",
                "MountTest.RenameRemoveMountPoint",
                "MountTest.SetMountPropagationOfStackedMounts",
                "MountTest.SimpleBind",
                "MountTest.TmpfsSizeFtruncate",
                "MountTest.TmpfsUnlinkRegularFileAllocCheck",
                "MountTest.UmountDetach",
                "MountTest.UmountIgnoresPeersWithChildren",
                "MountTest.UmountMountsStackedOnDot",
                "MountTest.UmountNoFollow",
                "MountTest.UmountPermDenied",

                // open_create_test
                "CreateTest.CreatDirWithOTruncAndReadOnly",
                "CreateTest.CreatFileWithOTruncAndReadOnly",
                "CreateTest.CreatWithOTrunc",
                "CreateTest.CreateAtFile",
                "CreateTest.CreateExclusively",
                "CreateTest.CreateFailsOnDirWithoutWritePerms",
                "CreateTest.CreateWithReadFlagNotAllowedByMode",
                "CreateTest.CreateWithWriteFlagNotAllowedByMode",
                "CreateTest.ExistingFile",
                "CreateTest.HonorsUmask",
                "CreateTest.TmpFile",

                // open_test
                "OpenTest.CanTruncateWithStrangePermissions",
                "OpenTest.MustCreateExisting",
                "OpenTest.OCreateDirectory",
                "OpenTest.OpenNoFollowStillFollowsLinksInPath",
                "OpenTest.OpenNoFollowSymlink",
                "OpenTest.OpenWithOpath",
                "OpenTest.OTrunc",
                "OpenTest.OTruncAndReadOnlyDir",
                "OpenTest.OTruncAndReadOnlyFile",
                "OpenTest.SymlinkDirectory",
                "OpenTest.SymlinkRecurse",
                "OpenTest.Truncate",

                // read_test
                "ReadTest.PartialReadSIGSEGV",

                // rename_test
                "RenameTest.DirectoryDoesNotOverwriteFile",
                "RenameTest.DirectoryDoesNotOverwriteNonemptyDirectory",
                "RenameTest.DirectoryOverwritesDirectoryLinkCount",
                "RenameTest.DirectoryOverwritesEmptyDirectory",
                "RenameTest.DirectoryToChildDirectory",
                "RenameTest.DirectoryToOwnChildDirectory",
                "RenameTest.DirectoryToParentDirectory",
                "RenameTest.DirectoryToSameDirectory",
                "RenameTest.DirectoryToSelf",
                "RenameTest.DirectoryWithOpenFdOverwritesEmptyDirectory",
                "RenameTest.FailsWhenNewParentNotWritable",
                "RenameTest.FailsWhenOldParentNotWritable",
                "RenameTest.FailsWithDots",
                "RenameTest.FileDoesNotExist",
                "RenameTest.FileDoesNotExistWhenNewParentNotExecutable",
                "RenameTest.FileDoesNotOverwriteDirectory",
                "RenameTest.FileOverwritesFile",
                "RenameTest.FileToChildDirectory",
                "RenameTest.FileToParentDirectory",
                "RenameTest.FileToSameDirectory",
                "RenameTest.FileWithOpenFd",
                "RenameTest.OverwriteFailsWhenNewParentNotWritable",
                "RenameTest.PathEndingWithDots",
                "RenameTest.RenameAfterWritableFDAndChmod",
                "RenameTest.SourceIsAncestorOfTarget",
                "RenameTest.TargetIsAncestorOfSource",
                "Renameat2Test.NoReplaceDot",

                // stat_test
                "StatTest.FstatDirWithOpath",
                "StatTest.FstatatDirWithOpath",
                "StatTest.FstatatSymlinkDir",
                "StatTest.FstatatSymlinkDirWithTrailingSlash",
                "StatTest.FstatatSymlinkDirWithTrailingSlashSameInode",
                "StatTest.LinkCountsWithDirChild",
                "StatTest.LinkCountsWithRegularFileChild",
                "StatTest.LstatELOOPPath",
                "StatTest.LstatSymlinkDir",
                "StatTest.Nlinks",
                "StatTest.PathCanContainDotDot",
                "StatTest.PathCanContainEmptyComponent",
                "StatTest.PathNotCleaned",
                "StatTest.StatDoesntChangeAfterRename",
                "StatTest.TrailingSlashNotCleanedReturnsENOTDIR",
                "StatTest.ZeroLinksOpenFdRegularFileChild_NoSave",

                // stat_times_test
                "StatTimesTest.DirCreateDir",
                "StatTimesTest.DirCreateFile",
                "StatTimesTest.DirList",
                "StatTimesTest.DirRemoveFile",
                "StatTimesTest.FileRename",
                "StatTimesTest.FileRenameOpenFD",

                // sticky_test
                "StickyTest.StickyBitCapFOWNER",
                "StickyTest.StickyBitPermDenied",
                "StickyTest.StickyBitSameUID",

                // truncate_test
                "TruncateTest.FtruncateDir",
                "TruncateTest.TruncateDir",

                // unlink_test
                "RmdirTest.CanRemoveWithTrailingSlashes",
                "RmdirTest.CannotRemoveDots",
                "UnlinkTest.AtBad",
                "UnlinkTest.AtDir",
                "UnlinkTest.AtDirDegradedPermissions",
                "UnlinkTest.DirNotEmpty",
                "UnlinkTest.IsDir",
                "UnlinkTest.ParentDegradedPermissions",
                "UnlinkTest.Rmdir",
                "UnlinkTest.UnlinkAtEmptyPath",

                // xattr_test
                "XattrTest.GetXattr",
                "XattrTest.GetXattrNonexistentName",
                "XattrTest.GetXattrNullValue",
                "XattrTest.GetXattrNullValueAndZeroSize",
                "XattrTest.GetXattrSizeLargerThanValue",
                "XattrTest.GetXattrSizeSmallerThanValue",
                "XattrTest.GetXattrSizeTooLarge",
                "XattrTest.GetXattrZeroSize",
                "XattrTest.LXattrOnNonsymlink",
                "XattrTest.LXattrOnSymlink",
                "XattrTest.ListXattr",
                "XattrTest.ListXattrNoXattrs",
                "XattrTest.ListXattrNullBuffer",
                "XattrTest.ListXattrSizeTooSmall",
                "XattrTest.ListXattrZeroSize",
                "XattrTest.RemoveXattr",
                "XattrTest.RemoveXattrNonexistentName",
                "XattrTest.SetXattrCreateFlag",
                "XattrTest.SetXattrNullValueAndNonzeroSize",
                "XattrTest.SetXattrNullValueAndZeroSize",
                "XattrTest.SetXattrReplaceFlag",
                "XattrTest.SetXattrReplaceWithLarger",
                "XattrTest.SetXattrReplaceWithSmaller",
                "XattrTest.SetXattrSizeSmallerThanValue",
                "XattrTest.SetXattrSizeTooLarge",
                "XattrTest.SetXattrValueTooLargeButOKSize",
                "XattrTest.SetXattrZeroSize",
                "XattrTest.TrustedNamespaceWithCapSysAdmin",
                "XattrTest.TrustedNamespaceWithoutCapSysAdmin",
                "XattrTest.XattrOnDirectory",
                "XattrTest.XattrOnSymlink",
                "XattrTest.XattrReadOnly",
                "XattrTest.XattrTrustedWithNonadmin",
                "XattrTest.XattrWithFD",
                "XattrTest.XattrWriteOnly",
            ],
        },
        {
            type: "skip",
            matchers: [
                // These tests pass and fail in different cases
                // Skip these tests for now until it can pass in all cases
                "Pwrite64.Overflow",
                "ExecTest.InterpreterScriptNoPath",
                "AbstractUnixSockets/UnixSocketPairTest.SendFromMmapBeyondEof/*",
                "AllUnixDomainSockets/UnixSocketPairTest.SendFromMmapBeyondEof/*",
                "Renameat2Test.NoReplaceSuccess",

                // readv_test
                "ReadvTestNoFixture.TruncatedAtMax",

                // accept_bind_test
                // Tests [0-3] fail.
                // Skip all until we fix the issue causing the tests to fail
                "AllUnixDomainSockets/AllSocketPairTest.Listen/*",
                "AllUnixDomainSockets/AllSocketPairTest.ListenIncreaseBacklog/*",
                "AllUnixDomainSockets/AllSocketPairTest.ListenDecreaseBacklog/*",
                "AllUnixDomainSockets/AllSocketPairTest.ListenBacklogSizes/*",
                "AllUnixDomainSockets/AllSocketPairTest.DoubleBind/*",
                "AllUnixDomainSockets/AllSocketPairTest.BindListenBind/*",
                "AllUnixDomainSockets/AllSocketPairTest.DoubleListen/*",
                "AllUnixDomainSockets/AllSocketPairTest.DoubleConnect/*",
                "AllUnixDomainSockets/AllSocketPairTest.Connect/*",
                "AllUnixDomainSockets/AllSocketPairTest.ConnectWithWrongType/*",
                "AllUnixDomainSockets/AllSocketPairTest.ConnectNonListening/*",
                "AllUnixDomainSockets/AllSocketPairTest.SelfConnect/*",
                "AllUnixDomainSockets/AllSocketPairTest.ConnectWithoutListen/*",
                "AllUnixDomainSockets/AllSocketPairTest.Accept/*",
                "AllUnixDomainSockets/AllSocketPairTest.AcceptValidAddrLen/*",
                "AllUnixDomainSockets/AllSocketPairTest.AcceptNegativeAddrLen/*",
                "AllUnixDomainSockets/AllSocketPairTest.AcceptLargePositiveAddrLen/*",
                "AllUnixDomainSockets/AllSocketPairTest.AcceptVeryLargePositiveAddrLen/*",
                "AllUnixDomainSockets/AllSocketPairTest.AcceptWithoutListen/*",
                "AllUnixDomainSockets/AllSocketPairTest.GetRemoteAddress/*",
                "AllUnixDomainSockets/AllSocketPairTest.UnboundGetLocalAddress/*",
                "AllUnixDomainSockets/AllSocketPairTest.BoundGetLocalAddress/*",
                "AllUnixDomainSockets/AllSocketPairTest.BoundConnector/*",
                "AllUnixDomainSockets/AllSocketPairTest.BoundGetLocalAddress/*",
                "AllUnixDomainSockets/AllSocketPairTest.UnboundSenderAddr/*",
                "AllUnixDomainSockets/AllSocketPairTest.BoundSenderAddr/*",
                "AllUnixDomainSockets/AllSocketPairTest.BindAfterConnectSenderAddr/*",
                "AllUnixDomainSockets/AllSocketPairTest.BindAfterAcceptSenderAddr/*",

                // accept_bind_stream test
                // Tests [0-1] fail.
                // Skip all until we fix the issue causing the tests to fail
                "AllUnixDomainSockets/AllSocketPairTest.BoundSenderAddrCoalesced/*",

                // bind_test
                // Tests [0-5] fail.
                // Skip all until we fix the issue causing the tests to fail
                "AllUnixDomainSockets/AllSocketPairTest.Bind/*",
                "AllUnixDomainSockets/AllSocketPairTest.DoubleBindSocket/*",
                "AllUnixDomainSockets/AllSocketPairTest.GetLocalAddr/*",
                "AllUnixDomainSockets/AllSocketPairTest.DoubleBindAddress/*",
                "AllUnixDomainSockets/AllSocketPairTest.Unbind/*",

                // chroot_test - panicked
                "ChrootTest.ProcMemSelfFdsYesEscapeProcOpen",
                "ChrootTest.ProcMountsMountinfoNoEscape",
                "ChrootTest.Success",

                // epoll_test - these tests hang
                "EpollTest.AllWritable",
                "EpollTest.CloseFile",
                "EpollTest.CycleOfOneDisallowed",
                "EpollTest.CycleOfThreeDisallowed",
                "EpollTest.DoubleLayerEpoll",
                "EpollTest.EdgeTriggered",
                "EpollTest.EpollPwait2Timeout",
                "EpollTest.LastNonWritable",
                "EpollTest.LastReadable",
                "EpollTest.Oneshot",
                "EpollTest.PipeReaderHupAfterWriterClosed",
                "EpollTest.ReadyMutexCircularity",
                "EpollTest.RegularFiles",
                "EpollTest.Timeout",
                "EpollTest.TimeoutNoFds",
                "EpollTest.UnblockWithNewFD",
                "EpollTest.WaitThenUnblock",

                // msync_test
                // Test 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23 fails
                // sometimes. Skip all tests for now.
                "All/MsyncFullParamTest.InvalidateUnlockedSucceeds/*",
                "All/MsyncFullParamTest.NormallySucceeds/*",
                "All/MsyncFullParamTest.UnalignedAddressFails/*",
                "All/MsyncFullParamTest.UnalignedLengthSucceeds/*",

                // mmap_test - these tests hang
                "MMapTest.AccessCOWInvalidatesCachedSegments",
                "MMapTest.BadFd",
                "MMapTest.ExceedLimitAS",
                "MMapTest.ExceedLimitData",
                "MMapTest.ExceedLimitDataPrlimit",
                "MMapTest.ExceedLimitDataPrlimitPID",
                "MMapTest.FixedAlignment",
                "MMapTest.HugeLength",
                "MMapTest.HintAddress",
                "MMapTest.InvalidLength",
                "MMapTest.MapAnything",
                "MMapTest.MapCharDevice",
                "MMapTest.MapDevZeroShared",
                "MMapTest.MapDevZeroPrivate",
                "MMapTest.MapDevZeroNoPersistence",
                "MMapTest.MapDevZeroSharedMultiplePages",
                "MMapTest.MapDevZeroSharedFdNoPersistence",
                "MMapTest.MapDevZeroSegfaultAfterUnmap",
                "MMapTest.MapDevZeroUnaligned",
                "MMapTest.MapDirectory",
                "MMapTest.MapFixed",
                "MMapTest.MapFixed64",
                "MMapTest.MapStack",
                "MMapTest.MapLocked",
                "MMapTest.MapPipe",
                "MMapTest.MprotectHugeLength",
                "MMapTest.MprotectNotPageAligned",
                "MMapTest.NoExceedLimitAS",
                "MMapTest.NoExceedLimitData",
                "MMapTest.NonFixedAlignment",
                "MMapTest.NoReserve",
                "MMapTest.NotPrivateOrShared",
                "MMapTest.PrivateAndShared",
                "MMapTest.ProtectProtWrite",
                "MMapTest.ProtExec",
                "MMapTest.ProtWrite",
                "MMapTest.ProtWriteOnly",
                "MMapTest.ProtWriteOnlyReadable",
                "MMapTest.SettingProtNoneDoesntFreeMemory",
                "MMapTest.SmallMap",
                "MMapFileTest.Bug38498194",
                "MMapFileTest.InternalSigBus",
                "MMapFileTest.InternalSigBusZeroing",
                "MMapFileTest.MapLastPositivePage",
                "MMapFileTest.MapOffset",
                "MMapFileTest.MapSecondToLastPositivePage",
                "MMapFileTest.MapFirstNegativePage",
                "MMapFileTest.MapLastNegativePage",
                "MMapFileTest.MapSecondToLastNegativePage",
                "MMapFileTest.MmapFileWithOpath",
                "MMapFileTest.Read",
                "MMapFileTest.ReadingWritableSharedFilePageSucceeds",
                "MMapFileTest.ReadSharedConsistentWithOverwrite",
                "MMapFileTest.ReadSharedConsistentWithPartialOverwrite",
                "MMapFileTest.ReadSharedConsistentWithWriteAndFile",
                "MMapFileTest.ReadSharedTruncateDownThenUp",
                "MMapFileTest.ReadSharedTruncatePartialPage",
                "MMapFileTest.SelfRead",
                "MMapFileTest.SelfWrite",
                "MMapFileTest.WritePrivate",
                "MMapFileTest.WritePrivateOnReadOnlyFd",
                "MMapFileTest.WriteShared",
                "MMapFileTest.WriteSharedBeyondEnd",
                "MMapFileTest.WriteSharedOnReadOnlyFd",
                "MMapFileTest.WriteSharedTruncateDownThenUp",
                "MMapFileTest.WriteSharedTruncatePartialPage",
                "MMapFileTest.WriteSharedTruncateUp",
                "MMapNoFixtureTest.Map32Bit",
                "MMapNoFixtureTest.MapReadOnlyAfterCreateWriteOnly",
                "ReadWriteSharedPrivate/MMapFileParamTest.MapPopulate/*",
                "ReadWriteSharedPrivate/MMapFileParamTest.MapPopulateShort/*",
                "ReadWriteSharedPrivate/MMapFileParamTest.NoSigBusOnPageContainingEOF/*",
                "ReadWriteSharedPrivate/MMapFileParamTest.NoSigBusOnPagesBeforeEOF/*",
                "ReadWriteSharedPrivate/MMapFileParamTest.WriteOnlyFd/*",

                // pty_test - flaky
                // Specifically, the following tests were identified as flaky when running on Fxfs.
                // Until we can find out why thse tests are flaky, skip all tests that are part of
                // JobControlTest
                //  * "JobControlTest.ReleaseTTY",
                //  * "JobControlTest.SetForegroundProcessGroupDifferentSession",
                //  * "JobControlTest.SetForegroundProcessGroupSIGTTOUBackground",
                //  * "JobControlTest.SetForegroundProcessGroupSIGTTOUBlocked"
                "JobControlTest.*",

                // select_test - these tests hang
                "SelectTest.NullFds",
                "SelectTest.NegativeNfds",
                "SelectTest.ClosedFds",
                "SelectTest.ZeroTimeout",
                "SelectTest.NoTimeout",
                "SelectTest.InvalidTimeoutNegative",
                "SelectTest.InterruptedBySignal",
                "SelectTest.IgnoreBitsAboveNfds",
                "SelectTest.SetrlimitCallNOFILE",

                // sendfile_test - these tests hang
                "SendFileTest.SendZeroBytes",
                "SendFileTest.InvalidOffset",
                "SendFileTest.Overflow",
                "SendFileTest.SendTrivially",
                "SendFileTest.SendTriviallyWithBothFilesReadWrite",
                "SendFileTest.SendAndUpdateFileOffset",
                "SendFileTest.SendAndUpdateFileOffsetFromNonzeroStartingPoint",
                "SendFileTest.SendAndUpdateGivenOffset",
                "SendFileTest.DoNotSendfileIfOutfileIsAppendOnly",
                "SendFileTest.AppendCheckOrdering",
                "SendFileTest.DoNotSendfileIfOutfileIsNotWritable",
                "SendFileTest.DoNotSendfileIfInfileIsNotReadable",
                "SendFileTest.DoNotSendANegativeNumberOfBytes",
                "SendFileTest.SendTheCorrectNumberOfBytesEvenIfWeTryToSendTooManyBytes",
                "SendFileTest.SendToNotARegularFile",
                "SendFileTest.SendPipeWouldBlock",
                "SendFileTest.SendPipeEOF",
                "SendFileTest.SendToFullPipeReturnsEAGAIN",
                "SendFileTest.SendPipeBlocks",
                "SendFileTest.SendFileToPipe",
                "SendFileTest.SendFileToSelf",
                "SendFileTest.LargeCount",

                // setgid_test
                // These tests pass and fail in different cases
                // Skip these tests for now until it can pass in all cases
                "FileModes/FileModeTest.TruncateFile/*",
                "FileModes/FileModeTest.WriteToFile/*",
                "SetgidDirTest.ChownDirDoesNotClear",
                "SetgidDirTest.ChownFileClears",
                "SetgidDirTest.ChownNoExecFileDoesNotClear",
                "SetgidDirTest.Control",
                "SetgidDirTest.CreateDir",
                "SetgidDirTest.CreateFile",
                "SetgidDirTest.NoGroupExec",
                "SetgidDirTest.OldDir",
                "SetgidDirTest.OldFile",

                // socket_blocking_local_test
                // Tests 3, 4, 5, 12, 13, 14 fail.
                // Skip all until we fix the issue causing the tests to fail
                "NonBlockingUnixDomainSockets/BlockingSocketPairTest.RecvBlocks/*",

                // socket_stream_local_test
                // Tests 2, 3, 8, 9 fail.
                // Skip all until we fix the issue causing the tests to fail
                "StreamUnixSockets/StreamSocketPairTest.CoalescedRecv/*",
                "StreamUnixSockets/StreamSocketPairTest.MsgTrunc/*",
                "StreamUnixSockets/StreamSocketPairTest.RecvmsgMsghdrFlagsNoMsgTrunc/*",
                "StreamUnixSockets/StreamSocketPairTest.RecvmsgTruncPeekZeroLen/*",
                "StreamUnixSockets/StreamSocketPairTest.RecvmsgTruncZeroLen/*",
                "StreamUnixSockets/StreamSocketPairTest.SplitRecv/*",
                "StreamUnixSockets/StreamSocketPairTest.WriteOneSideClosed/*",

                // socket_non_stream_blocking_local_test
                // Tests 2, 3, 8, 9 fail.
                // Skip all until we fix the issue causing the tests to fail
                "BlockingNonStreamUnixSockets/BlockingNonStreamSocketPairTest.RecvLessThanBufferWaitAll/*",
                "BlockingNonStreamUnixSockets/BlockingNonStreamSocketPairTest.RecvmsgTruncPeekDontwaitZeroLenBlocking/*",

                // socket_stream_blocking_local_test
                // Tests 1, 4 fail.
                // Skip all until we fix the issue causing the tests to fail
                "BlockingStreamUnixSockets/BlockingStreamSocketPairTest.SendMsgTooLarge/*",
                "BlockingStreamUnixSockets/BlockingStreamSocketPairTest.RecvLessThanBuffer/*",
                "BlockingStreamUnixSockets/BlockingStreamSocketPairTest.RecvLessThanBufferWaitAll/*",
                "BlockingStreamUnixSockets/BlockingStreamSocketPairTest.SendTimeout/*",

                // socket_stream_nonblock_local_test
                // Tests 1, 4 fail.
                // Skip all until we fix the issue causing the tests to fail
                "NonBlockingStreamUnixSockets/NonBlockingStreamSocketPairTest.SendMsgTooLarge/*",

                // socket_unix_dgram_local_test
                // Tests 4-7, 16-19 fail.
                // Skip all until we fix the issue causing the tests to fail
                "DgramUnixSockets/DgramUnixSocketPairTest.*/*",
                "DgramUnixSockets/NonStreamSocketPairTest.*/*",
                "DgramUnixSockets/UnixNonStreamSocketPairTest.*/*",

                // socket_unix_seqpacket_local_test
                // Tests 2, 3, 8, 9 fail.
                // Skip all until we fix the issue causing the tests to fail
                "SeqpacketUnixSockets/NonStreamSocketPairTest.*/*",
                "SeqpacketUnixSockets/SeqpacketUnixSocketPairTest.*/*",
                "SeqpacketUnixSockets/UnixNonStreamSocketPairTest.*/*",

                // socket_unix_stream_test
                // Tests 2, 3, 8, 9 fail.
                // Skip all until we fix the issue causing the tests to fail
                "AllUnixDomainSockets/StreamUnixSocketPairTest.*/*",

                // socket_unix_unbound_dgram_test
                // Tests 0, 1 fail.
                // Skip all until we fix the issue causing the tests to fail
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.BindConnect/*",
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.SelfConnect/*",
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.DoubleConnect/*",
                "AllUnixDomainSockets/UnboundDgramUnixSocketPairTest.GetRemoteAddress/*",

                // socket_unix_unbound_seqpacket_test
                // Tests 0, 1, 4, 5 fail.
                // Skip all until we fix the issue causing the tests to fail
                "AllUnixDomainSockets/UnboundUnixSeqpacketSocketPairTest.SendtoWithoutConnect/*",

                // socket_unix_unbound_stream_test
                // Tests 2, 3, 8, 9 fail.
                // Skip all until we fix the issue causing the tests to fail
                "AllUnixDomainSockets/UnixStreamSocketPairTest.FDPassCoalescedRead/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.FDPassCoalescedRecv/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.ReadsNotCoalescedAfterFDPass/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.FDPassNotCombined/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.CredsNotCoalescedDown/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.CoalescedCreds1/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.NonCoalescedDifferingCreds1/*",
                "AllUnixDomainSockets/UnixStreamSocketPairTest.NonCoalescedDifferingCreds2/*",

                // symlink_test - gave fatal signals
                "AbsAndRelTarget/ParamSymlinkTest.OpenLinkNoFollowFails/*",
                "AbsAndRelTarget/ParamSymlinkTest.OpenLinkExclFails/*",
                "AbsAndRelTarget/ParamSymlinkTest.CreateExistingParentLink/*",
                "AbsAndRelTarget/ParamSymlinkTest.CreateExistingSelfLink/*",
                "AbsAndRelTarget/ParamSymlinkTest.OpenLinkCreatesTarget/*",
                "AbsAndRelTarget/ParamSymlinkTest.CreatLinkCreatesTarget/*",
                "SymlinkTest.*",

                // tcp_socket_test
                "AllInetTests/SimpleTcpSocketTest.ListenConnectParallel/*",

                // utimes_test
                // Creating a temporary directory fails.
                "FutimesatTest.OnRelPath",
                "UtimensatTest.OnRelPath",
                "UtimeTest.ZeroAtimeandMtime",
                "UtimesTest.OnDir",
            ],
        },
    ],
}
