// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    capabilities: [
        {
            protocol: [
                "fuchsia.hardware.power.statecontrol.Admin",
                "fuchsia.hardware.power.statecontrol.RebootMethodsWatcherRegister",
                "fuchsia.power.clientlevel.Connector",
                "fuchsia.power.manager.debug.Debug",
                "fuchsia.power.manager.DriverManagerRegistration",
                "fuchsia.power.profile.Watcher",
                "fuchsia.power.systemmode.ClientConfigurator",
                "fuchsia.power.systemmode.Requester",
                "fuchsia.thermal.ClientStateConnector",
            ],
        },
    ],
    use: [
        {
            directory: "dev-topological",
            rights: [ "r*" ],
            path: "/dev",
        },
        {
            protocol: [
                "fuchsia.feedback.CrashReporter",
                "fuchsia.kernel.CpuResource",
                "fuchsia.kernel.Stats",
                "fuchsia.metrics.MetricEventLoggerFactory",
                "fuchsia.sys2.SystemController",
                "fuchsia.ui.activity.Provider",
            ],
        },
        {
            protocol: [
                // The Power Manager uses this service to monitor microphone mute/unmute state to
                // determine system activity state ("power profile") only on products/configurations
                // where the service is available.
                "fuchsia.settings.Input",

                // Trace manager may be excluded from builds where tracing is not expected to be
                // used for observability, such as in the bringup product and non-eng builds of any
                // product.
                "fuchsia.tracing.provider.Registry",
            ],
            availability: "optional",
        },
    ],
    expose: [
        {
            protocol: [
                "fuchsia.hardware.power.statecontrol.Admin",
                "fuchsia.hardware.power.statecontrol.RebootMethodsWatcherRegister",
                "fuchsia.power.clientlevel.Connector",
                "fuchsia.power.manager.debug.Debug",
                "fuchsia.power.manager.DriverManagerRegistration",
                "fuchsia.power.profile.Watcher",
                "fuchsia.power.systemmode.ClientConfigurator",
                "fuchsia.power.systemmode.Requester",
                "fuchsia.thermal.ClientStateConnector",
            ],
            from: "self",
        },
    ],
    config: {
        // Enables the debug service for manipulating Power Manager state at run-time.
        enable_debug_service: { type: "bool" },

        // Path to a node config file for the Power Manager to use. Typically set as a default
        // value, but can be overridden for integration tests.
        node_config_path: {
            type: "string",
            max_size: 128,
        },

        // Disables the temperature filter for all TemperatureHandler nodes. Typically false, but
        // may be overridden for integration tests.
        disable_temperature_filter: { type: "bool" },
    },
}
