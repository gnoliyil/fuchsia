# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/config.gni")
import("//build/rust/rustc_test.gni")

rustc_library("lib") {
  testonly = true
  name = "power_manager_integration_test_lib"
  edition = "2021"
  with_unit_tests = true

  deps = [
    ":integration-component",
    "//sdk/fidl/fuchsia.device.manager:fuchsia.device.manager_rust",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_rust",
    "//sdk/fidl/fuchsia.hardware.thermal:fuchsia.hardware.thermal_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.power.clientlevel:fuchsia.power.clientlevel_rust",
    "//sdk/fidl/fuchsia.power.profile:fuchsia.power.profile_rust",
    "//sdk/fidl/fuchsia.power.systemmode:fuchsia.power.systemmode_rust",
    "//sdk/fidl/fuchsia.settings:fuchsia.settings_rust",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2_rust",
    "//sdk/fidl/fuchsia.thermal:fuchsia.thermal_rust",
    "//sdk/fidl/fuchsia.ui.activity:fuchsia.ui.activity_rust",
    "//src/cobalt/bin/testing/mock_cobalt:component_v2",
    "//src/lib/fake-clock/fidl:fidl_rust",
    "//src/lib/fake-clock/svc",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-component-test",
    "//src/lib/fuchsia-runtime",
    "//src/lib/storage/vfs/rust:vfs",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:parking_lot",
    "//third_party/rust_crates:tracing",
  ]

  test_deps = [
    "//src/lib/fuchsia",
    "//third_party/rust_crates:assert_matches",
  ]

  sources = [
    "src/client_connectors/mod.rs",
    "src/client_connectors/power_profile_client.rs",
    "src/client_connectors/reboot_watcher_client.rs",
    "src/client_connectors/system_power_mode_client.rs",
    "src/client_connectors/thermal_client.rs",
    "src/lib.rs",
    "src/mocks/activity_service.rs",
    "src/mocks/driver_manager.rs",
    "src/mocks/input_settings_service.rs",
    "src/mocks/mod.rs",
    "src/mocks/system_controller.rs",
    "src/mocks/temperature_driver.rs",
  ]
}

fuchsia_component_manifest("integration-manifest") {
  testonly = true
  manifest = "meta/power-manager-for-integration.cml"
  component_name = "power-manager"
}

fuchsia_structured_config_values("integration-structured-config") {
  testonly = true
  cm_label = ":integration-manifest"
  values = {
    enable_debug_service = false
    node_config_path = ""
    disable_temperature_filter = true
  }
}

fuchsia_component("integration-component") {
  cm_label = ":integration-manifest"
  testonly = true
  deps = [
    ":integration-manifest",
    ":integration-structured-config",
    "//src/power/power-manager:bin_with_fake_time",
  ]
}

fuchsia_unittest_package("power-manager-integration-lib-test") {
  deps = [ ":lib_test" ]
}

group("tests") {
  testonly = true
  deps = [ ":power-manager-integration-lib-test" ]
}
