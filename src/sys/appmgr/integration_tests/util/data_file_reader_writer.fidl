// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library test.appmgr.integration;

using zx;

// A simple interface implemented by isolated_storage_test_util and used to test persistent storage
// isolation.
@discoverable
closed protocol DataFileReaderWriter {
    // Read the file at /data/<path> in the util's namespace and return its contents. If the file
    // does not exist, returns null.
    strict ReadFile(struct {
        path string;
    }) -> (struct {
        contents string:optional;
    });

    // Write the provided contents to a file at /data/<path> in the util's namespace, overwriting
    // any existing files.
    strict WriteFile(struct {
        path string;
        contents string;
    }) -> (struct {
        status zx.Status;
    });

    // Write the provided contents to a file at /tmp/<path> in the util's namespace, overwriting
    // any existing files.
    strict WriteTmpFile(struct {
        path string;
        contents string;
    }) -> (struct {
        status zx.Status;
    });

    // Read the file at /tmp/<path> in the util's namespace and return its contents. If the file
    // does not exist, returns null.
    strict ReadTmpFile(struct {
        path string;
    }) -> (struct {
        contents string:optional;
    });
};
