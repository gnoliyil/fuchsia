# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/host.gni")
import("//build/rust/rustc_library.gni")
import("//build/testing/host_test_data.gni")

if (is_host) {
  host_test_data("test_tools") {
    sources = [ "$host_tools_dir/pm" ]
    outputs = [ "$root_out_dir/test_data/package-tool/{{source_file_part}}" ]
    deps = [ "//src/sys/pkg/bin/pm:host($host_toolchain)" ]
  }

  rustc_library("package-tool") {
    version = "0.1.0"
    edition = "2021"
    with_unit_tests = true

    deps = [
      "//src/lib/fuchsia-async",
      "//src/lib/fuchsia-lockfile:lib",
      "//src/lib/versioning/version-history/rust:version-history",
      "//src/sys/pkg/lib/fuchsia-pkg",
      "//src/sys/pkg/lib/fuchsia-repo",
      "//third_party/rust_crates:anyhow",
      "//third_party/rust_crates:argh",
      "//third_party/rust_crates:async-fs",
      "//third_party/rust_crates:camino",
      "//third_party/rust_crates:chrono",
      "//third_party/rust_crates:futures",
      "//third_party/rust_crates:serde",
      "//third_party/rust_crates:serde_json",
      "//third_party/rust_crates:tempfile",
      "//third_party/rust_crates:tracing",
      "//third_party/rust_crates:tuf",
    ]

    test_deps = [
      ":test_tools",
      "//src/developer/ffx/lib/pkg:empty-repo-keys",
      "//src/developer/ffx/lib/pkg:empty-repo-metadata",
      "//src/lib/fuchsia",
      "//src/lib/fuchsia-url",
      "//src/sys/pkg/lib/far/rust:fuchsia-archive",
      "//src/sys/pkg/lib/fuchsia-merkle",
      "//third_party/rust_crates:assert_matches",
      "//third_party/rust_crates:pretty_assertions",
      "//third_party/rust_crates:walkdir",
    ]

    sources = [
      "src/args.rs",
      "src/lib.rs",
      "src/package_archive.rs",
      "src/package_build.rs",
      "src/repo_create.rs",
      "src/repo_publish.rs",
    ]
  }

  group("tests") {
    testonly = true
    deps = [ ":package-tool_test" ]
  }
} else {
  group("package-tool") {
    deps = [ ":package-tool($host_toolchain)" ]
  }

  group("tests") {
    testonly = true
    deps = [ ":package-tool_test($host_toolchain)" ]
  }
}
