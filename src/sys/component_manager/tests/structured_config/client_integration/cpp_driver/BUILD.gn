# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/drivers.gni")
import("//build/fidl/fidl.gni")
import("//build/rust/rustc_binary.gni")

fidl("test.structuredconfig.receiver.shim") {
  sources = [ "shim.test.fidl" ]
  public_deps = [ "//src/sys/component_manager/tests/structured_config/fidl:test.structuredconfig.receiver" ]
}

driver_bind_rules("receiver_bind") {
  disable_autobind = true
  bind_output = "receiver.bindbc"
}

fuchsia_driver("receiver_driver") {
  testonly = true
  output_name = "structured_config_receiver"
  sources = [ "receiver.cc" ]
  deps = [
    ":receiver_bind",
    ":receiver_config",
    ":test.structuredconfig.receiver.shim_cpp_wire",
    "//sdk/lib/driver/component/cpp:cpp",
    "//sdk/lib/inspect/component/cpp:inspect_component_cpp",
    "//src/devices/lib/driver:driver_runtime",
    "//src/sys/component_manager/tests/structured_config/fidl:test.structuredconfig.receiver_cpp_wire",
  ]
}

fuchsia_component_manifest("receiver_manifest") {
  testonly = true
  component_name = "cpp_driver_receiver"
  manifest = "meta/receiver.cml"
}

fuchsia_driver_component("receiver_component") {
  testonly = true
  cm_label = ":receiver_manifest"
  deps = [ ":receiver_driver" ]
  info = "receiver-info.json"
}

fuchsia_structured_config_cpp_driver_lib("receiver_config") {
  testonly = true
  cm_label = ":receiver_manifest"
}

fuchsia_structured_config_values("values") {
  testonly = true
  cm_label = ":receiver_manifest"
  values_source = "//src/sys/component_manager/tests/structured_config/client_integration/config/values.json5"
}

rustc_binary("shim_bin") {
  edition = "2021"
  testonly = true
  output_name = "structured_config_cpp_driver_shim"
  source_root = "shim.rs"
  sources = [ "shim.rs" ]
  deps = [
    ":test.structuredconfig.receiver.shim_rust",
    "//sdk/fidl/fuchsia.driver.test:fuchsia.driver.test_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/lib/driver_test_realm/realm_builder/rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-component-test",
    "//src/lib/fuchsia-fs",
    "//src/sys/component_manager/tests/structured_config/fidl:test.structuredconfig.receiver_rust",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:tracing",
  ]
}

fuchsia_component("shim_component") {
  testonly = true
  component_name = "cpp_driver_shim"
  manifest = "meta/shim.cml"
  deps = [ ":shim_bin" ]
}

cmc_merge("realm.cml") {
  sources = [
    "//sdk/lib/driver_test_realm/meta/driver_test_realm.cml",
    "meta/realm.shard.cml",
  ]
}

fuchsia_test_component("realm") {
  manifest = "${target_out_dir}/realm.cml"
  manifest_deps = [ ":realm.cml" ]
}

rustc_test("cpp_driver_sc_client_test_bin") {
  edition = "2021"
  source_root = "test.rs"
  sources = [ "test.rs" ]
  deps = [
    "..:sc_client_integration_support",
    "//src/lib/fuchsia",
  ]
}

fuchsia_test_component("test_component") {
  manifest = "meta/test.cml"
  deps = [ ":cpp_driver_sc_client_test_bin" ]
}

fuchsia_test_package("cpp_driver") {
  package_name = "sc_cpp_driver_client_integration_test"
  test_components = [ ":test_component" ]
  deps = [
    ":realm",
    ":receiver_component",
    ":shim_component",
    ":values",
    "//src/devices/bin/driver_host2:component",

    # fxbug.dev/101490: Dep included for affected tests presubmit
    "//src/sys/component_manager:component-manager-realm-builder-cmp",
  ]
}
