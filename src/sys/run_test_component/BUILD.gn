# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/config.gni")
import("//build/dist/renamed_binary.gni")

source_set("lib") {
  testonly = true

  sources = [
    "component.cc",
    "component.h",
    "log_collector.cc",
    "log_collector.h",
    "output_collector.cc",
    "output_collector.h",
    "run_test_component.cc",
    "run_test_component.h",
    "sys_tests.cc",
    "sys_tests.h",
    "test_metadata.cc",
    "test_metadata.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_hlcpp",
    "//sdk/fidl/fuchsia.device:fuchsia.device_hlcpp",
    "//sdk/fidl/fuchsia.hardware.pty:fuchsia.hardware.pty_hlcpp",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_hlcpp",
    "//sdk/fidl/fuchsia.logger:fuchsia.logger_hlcpp",
    "//sdk/fidl/fuchsia.media:fuchsia.media_hlcpp",
    "//sdk/fidl/fuchsia.net.name:fuchsia.net.name_hlcpp",
    "//sdk/fidl/fuchsia.posix.socket:fuchsia.posix.socket_hlcpp",
    "//sdk/fidl/fuchsia.scheduler:fuchsia.scheduler_hlcpp",
    "//sdk/fidl/fuchsia.sys.internal:fuchsia.sys.internal_hlcpp",
    "//sdk/fidl/fuchsia.sys.test:fuchsia.sys.test_hlcpp",
    "//sdk/fidl/fuchsia.sysinfo:fuchsia.sysinfo_hlcpp",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_hlcpp",
    "//sdk/fidl/fuchsia.test.manager:fuchsia.test.manager_hlcpp",
    "//sdk/fidl/fuchsia.time:fuchsia.time_hlcpp",
    "//sdk/fidl/fuchsia.tracing.kernel:fuchsia.tracing.kernel_hlcpp",
    "//sdk/fidl/fuchsia.tracing.provider:fuchsia.tracing.provider_hlcpp",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.policy:fuchsia.ui.policy_hlcpp",
    "//sdk/fidl/fuchsia.ui.scenic:fuchsia.ui.scenic_hlcpp",
    "//sdk/fidl/fuchsia.vulkan.loader:fuchsia.vulkan.loader_hlcpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/lib/cmx",
    "//src/lib/fxl",
    "//src/lib/json_parser",
    "//src/lib/pkg_url",
    "//third_party/rapidjson",
  ]
}

group("run-test-component") {
  testonly = true
  deps = []
}

group("run_test_component") {
  testonly = true
  public_deps = []
}

group("tests") {
  testonly = true
  public_deps = []
}
