# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

driver_bind_rules("as370-thermal-bind") {
  rules = "as370-thermal.bind"
  header_output = "as370-thermal-bind.h"
  bind_output = "as370-thermal.bindbc"
  tests = "as370-thermal-bind-test.json"
  deps = [ "//src/devices/bind/fuchsia.synaptics.platform" ]
}

fuchsia_driver("as370-thermal-driver") {
  output_name = "as370-thermal"
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  sources = [ "as370-thermal.cc" ]
  deps = [
    ":as370-thermal-bind",
    "//sdk/banjo/fuchsia.hardware.clock:fuchsia.hardware.clock_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.power:fuchsia.hardware.power_banjo_cpp",
    "//sdk/fidl/fuchsia.hardware.thermal:fuchsia.hardware.thermal_cpp_wire",
    "//src/devices/bus/lib/device-protocol-pdev",
    "//src/devices/lib/as370",
    "//src/devices/lib/driver",
    "//src/devices/lib/mmio",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//src/lib/fidl/cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/hwreg",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_driver_component("as370-thermal") {
  info = "as370-thermal-info.json"
  component_name = "aml-thermal"
  deps = [ ":as370-thermal-driver" ]
  colocate = true
}

test("as370-thermal-test-bin") {
  output_name = "as370-thermal-test"
  sources = [
    "as370-thermal-test.cc",
    "as370-thermal.cc",
  ]
  deps = [
    ":as370-thermal-bind",
    "//sdk/banjo/fuchsia.hardware.clock:fuchsia.hardware.clock_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.clock:fuchsia.hardware.clock_banjo_cpp_mock",
    "//sdk/banjo/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.power:fuchsia.hardware.power_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.power:fuchsia.hardware.power_banjo_cpp_mock",
    "//sdk/banjo/fuchsia.hardware.thermal:fuchsia.hardware.thermal_banjo_cpp",
    "//sdk/fidl/fuchsia.hardware.thermal:fuchsia.hardware.thermal_cpp_wire",
    "//src/devices/bus/lib/device-protocol-pdev",
    "//src/devices/lib/as370",
    "//src/devices/lib/mmio",
    "//src/devices/testing/mock-ddk",
    "//src/devices/testing/mock-mmio-reg",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//src/lib/fidl/cpp",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/hwreg",
    "//zircon/system/ulib/mock-function",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
    "//zircon/system/ulib/zxtest",
  ]

  # TODO(fxbug.dev/69585): This target uses raw zx::channel with LLCPP which is deprecated.
  # Please migrate to typed channel APIs (fidl::ClientEnd<T>, fidl::ServerEnd<T>).
  # See linked bug for details.
  configs += [ "//build/cpp:fidl-llcpp-deprecated-raw-channels" ]
}

fuchsia_unittest_package("as370-thermal-test") {
  deps = [ ":as370-thermal-test-bin" ]
  test_specs = {
    environments = basic_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

group("tests") {
  testonly = true
  deps = [
    ":as370-thermal-bind_test",
    ":as370-thermal-test",
  ]
}
