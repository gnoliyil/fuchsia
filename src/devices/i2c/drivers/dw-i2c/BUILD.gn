# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

driver_bind_rules("dw_i2c-bind") {
  rules = "dw_i2c.bind"
  header_output = "dw_i2c-bind.h"
  tests = "tests.json"
  deps = [ "//src/devices/bind/fuchsia.platform" ]
}

fuchsia_driver("dw-i2c-driver") {
  output_name = "dw-i2c"
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  sources = [ "dw-i2c.cc" ]
  deps = [
    ":dw_i2c-bind",
    "//sdk/banjo/fuchsia.hardware.i2cimpl:fuchsia.hardware.i2cimpl_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_banjo_cpp",
    "//src/devices/bus/lib/device-protocol-pdev",
    "//src/devices/lib/driver",
    "//src/devices/lib/mmio",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/hwreg",
    "//zircon/system/ulib/sync",
  ]
}

fuchsia_driver_component("dw-i2c") {
  component_name = "dw-i2c"
  deps = [ ":dw-i2c-driver" ]
  info = "dw-i2c-info.json"
  colocate = true
}

test("dw-i2c-test-bin") {
  output_name = "dw-i2c-test"
  sources = [
    "dw-i2c-test.cc",
    "dw-i2c.cc",
  ]
  deps = [
    ":dw_i2c-bind",
    "//sdk/banjo/fuchsia.hardware.i2cimpl:fuchsia.hardware.i2cimpl_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_banjo_cpp",
    "//src/devices/bus/lib/device-protocol-pdev",
    "//src/devices/lib/mmio",
    "//src/devices/testing/mock-ddk",
    "//src/devices/testing/mock-mmio-reg",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/system/ulib/hwreg",
    "//zircon/system/ulib/mock-function",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/zx",
    "//zircon/system/ulib/zxtest",
  ]
}

fuchsia_unittest_package("dw-i2c-test") {
  deps = [ ":dw-i2c-test-bin" ]
  test_specs = {
    environments = basic_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

group("tests") {
  testonly = true
  deps = [ ":dw-i2c-test" ]
}
