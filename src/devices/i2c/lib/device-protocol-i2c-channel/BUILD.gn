# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/zircon/zx_library.gni")

zx_library("device-protocol-i2c-channel") {
  sdk = "source"
  sdk_headers = [ "lib/device-protocol/i2c-channel.h" ]
  sources = []
  public_deps = [
    # <lib/device-protocol-i2c-channel/i2c-channel.h> has
    # #includes <fidl/fuchsia.hardware.i2c/cpp/wire.h>
    "//sdk/fidl/fuchsia.hardware.i2c:fuchsia.hardware.i2c_cpp_wire",

    # <lib/device-protocol-i2c-channel/i2c-channel.h> has #include <zircon/types.h>
    "//zircon/system/ulib/zx",

    # <lib/device-protocol-i2c-channel/i2c-channel.h> has #include <lib/ddk/driver.h>
    "//src/lib/ddk",
  ]
  deps = [ "//zircon/system/ulib/zx" ]
}

executable("i2c-channel-test-bin") {
  testonly = true
  output_name = "i2c-channel-test"
  sources = [ "test.cc" ]
  deps = [
    "//sdk/fidl/fuchsia.hardware.i2c:fuchsia.hardware.i2c_cpp_wire",
    "//sdk/lib/component/outgoing/cpp",
    "//src/devices/i2c/lib/device-protocol-i2c-channel",
    "//src/devices/i2c/testing/fake-i2c",
    "//src/devices/testing/mock-ddk",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/zxtest",
  ]
}

fuchsia_unittest_package("i2c-channel-test") {
  manifest = "meta/i2c-channel-test.cml"
  deps = [ ":i2c-channel-test-bin" ]
}

group("tests") {
  testonly = true
  deps = [ ":i2c-channel-test" ]
}
