# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/cpp/cpp_fuzzer.gni")
import("//build/fuzz.gni")
import("//build/test.gni")

group("tests") {
  testonly = true
  deps = [ ":driver-manager-fuzzers" ]

  # TODO(fxbug.dev/86747): Failed test disabled on coverage.
  # Please fix the failure and remove the condition below.
  if (!is_coverage) {
    deps += [
      ":driver-manager-tests",
      "v2:driver-runner-tests",
    ]
  }
}

fuchsia_component_manifest("manifest") {
  component_name = "driver_manager"
  manifest = "meta/driver_manager.cml"
  restricted_features = [ "allow_long_names" ]
}

fuchsia_structured_config_cpp_elf_lib("driver_manager_config") {
  cm_label = ":manifest"
}

fuchsia_structured_config_values("production_config") {
  cm_label = ":manifest"
  values = {
    set_root_driver_host_critical = true
  }
}

# TODO(fxb/38132): Migrate to the new bind rules and delete the below
source_set("binding") {
  sources = [
    "binding.cc",
    "binding.h",
  ]
  public_deps = [
    "//src/lib/ddk",
    "//src/lib/ddk:ddk-deprecated-binding-headers",
    "//zircon/system/ulib/fbl",
  ]
  deps = [
    "//src/devices/lib/bind:bind-lib",
    "//src/devices/lib/log",
  ]
}

source_set("manifest_parser") {
  sources = [
    "manifest_parser.cc",
    "manifest_parser.h",
  ]
  public_deps = [
    "//sdk/lib/fdio",
    "//src/devices/lib/log",
    "//src/lib/json_parser",
    "//src/lib/pkg_url",
    "//zircon/system/ulib/zx",
  ]
}

# Common source files and dependencies between :coordinator and :test
source_set("lib") {
  visibility = [ ":*" ]

  sources = [
    "base_package_resolver.cc",
    "base_package_resolver.h",
    "bind_driver_manager.cc",
    "bind_driver_manager.h",
    "component_lifecycle.cc",
    "component_lifecycle.h",
    "composite_device.cc",
    "composite_device.h",
    "composite_device_fragment.cc",
    "composite_device_fragment.h",
    "constants.h",
    "coordinator.cc",
    "coordinator.h",
    "device.cc",
    "device.h",
    "device_v2.cc",
    "device_v2.h",
    "driver.cc",
    "driver.h",
    "driver_host.cc",
    "driver_host.h",
    "driver_host_loader_service.cc",
    "driver_host_loader_service.h",
    "driver_loader.cc",
    "driver_loader.h",
    "inspect.cc",
    "package_resolver.cc",
    "system_instance.cc",
    "system_instance.h",
    "v1/composite_node_spec_v1.cc",
    "v1/composite_node_spec_v1.h",
    "v1/device_manager.cc",
    "v1/device_manager.h",
    "v1/driver_development.cc",
    "v1/driver_development.h",
    "v1/firmware_loader.cc",
    "v1/firmware_loader.h",
    "v1/init_task.cc",
    "v1/resume_context.h",
    "v1/resume_task.cc",
    "v1/suspend_handler.cc",
    "v1/suspend_handler.h",
    "v1/suspend_matching_task.cc",
    "v1/suspend_resume_manager.cc",
    "v1/suspend_resume_manager.h",
    "v1/suspend_task.cc",
    "v1/task.cc",
    "v1/unbind_task.cc",
    "v2/driver_development_service.cc",
    "v2/driver_development_service.h",
  ]

  public_deps = [
    ":binding",
    ":manifest_parser",
    "composite_node_spec:lib",
    "devfs",
    "v2:driver_runner",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_cpp_wire",
    "//sdk/fidl/fuchsia.device.fs:fuchsia.device.fs_cpp_wire",
    "//sdk/fidl/fuchsia.device.manager:fuchsia.device.manager_cpp",
    "//sdk/fidl/fuchsia.driver.development:fuchsia.driver.development_cpp_wire",
    "//sdk/fidl/fuchsia.driver.test.logger:fuchsia.driver.test.logger_cpp_wire",
    "//sdk/fidl/fuchsia.fshost:fuchsia.fshost_cpp_wire",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_cpp_wire",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp_wire",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_cpp_wire",
    "//sdk/fidl/fuchsia.ldsvc:fuchsia.ldsvc_cpp_wire",
    "//sdk/fidl/fuchsia.pkg:fuchsia.pkg_cpp_wire",
    "//sdk/fidl/fuchsia.process.lifecycle:fuchsia.process.lifecycle_cpp_wire",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/driver/compat/cpp",
    "//sdk/lib/driver/component/cpp:cpp",
    "//sdk/lib/fdio",
    "//sdk/lib/fdio:fdio-spawn-actions",
    "//sdk/lib/fidl",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/fit",
    "//sdk/lib/inspect/service/cpp",
    "//sdk/lib/stdcompat",
    "//sdk/lib/sys/cpp",
    "//src/bringup/lib/mexec",
    "//src/devices/lib/bind:bind-lib",
    "//src/devices/lib/driver-info",
    "//src/devices/lib/log",
    "//src/lib/ddk",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//src/lib/loader_service",
    "//src/lib/pkg_url",
    "//src/lib/storage/vfs/cpp",
    "//src/zircon/lib/zircon",
    "//zircon/system/public",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/fidl-async:fidl-async-cpp",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/inspector",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]

  deps = [
    "//src/lib/fsl",
    "//src/lib/zbitl",
  ]

  configs += [ "//build/config:all_source" ]
}

executable("driver_manager") {
  sources = [
    "dfv2_main.cc",
    "main.cc",
    "main.h",
  ]

  deps = [
    ":driver_manager_config",
    ":lib",
    "//src/sys/lib/stdout-to-debuglog/cpp",
    "//zircon/system/ulib/fdio-caller",
  ]

  configs += [ "//build/config:all_source" ]
}

test("driver_manager_test") {
  sources = [
    "tests/builtin_devices_test.cc",
    "tests/composite_device_tests.cc",
    "tests/composite_node_spec_manager_test.cc",
    "tests/coordinator_test_utils.cc",
    "tests/devfs_test.cc",
    "tests/device_tests.cc",
    "tests/driver_development_test.cc",
    "tests/driver_loader_test.cc",
    "tests/init_tests.cc",
    "tests/inspect_test.cc",
    "tests/misc_tests.cc",
    "tests/multiple_device_test.cc",
    "tests/multiple_device_test_utils.cc",
    "tests/resume_tests.cc",
    "tests/suspend_tests.cc",
    "tests/system_instance_test.cc",
    "tests/unbind_tests.cc",
    "v1/task_test.cc",
  ]

  deps = [
    ":lib",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp_wire",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/fdio",
    "//sdk/lib/inspect/testing/cpp:zxtest",
    "//src/devices/lib/bind:bind-lib",
    "//src/lib/storage/vfs/cpp:test_support",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/mock-boot-arguments",
    "//zircon/system/ulib/sync:sync-cpp",
    "//zircon/system/ulib/zxtest",
  ]
}

fuchsia_unittest_component("driver-manager-test") {
  manifest = "meta/driver-manager-test.cml"
  deps = [
    ":driver_manager_test",
    "testing:ambient_vmex_test_util",
    "testing:new_process_test_util",
    "//src/devices/bin/driver_host",
    "//src/devices/bus/drivers/platform",
    "//src/devices/internal/drivers/fragment",
    "//src/devices/tests/mock-device",
  ]
}

# This is a separate test binary because this test fixture uses gtest, not zxtest
test("driver_host_loader_service_test") {
  sources = [ "tests/driver_host_loader_service_test.cc" ]
  deps = [
    ":lib",
    "//src/lib/loader_service:loader_service_test_fixture",
  ]
}

fuchsia_unittest_component("driver-host-loader-service-test") {
  manifest = "meta/driver-host-loader-service-test.cml"
  deps = [ ":driver_host_loader_service_test" ]
}

executable("manifest_parser_test") {
  testonly = true
  sources = [ "tests/manifest_parser_test.cc" ]

  deps = [
    ":manifest_parser",
    "//zircon/system/ulib/zxtest",
  ]
}

fuchsia_unittest_component("manifest_parser_test_component") {
  deps = [ ":manifest_parser_test" ]
}

cpp_fuzzer("manifest-parser-fuzzer") {
  sources = [ "manifest_parser_fuzzer.cc" ]
  deps = [ ":manifest_parser" ]
}

fuchsia_fuzzer_component("manifest-parser-fuzzer-component") {
  manifest = "meta/manifest-parser-fuzzer.cml"
  deps = [ ":manifest-parser-fuzzer" ]
}

fuchsia_fuzzer_package("driver-manager-fuzzers") {
  cpp_fuzzer_components = [ ":manifest-parser-fuzzer-component" ]
}

fuchsia_test_package("driver-manager-tests") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }

  test_components = [
    ":driver-host-loader-service-test",
    ":driver-manager-test",
    ":manifest_parser_test_component",
  ]
}

fuchsia_component("component") {
  cm_label = ":manifest"
  deps = [ ":driver_manager" ]
}

fuchsia_package("package") {
  package_name = "driver_manager"
  deps = [
    ":component",
    ":production_config",
    "//src/devices/bin/driver_host",
    "//src/devices/internal/drivers/fragment",
    "//src/devices/internal/drivers/fragment:fragment.proxy",
  ]
}
