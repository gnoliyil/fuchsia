# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//build/components.gni")
import("//build/test.gni")

import("//src/devices/bus/drivers/pci/pci.gni")

declare_args() {
  # If true, power on the Atlas camera at boot.
  # TODO(fxbug.dev/81684): remove once we have a better way to manage ACPI device power.
  i_can_haz_atlas_camera = false
}

group("tests") {
  testonly = true
  deps = [ ":acpi-board-lib-tests" ]
}

shared_public_deps = [
  "//sdk/fidl/fuchsia.hardware.i2c.businfo:fuchsia.hardware.i2c.businfo_cpp_wire",
  "//sdk/fidl/fuchsia.hardware.spi.businfo:fuchsia.hardware.spi.businfo_cpp_wire",
  "//src/devices/bind/fuchsia.acpi:fuchsia.acpi_cpp",
  "//src/devices/lib/iommu",
  "//src/lib/ddk:ddk-deprecated-binding-headers",
  "//third_party/acpica",
]

shared_fuchsia_public_deps = [
  "//sdk/lib/component/outgoing/cpp",
  "//zircon/system/ulib/async-loop:async-loop-cpp",
  "//zircon/system/ulib/svc",
]

shared_deps = [
  "//sdk/banjo/fuchsia.hardware.pciroot:fuchsia.hardware.pciroot_banjo_cpp",
  "//zircon/system/ulib/fbl",
  "//zircon/system/ulib/zx",
]

shared_fuchsia_deps = [
  "//sdk/banjo/fuchsia.hardware.sysmem:fuchsia.hardware.sysmem_banjo_cpp",
  "//sdk/fidl/fuchsia.hardware.acpi:fuchsia.hardware.acpi_cpp_wire",
  "//sdk/fidl/fuchsia.hardware.interrupt:fuchsia.hardware.interrupt_cpp_wire",
  "//src/devices/lib/acpi",
  "//src/devices/pci/lib/pci",
  "//zircon/system/ulib/fidl-async:fidl-async-cpp",
  "//zircon/system/ulib/sync:sync-cpp",
  "//zircon/system/ulib/zircon-internal",
]

source_set("host-acpi") {
  sources = [
    "acpi-impl.cc",
    "acpi.cc",
    "device-builder.cc",
    "device-for-host.cc",
    "manager.cc",
    "resources.cc",
  ]
  public_deps = shared_public_deps
  deps = shared_deps

  # TODO(fxbug.dev/94768): This target uses mutable tables which are deprecated,
  # rather than builders.
  configs += [ "//build/cpp:fidl-wire-deprecated-mutable-tables" ]
}

source_set("acpi") {
  sources = [
    "acpi-impl.cc",
    "acpi.cc",
    "device-builder.cc",
    "device.cc",
    "event.cc",
    "fidl.cc",
    "global-lock.cc",
    "irq-fragment.cc",
    "manager.cc",
    "power-resource.cc",
    "resources.cc",
  ]

  defines = []

  if (platform_enable_user_pci) {
    sources += [
      "pci.cc",
      "pci_irqs.cc",
      "pciroot.cc",
    ]
    defines += [ "ENABLE_USER_PCI" ]
  }

  if (i_can_haz_atlas_camera) {
    defines += [ "ENABLE_ATLAS_CAMERA" ]
  }

  public_deps = shared_public_deps + shared_fuchsia_public_deps
  deps = shared_deps + shared_fuchsia_deps + [ "//src/lib/ddk" ]

  # TODO(fxbug.dev/94768): This target uses mutable tables which are deprecated,
  # rather than builders.
  configs += [ "//build/cpp:fidl-wire-deprecated-mutable-tables" ]
}

test("acpi-test") {
  sources = [
    "acpi-test.cc",
    "acpi.cc",
    "device-builder.cc",
    "device-test.cc",
    "device.cc",
    "event.cc",
    "fidl-test.cc",
    "fidl.cc",
    "global-lock.cc",
    "irq-fragment.cc",
    "manager-test.cc",
    "manager.cc",
    "power-resource-test.cc",
    "power-resource.cc",
    "resources.cc",
    "status-test.cc",
    "util-test.cc",
  ]
  deps = shared_deps + shared_fuchsia_deps + shared_public_deps +
         shared_fuchsia_public_deps +
         [
           "test:mock-acpi",
           "//sdk/lib/async-loop-testing/cpp",
           "//src/devices/testing/fake-resource",
           "//src/devices/testing/mock-ddk",
           "//zircon/system/ulib/zxtest",
         ]

  defines = [ "IS_TEST" ]

  # TODO(fxbug.dev/94768): This target uses mutable tables which are deprecated,
  # rather than builders.
  configs += [ "//build/cpp:fidl-wire-deprecated-mutable-tables" ]
}

fuchsia_unittest_package("acpi-board-lib-tests") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  deps = [ ":acpi-test" ]
}
