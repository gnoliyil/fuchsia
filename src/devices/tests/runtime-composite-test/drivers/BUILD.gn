# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

group("drivers") {
  testonly = true
  deps = [
    ":composite",
    ":leaf",
    ":root",
  ]
}

fidl("fuchsia.runtime.composite.test") {
  sources = [ "test.fidl" ]
  public_deps = [ "//zircon/vdso/zx" ]
  contains_drivers = true
}

bind_library("composite.test.lib") {
  source = "composite-lib.bind"
}

driver_bind_rules("root-driver-bind") {
  rules = "root-driver.bind"
  header_output = "root-driver-bind.h"
  bind_output = "root-driver.bindbc"
  deps = [ "//src/devices/bind/fuchsia.test" ]
}

fuchsia_driver("root-driver") {
  output_name = "runtime-composite-root-driver"
  sources = [ "root-driver.cc" ]
  deps = [
    ":composite.test.lib_cpp",
    ":fuchsia.runtime.composite.test_cpp_driver",
    ":root-driver-bind",
    "//sdk/lib/driver/component/cpp:cpp",
    "//sdk/lib/driver/runtime:driver_runtime_cpp",
    "//src/devices/bind/fuchsia.test:fuchsia.test_cpp",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//src/lib/ddktl",
  ]
}

fuchsia_driver_component("root") {
  component_name = "root-driver"
  deps = [ ":root-driver" ]
  info = "root-driver-info.json"
  colocate = true
}

driver_bind_rules("leaf-driver-bind") {
  rules = "leaf-driver.bind"
  header_output = "leaf-driver-bind.h"
  bind_output = "leaf-driver.bindbc"
  deps = [ "//src/devices/bind/fuchsia.test" ]
}

fuchsia_driver("leaf-driver") {
  output_name = "runtime-composite-leaf-driver"
  sources = [ "leaf-driver.cc" ]
  deps = [
    ":composite.test.lib_cpp",
    ":fuchsia.runtime.composite.test_cpp_driver",
    ":leaf-driver-bind",
    "//sdk/lib/driver/component/cpp:cpp",
    "//sdk/lib/driver/runtime:driver_runtime_cpp",
    "//src/devices/bind/fuchsia:fuchsia_cpp",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//src/lib/ddktl",
  ]
}

fuchsia_driver_component("leaf") {
  component_name = "leaf-driver"
  deps = [ ":leaf-driver" ]
  info = "leaf-driver-info.json"
  colocate = true
}

driver_bind_rules("composite-bind") {
  rules = "composite-driver.bind"
  header_output = "composite-driver-bind.h"
  bind_output = "composite-driver.bindbc"
  deps = [ ":composite.test.lib" ]
}

fuchsia_driver("composite-driver") {
  output_name = "runtime-composite-composite-driver"
  sources = [ "composite-driver.cc" ]
  deps = [
    ":composite-bind",
    ":fuchsia.runtime.composite.test_cpp_driver",
    "//sdk/lib/driver/component/cpp:cpp",
    "//sdk/lib/driver/runtime:driver_runtime_cpp",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//src/lib/ddktl",
  ]
}

fuchsia_driver_component("composite") {
  manifest = "meta/composite-driver.cml"
  deps = [ ":composite-driver" ]
  info = "composite-driver-info.json"
}
