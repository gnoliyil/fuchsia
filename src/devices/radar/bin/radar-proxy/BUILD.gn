# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/test.gni")

_common_deps = [
  "//sdk/fidl/fuchsia.hardware.radar:fuchsia.hardware.radar_cpp",
  "//sdk/lib/component/incoming/cpp",
  "//sdk/lib/component/outgoing/cpp",
  "//sdk/lib/fdio",
  "//sdk/lib/fit",
  "//sdk/lib/sys/cpp",
  "//sdk/lib/syslog/cpp",
  "//src/devices/radar/lib/vmo-manager",
  "//src/lib/fsl",
  "//zircon/system/ulib/async:async-cpp",
  "//zircon/system/ulib/async-loop:async-loop-cpp",
  "//zircon/system/ulib/async-loop:async-loop-default",
  "//zircon/system/ulib/fbl",
  "//zircon/system/ulib/fdio-caller",
  "//zircon/system/ulib/fzl",
  "//zircon/system/ulib/zx",
]

executable("radar-proxy-bin-with-injector") {
  sources = [
    "burst-injector.cc",
    "main.cc",
    "radar-reader-proxy.cc",
    "reader-instance.cc",
  ]
  deps = _common_deps
}

executable("radar-proxy-bin-without-injector") {
  sources = [
    "main.cc",
    "radar-provider-proxy.cc",
  ]
  deps = _common_deps
}

fuchsia_component_manifest("manifest-base") {
  component_name = "radar-proxy"
  manifest = "meta/radar-proxy-base.shard.cml"
}

fuchsia_component("radar-proxy-component-with-injector") {
  component_name = "radar-proxy"
  manifest = "meta/radar-proxy-with-injector.cml"
  deps = [ ":radar-proxy-bin-with-injector" ]
}

fuchsia_package("radar-proxy-with-injector") {
  deps = [ ":radar-proxy-component-with-injector" ]
}

fuchsia_component("radar-proxy-component-without-injector") {
  component_name = "radar-proxy"
  manifest = "meta/radar-proxy-without-injector.cml"
  deps = [ ":radar-proxy-bin-without-injector" ]
}

fuchsia_package("radar-proxy-without-injector") {
  deps = [ ":radar-proxy-component-without-injector" ]
}

_test_deps = [
  "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
  "//sdk/lib/driver/runtime/testing/cpp",
  "//src/devices/bin/driver_runtime",
  "//zircon/system/ulib/sync",
  "//zircon/system/ulib/zxtest",
]

test("radar-proxy-test-bin-with-injector") {
  sources = [
    "burst-injector.cc",
    "radar-reader-proxy.cc",
    "reader-instance.cc",
    "test/radar-reader-proxy-test.cc",
  ]
  deps = _common_deps + _test_deps
}

fuchsia_unittest_component("radar-proxy-test-component-with-injector") {
  deps = [ ":radar-proxy-test-bin-with-injector" ]
}

test("radar-proxy-test-bin-without-injector") {
  sources = [
    "radar-provider-proxy.cc",
    "test/radar-provider-proxy-test.cc",
  ]
  deps = _common_deps + _test_deps
}

fuchsia_unittest_component("radar-proxy-test-component-without-injector") {
  deps = [ ":radar-proxy-test-bin-without-injector" ]
}

fuchsia_test_package("radar-proxy-test") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  test_components = [
    ":radar-proxy-test-component-with-injector",
    ":radar-proxy-test-component-without-injector",
  ]
}

group("tests") {
  testonly = true
  deps = [ ":radar-proxy-test" ]
}
