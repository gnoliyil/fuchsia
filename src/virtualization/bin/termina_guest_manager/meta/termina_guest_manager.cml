// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "//src/virtualization/bin/guest_manager/meta/guest_manager.cml",
        "syslog/client.shard.cml",
    ],
    program: {
        runner: "elf",
        binary: "bin/termina_guest_manager",
    },
    children: [
        {
            name: "guest_pkg",
            url: "fuchsia-pkg://fuchsia.com/termina_guest#meta/termina_guest.cm",
        },
        {
            name: "wayland_bridge",
            url: "#meta/wayland_bridge.cm",
        },
    ],
    capabilities: [
        { protocol: "fuchsia.virtualization.LinuxManager" },
    ],
    use: [
        {
            storage: "data",
            path: "/data",
        },
        {
            directory: "dev-topological",
            rights: [ "r*" ],
            path: "/dev",
        },
        {
            protocol: [
                "fuchsia.tracing.provider.Registry",
                "fuchsia.ui.scenic.Scenic",
            ],
            from: "parent",
            availability: "optional",
        },
        {
            protocol: "fuchsia.wayland.Server",
            from: "#wayland_bridge",
        },
    ],
    offer: [
        {
            protocol: "fuchsia.logger.LogSink",
            from: "parent",
            to: "#wayland_bridge",
        },
        {
            protocol: [
                "fuchsia.element.GraphicalPresenter",
                "fuchsia.tracing.provider.Registry",
                "fuchsia.ui.composition.Flatland",
                "fuchsia.ui.input3.Keyboard",
                "fuchsia.ui.scenic.Scenic",
            ],
            from: "parent",
            to: "#wayland_bridge",
            availability: "optional",
        },
    ],
    expose: [
        {
            protocol: "fuchsia.virtualization.LinuxManager",
            from: "self",
        },
        {
            protocol: "fuchsia.virtualization.GuestManager",
            from: "self",
            as: "fuchsia.virtualization.TerminaGuestManager",
        },
    ],
    config: {
        // One of the following:
        //  * 'fvm' - use an FVM partition directly
        //  * 'file' - use a file
        //  * 'block-file' - use a file opened using `MODE_TYPE_BLOCK_DEVICE`.
        stateful_partition_type: {
            type: "string",
            max_size: 10,
        },
        stateful_partition_size: { type: "uint64" },
        start_container_runtime: { type: "bool" },

        // Mount additional devices  before starting the container runtime.
        //
        // Each mount will contain three entries in this vector; the first is the device path, the
        // second is the mountpoint, and the third is the filesystem type.
        //
        // Ex:
        //   additional_read_only_mounts = [
        //       "/dev/vdc",
        //       "/tmp/foo",
        //       "ext4",
        //   ]
        additional_read_only_mounts: {
            type: "vector",
            max_count: 15,
            element: {
                type: "string",
                max_size: 50,
            },
        },

        // If the bootstrap container images are available on a local file, the paths can be
        // provided here. Setting these to an empty string will pull the container from the
        // internet instead.
        container_rootfs_path: {
            type: "string",
            max_size: 120,
        },
        container_metadata_path: {
            type: "string",
            max_size: 120,
        },
    },
}
