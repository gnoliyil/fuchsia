// Copyright 2021 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library test.external;

using zx;

closed protocol SendHandleProtocol {
    strict SendHandleReducedRights(resource struct {
        h zx.handle:<EVENT, zx.rights.TRANSFER>;
    });
    strict SendHandleSameRights(resource struct {
        h zx.handle:EVENT;
    });
};

closed protocol EchoHandleProtocol {
    strict EchoHandleRequestResponseReducedRights(resource struct {
        h zx.handle:<EVENT, zx.rights.TRANSFER | zx.rights.DUPLICATE>;
    }) -> (resource struct {
        h zx.handle:<EVENT, zx.rights.TRANSFER>;
    });

    strict EchoHandleRequestReducedRights(resource struct {
        h zx.handle:<EVENT, zx.rights.TRANSFER>;
    }) -> (resource struct {
        h zx.handle:EVENT;
    });
    strict EchoHandleRequestSameRights(resource struct {
        h zx.handle:EVENT;
    }) -> (resource struct {
        h zx.handle:EVENT;
    });

    strict EchoHandleResponseReducedRights(resource struct {
        h zx.handle:EVENT;
    }) -> (resource struct {
        h zx.handle:<EVENT, zx.rights.TRANSFER>;
    });
    strict EchoHandleResponseSameRights(resource struct {
        h zx.handle:EVENT;
    }) -> (resource struct {
        h zx.handle:EVENT;
    });
};

closed protocol PushEventProtocol {
    strict -> PushEventReducedRights(resource struct {
        h zx.handle:<EVENT, zx.rights.TRANSFER>;
    });
    strict -> PushEventSameRights(resource struct {
        h zx.handle:EVENT;
    });
};

closed protocol ErrorSyntaxProtocol {
    strict TestErrorSyntax() -> (resource struct {
        h zx.handle:<EVENT, zx.rights.TRANSFER>;
    }) error uint32;
};
