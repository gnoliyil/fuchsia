# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/cpp/library_headers.gni")

config("config") {
  include_dirs = [ "include" ]
}

library_headers("headers") {
  headers = [
    "lib/fxt/argument.h",
    "lib/fxt/fields.h",
    "lib/fxt/interned_category.h",
    "lib/fxt/interned_string.h",
    "lib/fxt/map_macro.h",
    "lib/fxt/map_macro_internal.h",
    "lib/fxt/record_types.h",
    "lib/fxt/section_symbols.h",
    "lib/fxt/serializer.h",
    "lib/fxt/string_ref.h",
    "lib/fxt/thread_ref.h",
    "lib/fxt/trace_base.h",
    "lib/fxt/writer_internal.h",
  ]
  public_deps = [
    ":suppress-warning",
    "//zircon/kernel/lib/special-sections",

    # <fxt/writer.h> has #include <lib/zx/result.h>
    # <fxt/serializer.h> has #include <lib/zx/result.h>
    "//zircon/system/ulib/zx",
  ]
}

source_set("fxt") {
  sources = []
  public_deps = [ ":headers" ]
  public_configs = [ ":config" ]
}

group("suppress-warning") {
  public_configs = [ ":suppress-warning.config" ]
}

config("suppress-warning.config") {
  if (!is_gcc) {
    # Silence warning in Clang about GNU extension used in interned_string.h.
    cflags_cc = [ "-Wno-gnu-string-literal-operator-template" ]
  }
}

if (!is_kernel) {
  import("//build/components.gni")

  executable("fxt_tests_app") {
    testonly = true
    output_name = "fxt_tests"
    sources = [
      "deduction_tests.cc",
      "fields_tests.cc",
      "interned_category_tests.cc",
      "interned_string_tests.cc",
      "macro_tests.cc",
      "serializer_test.cc",
      "trace_base_tests.cc",
    ]
    deps = [
      ":fxt",
      "//sdk/lib/fdio",
      "//src/lib/fxl",
      "//src/lib/fxl/test:gtest_main",
      "//third_party/googletest:gtest",
    ]
  }

  fuchsia_unittest_package("fxt_tests") {
    deps = [ ":fxt_tests_app" ]
  }

  group("tests") {
    testonly = true
    public_deps = [ ":fxt_tests" ]
  }
}
