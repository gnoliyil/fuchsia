# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/config_data_for_assembly.gni")
import("//build/components.gni")
import("//build/config.gni")
import("//build/icu/icu_fuchsia_component.gni")
import("//build/icu/icu_fuchsia_package.gni")
import("//src/sys/core/build/core_shard.gni")

group("tests") {
  testonly = true
  deps = [ ":sshd-host-tests" ]
}

source_set("sshd_constants") {
  sources = [ "constants.h" ]
}

source_set("lib") {
  sources = [ "service.cc" ]
  public_deps = [
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_hlcpp",
    "//sdk/lib/fdio",
    "//sdk/lib/sys/cpp",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/zx",
  ]
}

executable("bin") {
  output_name = "sshd-host"
  sources = [ "sshd-host.cc" ]
  deps = [
    ":lib",
    "//sdk/lib/fdio",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
  ]
}

icu_fuchsia_component("sshd-host-component") {
  component_name = "sshd-host"
  manifest = "meta/sshd-host.cml"

  # Used by programs that need to load ICU locale data, such as tz-util.
  icu_deps = [ "//src/lib/icu:icudtl" ]

  deps = [
    # Ensure this isn't included in production
    ":bin",
    "//build/validate:non_production_tag",
    "//third_party/openssh-portable:hostkeygen",
    "//third_party/openssh-portable:scp",
    "//third_party/openssh-portable:sftp-server",
    "//third_party/openssh-portable:sshd",
  ]
}

icu_fuchsia_package("sshd-host") {
  icu_deps = [ ":sshd-host-component" ]
}

# Enabling a soft-transition, remove when complete
# TODO(122864) Remove transitional labels
group("config-for_transition") {
}

config_data_for_assembly("config") {
  for_pkg = "sshd-host"
  sources = [ "//third_party/openssh-portable/fuchsia/sshd_config" ]
  outputs = [ "sshd_config" ]
}

if (authorized_ssh_keys != []) {
  config_data("authorized_ssh_keys_config_data") {
    for_pkg = "sshd-host"
    sources = authorized_ssh_keys
    outputs = [ "authorized_keys" ]  # /config/data/authorized_keys
    deps = [ "//build/validate:non_production_tag" ]
  }
}

executable("test") {
  testonly = true
  output_name = "sshd-host-test"
  sources = [ "test.cc" ]
  deps = [
    ":lib",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_hlcpp",
    "//sdk/lib/fdio",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/cpp/testing:unit",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_unittest_package("sshd-host-tests") {
  manifest = "meta/sshd-host-test.cml"
  deps = [ ":test" ]
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}
