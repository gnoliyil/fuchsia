# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/python/python_binary.gni")
import("//build/python/python_c_extension.gni")
import("//build/rust/rustc_cdylib.gni")
import("//src/developer/ffx/lib/version/build/ffx_apply_version.gni")

assert(is_host)

rustc_cdylib("lib") {
  output_name = "fuchsia_controller"
  edition = "2021"
  with_unit_tests = true

  deps = [
    "//src/connectivity/overnet/lib/hoist",
    "//src/developer/ffx/config:lib",
    "//src/developer/ffx/core:lib",
    "//src/developer/ffx/daemon/proxy:lib",
    "//src/developer/ffx/lib/errors:lib",
    "//src/developer/ffx/lib/rcs:lib",
    "//src/developer/ffx/lib/version:lib",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/zircon/rust:fuchsia-zircon-status",
    "//src/lib/zircon/rust:fuchsia-zircon-types",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-channel",
    "//third_party/rust_crates:async-lock",
    "//third_party/rust_crates:async-net",
    "//third_party/rust_crates:byteorder",
    "//third_party/rust_crates:futures-lite",
    "//third_party/rust_crates:nix",
    "//third_party/rust_crates:tempfile",
    "//third_party/rust_crates:tracing",
  ]

  sources = [
    "src/commands.rs",
    "src/env_context.rs",
    "src/ext_buffer.rs",
    "src/lib.rs",
    "src/lib_context.rs",
    "src/waker.rs",
  ]
}

python_c_extension("fuchsia_controller_py") {
  sources = [
    "abi/fidl_channel.cc",
    "abi/fidl_channel.h",
    "abi/fidl_handle.cc",
    "abi/fidl_handle.h",
    "abi/fuchsia_controller.h",
    "abi/fuchsia_controller_py.cc",
    "abi/macros.h",
    "abi/mod.cc",
    "abi/mod.h",
  ]

  deps = [
    ":lib",
    "//zircon/system/public",
  ]
}

python_binary("example") {
  main_source = "python/example.py"
  deps = [
    ":fuchsia_controller_py",
    "//src/developer/ffx:ffx_tool",
  ]
}

group("fuchsia-controller") {
  public_deps = [
    ":example",
    ":fuchsia_controller_py",
  ]
}

group("tests") {
  testonly = true
  deps = [ ":lib_test($host_toolchain)" ]
}
