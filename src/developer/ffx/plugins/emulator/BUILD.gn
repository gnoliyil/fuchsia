# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/sdk/sdk_atom.gni")
import("//build/sdk/sdk_noop_atom.gni")
import("//src/developer/ffx/build/ffx_plugin.gni")
import("//src/developer/ffx/build/ffx_tool.gni")
import("emu_companion.gni")

if (is_host) {
  ffx_plugin("ffx_emulator") {
    version = "0.1.0"
    edition = "2021"
    with_unit_tests = true
    args_sources = [ "src/args.rs" ]
    config_data = [ "data/config.json" ]
    plugin_deps = [
      "commands/console:ffx_emulator_console",
      "commands/list:ffx_emulator_list",
      "commands/show:ffx_emulator_show",
      "commands/start:ffx_emulator_start",
      "commands/stop:ffx_emulator_stop",
    ]
    test_deps = [
      "commands:tests",
      "common:tests",
      "configuration:tests",
      "engines:tests",
    ]
    deps = [
      ":aemu_internal",
      ":qemu_internal",
    ]
  }

  # AEMU is supported on mac and linux and both arm64 and x64
  if (arm_sdk_tools || current_cpu == host_cpu) {
    emu_companion("aemu_internal") {
      default_binary = "//prebuilt/third_party/android/aemu/release/${current_os}-${current_cpu}/emulator"
      prebuilt_path = "//prebuilt/third_party/android/aemu/release/${current_os}-${current_cpu}"
      sdk_dest_path = "tools/${current_cpu}/aemu_internal"
    }
  } else {
    sdk_noop_atom("aemu_internal") {
    }
  }

  # QEMU is currently the host_cpu.
  # TODO(fxbug.dev/106608) once arm64 is available for mac, provide it as well.
  if (current_cpu == host_cpu) {
    emu_companion("qemu_internal") {
      default_binary = "//prebuilt/third_party/qemu/${current_os}-${current_cpu}/bin/qemu-system-x86_64"
      prebuilt_path = "//prebuilt/third_party/qemu/${current_os}-${current_cpu}"
      sdk_dest_path = "tools/${current_cpu}/qemu_internal"
    }
  } else {
    sdk_noop_atom("qemu_internal") {
    }
  }
}

ffx_tool("ffx_emulator_tool") {
  edition = "2021"
  output_name = "ffx-emulator"
  deps = [
    ":ffx_emulator_suite",
    "//src/lib/fuchsia-async",
  ]
  sources = [ "src/main.rs" ]
}
