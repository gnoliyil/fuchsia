# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_library.gni")

rustc_library("lib") {
  name = "ffx_daemon_target"
  edition = "2021"
  with_unit_tests = true

  deps = [
    "//sdk/fidl/fuchsia.developer.ffx:fuchsia.developer.ffx_rust",
    "//sdk/fidl/fuchsia.developer.remotecontrol:fuchsia.developer.remotecontrol_rust",
    "//sdk/fidl/fuchsia.diagnostics:fuchsia.diagnostics_rust",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_rust",
    "//sdk/fidl/fuchsia.net:fuchsia.net_rust",
    "//src/connectivity/overnet/lib/hoist",
    "//src/developer/fastboot:lib",
    "//src/developer/ffx/config:lib",
    "//src/developer/ffx/daemon/core:lib",
    "//src/developer/ffx/daemon/events:lib",
    "//src/developer/ffx/lib/addr:lib",
    "//src/developer/ffx/lib/netext:lib",
    "//src/developer/ffx/lib/rcs:lib",
    "//src/developer/ffx/lib/ssh:lib",
    "//src/developer/ffx/lib/timeout:lib",
    "//src/developer/ffx/logger/data:lib",
    "//src/developer/ffx/logger/utils:lib",
    "//src/lib/async-utils",
    "//src/lib/diagnostics/data/rust",
    "//src/lib/diagnostics/selectors",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/mpmc",
    "//src/lib/network/netsvc-proto",
    "//src/lib/network/packet",
    "//src/lib/usb_bulk/rust:lib",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-channel",
    "//third_party/rust_crates:async-fs",
    "//third_party/rust_crates:async-io",
    "//third_party/rust_crates:async-lock",
    "//third_party/rust_crates:async-net",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:byteorder",
    "//third_party/rust_crates:chrono",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:futures-lite",
    "//third_party/rust_crates:itertools",
    "//third_party/rust_crates:lazy_static",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:serde_json",
    "//third_party/rust_crates:shared_child",
    "//third_party/rust_crates:socket2",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:tracing",
    "//third_party/rust_crates:zerocopy",
  ]

  test_deps = [
    "//sdk/fidl/fuchsia.overnet.protocol:fuchsia.overnet.protocol_rust",
    "//src/developer/ffx/logger/test_utils:lib",
    "//third_party/rust_crates:assert_matches",
    "//third_party/rust_crates:serial_test",
    "//third_party/rust_crates:tempfile",
  ]

  sources = [
    "src/fastboot/client.rs",
    "src/fastboot/mod.rs",
    "src/fastboot/network/mod.rs",
    "src/fastboot/network/tcp.rs",
    "src/fastboot/network/udp.rs",
    "src/lib.rs",
    "src/logger/mod.rs",
    "src/logger/streamer.rs",
    "src/manual_targets.rs",
    "src/overnet/host_pipe.rs",
    "src/overnet/mod.rs",
    "src/target.rs",
    "src/target_collection.rs",
    "src/zedboot.rs",
  ]
}

group("target") {
  testonly = true
  deps = [ ":lib($host_toolchain)" ]
}

group("tests") {
  testonly = true
  deps = [ ":lib_test($host_toolchain)" ]
}
