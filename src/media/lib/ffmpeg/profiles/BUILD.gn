# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//src/media/lib/ffmpeg/build/profiles.gni")

#
# The set of profiles for ffmpeg roll.
#
# The deps of this target determine what profiles are available to the
# prebuilder and to developers doing local ffmpeg builds. Profile targets
# may be anywhere accessible to this build file.
#
# Altering this target or any of its deps will have no effect on the GN
# build until an ffmpeg roll is completed using the files generated from
# the updated targets.
#
ffmpeg_profile_set("profiles") {
  deps = [
    ":default",
    ":smart_display",
  ]
}

#
# "default" ffmpeg profile. This profile includes a variety of useful decoders,
# demuxes and parsers. It is intended for eng devices.
#
ffmpeg_profile("default") {
  deps = [
    "//src/media/lib/ffmpeg/features:enable_decoder_aac",
    "//src/media/lib/ffmpeg/features:enable_decoder_aac_latm",
    "//src/media/lib/ffmpeg/features:enable_decoder_amrnb",
    "//src/media/lib/ffmpeg/features:enable_decoder_amrwb",
    "//src/media/lib/ffmpeg/features:enable_decoder_aptx",
    "//src/media/lib/ffmpeg/features:enable_decoder_flac",
    "//src/media/lib/ffmpeg/features:enable_decoder_gsm_ms",
    "//src/media/lib/ffmpeg/features:enable_decoder_h264",
    "//src/media/lib/ffmpeg/features:enable_decoder_libopus",
    "//src/media/lib/ffmpeg/features:enable_decoder_mp3",
    "//src/media/lib/ffmpeg/features:enable_decoder_mpeg4",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_alaw",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_f32le",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_mulaw",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_s16be",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_s16le",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_s24be",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_s24le",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_s32le",
    "//src/media/lib/ffmpeg/features:enable_decoder_pcm_u8",
    "//src/media/lib/ffmpeg/features:enable_decoder_sbc",
    "//src/media/lib/ffmpeg/features:enable_decoder_theora",
    "//src/media/lib/ffmpeg/features:enable_decoder_vorbis",
    "//src/media/lib/ffmpeg/features:enable_decoder_vp8",
    "//src/media/lib/ffmpeg/features:enable_demuxer_aac",
    "//src/media/lib/ffmpeg/features:enable_demuxer_amr",
    "//src/media/lib/ffmpeg/features:enable_demuxer_avi",
    "//src/media/lib/ffmpeg/features:enable_demuxer_flac",
    "//src/media/lib/ffmpeg/features:enable_demuxer_gsm",
    "//src/media/lib/ffmpeg/features:enable_demuxer_matroska",
    "//src/media/lib/ffmpeg/features:enable_demuxer_mov",
    "//src/media/lib/ffmpeg/features:enable_demuxer_mp3",
    "//src/media/lib/ffmpeg/features:enable_demuxer_ogg",
    "//src/media/lib/ffmpeg/features:enable_demuxer_wav",
    "//src/media/lib/ffmpeg/features:enable_parser_aac",
    "//src/media/lib/ffmpeg/features:enable_parser_aac_latm",
    "//src/media/lib/ffmpeg/features:enable_parser_flac",
    "//src/media/lib/ffmpeg/features:enable_parser_gsm",
    "//src/media/lib/ffmpeg/features:enable_parser_h263",
    "//src/media/lib/ffmpeg/features:enable_parser_h264",
    "//src/media/lib/ffmpeg/features:enable_parser_mpeg4video",
    "//src/media/lib/ffmpeg/features:enable_parser_mpegaudio",
    "//src/media/lib/ffmpeg/features:enable_parser_opus",
    "//src/media/lib/ffmpeg/features:enable_parser_vorbis",
    "//src/media/lib/ffmpeg/features:enable_parser_vp3",
    "//src/media/lib/ffmpeg/features:enable_parser_vp8",
  ]
}

#
# "smart_display" ffmpeg profile. This profile includes only the h264
# decoder and is intended for smart displays.
#
ffmpeg_profile("smart_display") {
  deps = [ "//src/media/lib/ffmpeg/features:enable_decoder_h264" ]
}
