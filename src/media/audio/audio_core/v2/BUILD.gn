# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")

source_set("audio_core_lib") {
  sources = [
    "audio_capturer_server.cc",
    "audio_capturer_server.h",
    "audio_core_component.cc",
    "audio_core_component.h",
    "audio_core_server.cc",
    "audio_core_server.h",
    "audio_renderer_server.cc",
    "audio_renderer_server.h",
    "audio_server.cc",
    "audio_server.h",
    "input_device_pipeline.cc",
    "input_device_pipeline.h",
    "output_device_pipeline.cc",
    "output_device_pipeline.h",
    "reference_clock.cc",
    "reference_clock.h",
    "renderer_capturer_creator.cc",
    "renderer_capturer_creator.h",
    "route_graph.cc",
    "route_graph.h",
    "stream_sink_server.cc",
    "stream_sink_server.h",
    "task_barrier.h",
    "ultrasound_factory_server.cc",
    "ultrasound_factory_server.h",
    "usage_volume.cc",
    "usage_volume.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.audio:fuchsia.audio_cpp_wire",
    "//sdk/fidl/fuchsia.audio.mixer:fuchsia.audio.mixer_cpp_wire",
    "//sdk/fidl/fuchsia.media:fuchsia.media_cpp_wire",
    "//sdk/fidl/fuchsia.media2:fuchsia.media2_cpp_hlcpp_conversion",
    "//sdk/fidl/fuchsia.media2:fuchsia.media2_cpp_wire",
    "//sdk/fidl/fuchsia.scheduler:fuchsia.scheduler_hlcpp",
    "//sdk/fidl/fuchsia.ultrasound:fuchsia.ultrasound_cpp_wire",
    "//sdk/lib/fit",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/media/audio/audio_core/shared",
    "//src/media/audio/services/common",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/trace-provider",
  ]
}

source_set("audio_core_main") {
  sources = [ "main.cc" ]

  deps = [
    ":audio_core_lib",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/trace-provider",
  ]
}

executable("unittest_bin") {
  visibility = [ ":*" ]
  testonly = true
  output_name = "audio_core_v2_unittests"

  sources = [
    "audio_capturer_server_unittest.cc",
    "audio_renderer_server_unittest.cc",
    "input_device_pipeline_unittest.cc",
    "output_device_pipeline_unittest.cc",
    "route_graph_unittest.cc",
    "stream_sink_server_unittest.cc",
    "usage_volume_unittest.cc",
  ]

  deps = [
    ":audio_core_lib",
    "testing",
    "//src/lib/fxl/test:gtest_main",
    "//src/media/audio/effects/test_effects:test_effects_v2",
    "//src/media/audio/lib/format",
    "//src/media/audio/lib/processing:prebuilt_coefficient_tables",
    "//src/media/audio/services/common",
    "//src/media/audio/services/common/testing",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/async-testing",
  ]
}

fuchsia_unittest_package("audio_core_v2_unittests") {
  deps = [ ":unittest_bin" ]
}

group("tests") {
  testonly = true
  deps = [
    # TODO(fxbug.dev/98652): temporary to ensure this builds
    ":audio_core_main",
    ":audio_core_v2_unittests",
  ]
}
