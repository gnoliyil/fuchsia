# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/python/python_host_test.gni")
import("//build/python/python_library.gni")

if (is_host) {
  python_library("api_infra") {
    sources = [ "api_infra.py" ]
  }

  python_library("api_mobly") {
    sources = [ "api_mobly.py" ]
    library_deps = [ "//third_party/mobly" ]
  }

  python_host_test("api_mobly_test") {
    main_source = "api_mobly_test.py"
    sources = [ "api_mobly.py" ]
    libraries = [
      ":api_mobly",
      "//third_party/parameterized",
    ]
  }

  python_library("mobly_driver_lib") {
    sources = [ "mobly_driver_lib.py" ]
    library_deps = [ "drivers:base_mobly_driver" ]
  }

  python_host_test("mobly_driver_lib_test") {
    main_source = "mobly_driver_lib_test.py"
    sources = [
      "drivers/base_mobly_driver.py",
      "mobly_driver_lib.py",
    ]
    libraries = [
      ":mobly_driver_lib",
      "//third_party/parameterized",
    ]
  }

  python_library("driver_factory") {
    sources = [ "driver_factory.py" ]
    library_deps = [
      ":api_infra",
      "drivers:common",
      "drivers:infra_driver",
      "drivers:local_driver",
    ]
  }

  python_host_test("driver_factory_test") {
    main_source = "driver_factory_test.py"
    sources = [
      "api_infra.py",
      "driver_factory.py",
      "drivers/base_mobly_driver.py",
      "drivers/common.py",
      "drivers/infra_driver.py",
      "drivers/local_driver.py",
    ]
    libraries = [
      ":driver_factory",
      "//third_party/parameterized",
    ]
  }

  group("tests") {
    testonly = true
    public_deps = [
      ":api_mobly_test($host_toolchain)",
      ":driver_factory_test($host_toolchain)",
      ":mobly_driver_lib_test($host_toolchain)",
      "drivers:tests",
    ]
  }

  # Mobly Driver Python binary definition.
  _md_bin_target = "mobly_driver_binary_target"
  _md_bin_name = "mobly_driver.pyz"
  _md_bin_path = get_label_info(":${_md_bin_target}", "target_out_dir") +
                 "/${_md_bin_name}"
  python_binary(_md_bin_target) {
    testonly = true
    main_source = "main.py"
    sources = [
      "api_infra.py",
      "api_mobly.py",
      "driver_factory.py",
      "drivers/base_mobly_driver.py",
      "drivers/common.py",
      "drivers/infra_driver.py",
      "drivers/local_driver.py",
      "main.py",
      "mobly_driver_lib.py",
    ]
    main_callable = "main"
    output_name = _md_bin_name
    deps = [
      ":driver_factory",
      ":mobly_driver_lib",
    ]
  }

  # Mobly Driver test data definition.
  # This enables the Python binary to be used as a host test data dependency..
  _target_dir = get_label_info(_md_bin_target, "dir")
  _test_data_dir = "${root_out_dir}/test_data/${_target_dir}"
  host_test_data("mobly_driver_test_data_target") {
    testonly = true
    sources = [ _md_bin_path ]
    outputs = [ "${_test_data_dir}/${_md_bin_name}" ]
    deps = [ ":${_md_bin_target}" ]
  }
}
