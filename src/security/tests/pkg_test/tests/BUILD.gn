# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//src/storage/fshost/generated_fshost_config.gni")
import("access_ota_blob_as_executable/access_ota_blob_as_executable.gni")
import("bad_signature_update/bad_signature_update.gni")

if (is_fuchsia) {
  # Filesystem host for base (v0) system.
  fuchsia_test_component("fshost_v0-component") {
    component_name = "fshost_v0"

    # Note: Test package must include all files designated by cmdline args in
    # component manifest. See cml and source for details. These files are not
    # included as explicit deps here because they vary across different
    # packagings/configurations of the test.
    manifest = "meta/fshost_v0.cml"
    deps = [ "//src/security/tests/pkg_test/fshost:fshost-binary" ]
  }

  # Fake boot arguments for base (v0) system.
  fuchsia_test_component("fake_boot_arguments_v0-component") {
    component_name = "fake_boot_arguments_v0"
    manifest = "meta/fake_boot_arguments_v0.cml"
    deps = [ "//src/security/tests/pkg_test/fake_boot_arguments:fake_boot_arguments-binary" ]
  }

  # Package server for updated (v1) system.
  fuchsia_test_component("pkg_server-v1-component") {
    component_name = "pkg_server"

    # Note: Test package must include all files and directories designated by
    # cmdline args in component manifest. See cml and source for details. These
    # files are not included as explicit deps here because they vary across
    # different packagings/configurations of the test.
    manifest = "meta/pkg_server.cml"
    deps = [ "//src/security/tests/pkg_test/pkg_server:pkg_server-binary" ]
  }

  access_ota_blob_as_executable("core_access_ota_blob_as_executable") {
    base_packages = [
      "//src/security/tests/pkg_test/config:pkg_resolver_repository_config",
    ]

    # Inject config file for test component.
    update_domain = "test.fuchsia.com"

    # Configure compatible root cert, certchain, pkg_server private key.
    root_ssl_cert = "//src/sys/pkg/lib/fuchsia-pkg-testing/certs/ca.cert"
    pkg_server_certchain =
        "//src/sys/pkg/lib/fuchsia-pkg-testing/certs/test.fuchsia.com.certchain"
    pkg_server_key =
        "//src/sys/pkg/lib/fuchsia-pkg-testing/certs/test.fuchsia.com.rsa"
  }

  bad_signature_update("core_bad_signature_update") {
    base_packages = [
      "//src/security/tests/pkg_test/config:pkg_resolver_repository_config",
    ]

    # Inject config file for test component.
    update_domain = "test.fuchsia.com"

    # Configure compatible root cert, certchain, pkg_server private key.
    root_ssl_cert = "//src/sys/pkg/lib/fuchsia-pkg-testing/certs/ca.cert"
    pkg_server_certchain =
        "//src/sys/pkg/lib/fuchsia-pkg-testing/certs/test.fuchsia.com.certchain"
    pkg_server_key =
        "//src/sys/pkg/lib/fuchsia-pkg-testing/certs/test.fuchsia.com.rsa"
  }
}

group("tests") {
  testonly = true
  deps = []
  if (!fxfs_blob) {
    # TODO(fxbug.dev/122056): Support Fxblob in this test.
    deps += [ ":core_bad_signature_update-package($target_toolchain)" ]
    if (!is_coverage) {
      # TODO(https://fxbug.dev/112796): Re-enable this test in coverage when it no
      # longer fails with coverage enabled.
      deps +=
          [ ":core_access_ota_blob_as_executable-package($target_toolchain)" ]
    }
  }
}
