// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "//sdk/lib/driver/compat/compat.shard.cml",
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    program: {
        runner: "driver",
        bind: "meta/bind/amlogic-display-vim3.bindbc",

        // TODO(fxbug.dev/125227): `colocate` must be true.
        // amlogic-display driver needs to create a DsiImpl banjo client, but
        // there's no fragment proxy support for the DsiImpl protocol.
        //
        // As a result, the driver implementing DsiImpl protocol has to be a
        // direct ancestor of amlogic-display and they must be colocated in the
        // same devhost. Setting `colocate` to true gives the driver manager
        // an advisory.
        //
        // However, `colocate` is advisory only and may not be enforced
        // (for example, DEVICE_ADD_MUST_ISOLATE will override it) so the
        // colocation is never guaranteed. We should fix the DsiImpl forwarding
        // and remove this requirement.
        colocate: "true",
        compat: "driver/amlogic-display-vim3.so",
        default_dispatcher_opts: [ "allow_sync_calls" ],
    },
    use: [
        { protocol: "fuchsia.scheduler.ProfileProvider" },
        { service: "fuchsia.hardware.hdmi.Service" },
        { service: "fuchsia.hardware.platform.device.Service" },
    ],
}
