# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/drivers.gni")

driver_bind_rules("display_bind") {
  rules = "display.bind"
  header_output = "display-bind.h"
  bind_output = "display.bindbc"
  tests = "bind_tests.json"
  deps = [ "//src/devices/bind/fuchsia.hardware.display" ]
}

fuchsia_driver("display-driver") {
  output_name = "display"
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  deps = [
    ":shared",
    "//sdk/lib/syslog/cpp:backend",
    "//src/devices/lib/driver",
  ]
}

fuchsia_driver_component("display") {
  component_name = "display"
  deps = [ ":display-driver" ]
  info = "display-info.json"
  colocate = true
  uses_profiles = true
  root_resource = true
  uses_boot_args = true
}

# Also used by test/.
source_set("shared") {
  visibility = [
    "../fake:mock-display-device-tree",
    "./*",
  ]
  configs += [ "//build/config:all_source" ]
  sources = [
    "client.cc",
    "controller.cc",
    "display-info.cc",
    "eld.cc",
    "fence.cc",
    "image.cc",
    "layer.cc",
    "util.cc",
  ]
  public_deps = [
    ":display_bind",
    "//sdk/banjo/fuchsia.hardware.audiotypes:fuchsia.hardware.audiotypes_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.display.capture:fuchsia.hardware.display.capture_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.display.clamprgb:fuchsia.hardware.display.clamprgb_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.display.controller:fuchsia.hardware.display.controller_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.i2cimpl:fuchsia.hardware.i2cimpl_banjo_cpp",
    "//sdk/fidl/fuchsia.hardware.display:fuchsia.hardware.display_cpp_wire",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_c",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_cpp_wire",
    "//sdk/lib/fidl",
    "//src/devices/lib/audio",
    "//src/devices/lib/mmio",
    "//src/graphics/display/lib/edid",
    "//src/lib/async-watchdog",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//src/lib/eld",
    "//src/lib/fsl",
    "//src/media/audio/drivers/lib/audio-proto-utils",
    "//zircon/system/ulib/async:async-cpp",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/hwreg",
    "//zircon/system/ulib/image-format",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/pretty",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/zx",
  ]

  # TODO(fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]

  # TODO(fxbug.dev/69585): This target uses raw zx::channel with LLCPP which is deprecated.
  # Please migrate to typed channel APIs (fidl::ClientEnd<T>, fidl::ServerEnd<T>).
  # See linked bug for details.
  configs += [ "//build/cpp:fidl-llcpp-deprecated-raw-channels" ]

  # TODO(fxbug.dev/95833): This target uses the deprecated C bindings.
  # Consider switching to the C++ bindings. See linked bug for details.
  configs += [ "//build/c:fidl-deprecated-c-bindings" ]
}

source_set("preferred-scanout-image-type") {
  sources = [ "preferred-scanout-image-type.h" ]
}

group("tests") {
  testonly = true
  deps = [
    ":display_bind_test",
    "tests",
  ]
}
