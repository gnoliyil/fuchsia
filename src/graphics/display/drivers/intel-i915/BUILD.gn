# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

driver_bind_rules("intel-i915-bind") {
  rules = "intel-i915.bind"
  tests = "bind_tests.json"

  deps = [
    "//src/devices/bind/fuchsia.driver.framework",
    "//src/devices/bind/fuchsia.pci",
  ]
}

source_set("common_srcs") {
  configs += [ "//build/config:all_source" ]
  public_configs = [ "//build/config/fuchsia:enable_zircon_asserts" ]

  sources = [
    "acpi-memory-region.cc",
    "clock/cdclk.cc",
    "ddi-aux-channel.cc",
    "ddi-physical-layer-manager.cc",
    "ddi-physical-layer.cc",
    "ddi.cc",
    "display-device.cc",
    "dp-display.cc",
    "dpll-config.cc",
    "dpll.cc",
    "firmware-bridge.cc",
    "fuse-config.cc",
    "gtt.cc",
    "hdmi-display.cc",
    "i2c/gmbus-i2c.cc",
    "igd.cc",
    "intel-i915.cc",
    "interrupts.cc",
    "pch-engine.cc",
    "pipe-manager.cc",
    "pipe.cc",
    "power-controller.cc",
    "power.cc",
  ]
  public_deps = [
    ":intel-i915-bind",
    "//sdk/banjo/fuchsia.hardware.display.controller:fuchsia.hardware.display.controller_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.i2cimpl:fuchsia.hardware.i2cimpl_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.intelgpucore:fuchsia.hardware.intelgpucore_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.sysmem:fuchsia.hardware.sysmem_banjo_cpp",
    "//sdk/fidl/fuchsia.hardware.backlight:fuchsia.hardware.backlight_cpp_wire",
    "//sdk/fidl/fuchsia.hardware.sysmem:fuchsia.hardware.sysmem_cpp_wire",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_cpp_wire",
    "//sdk/lib/stdcompat",
    "//sdk/lib/zbi-format",
    "//src/devices/lib/driver",
    "//src/devices/lib/mmio",
    "//src/devices/pci/lib/device-protocol-pci",
    "//src/devices/pci/lib/pci",
    "//src/graphics/display/lib/api-types-cpp",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//src/lib/fsl",
    "//src/lib/zbitl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/hwreg",
    "//zircon/system/ulib/image-format",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/region-alloc",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_driver("intel-i915-driver") {
  output_name = "intel-i915"
  deps = [
    ":common_srcs",
    "//sdk/lib/syslog/cpp:backend",
  ]
}

fuchsia_driver_component("intel-i915") {
  component_name = "intel-i915"
  deps = [ ":intel-i915-driver" ]
  info = "intel-i915-info.json"
  manifest = "meta/intel-i915.cml"
}

test("intel-i915-test") {
  configs += [ "//build/config:all_source" ]
  sources = [
    "acpi-memory-region-unittest.cc",
    "acpi-memory-region-util-unittest.cc",
    "ddi-aux-channel-unittest.cc",
    "ddi-physical-layer-manager-unittest.cc",
    "ddi-physical-layer-unittest.cc",
    "dp-capabilities-unittest.cc",
    "dp-display-unittest.cc",
    "dpll-config-unittest.cc",
    "dpll-unittest.cc",
    "fake-dpcd-channel.cc",
    "fake-dpcd-channel.h",
    "firmware-bridge-unittest.cc",
    "fuse-config-unittest.cc",
    "gtt-unittest.cc",
    "hardware-common-unittest.cc",
    "i2c/gmbus-gpio-unittest.cc",
    "intel-i915-test.cc",
    "interrupts-unittest.cc",
    "pch-engine-unittest.cc",
    "pipe-manager-unittest.cc",
    "pipe-unittest.cc",
    "poll-until-unittest.cc",
    "power-controller-unittest.cc",
    "power-unittest.cc",
    "registers-arbiter-unittest.cc",
    "registers-ddi-phy-tiger-lake-unittest.cc",
    "registers-ddi-unittest.cc",
    "registers-dpll-unittest.cc",
    "registers-gmbus-unittest.cc",
    "registers-memory-controller-unittest.cc",
    "registers-pipe-scaler-unittest.cc",
    "registers-pipe-unittest.cc",
    "registers-transcoder-unittest.cc",
    "registers-typec-unittest.cc",
    "registers-unittest.cc",
    "scoped-value-change-unittest.cc",
    "scoped-value-change.cc",
  ]
  deps = [
    ":common_srcs",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_cpp_wire_testing",
    "//sdk/lib/async-loop-testing/cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//src/devices/pci/testing:pci-protocol-fake",
    "//src/devices/testing/fake-mmio-reg",
    "//src/devices/testing/mock-ddk",
    "//src/devices/testing/mock-mmio-range",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fidl-async:fidl-async-cpp",
    "//zircon/system/ulib/mmio-ptr:mmio-ptr-fake",
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":intel-i915-bind_test",
    ":intel-i915-test-package",
  ]
}

fuchsia_unittest_package("intel-i915-test-package") {
  package_name = "intel-i915-test"
  deps = [ ":intel-i915-test" ]
  manifest = "meta/intel-i915-test.cml"
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}
