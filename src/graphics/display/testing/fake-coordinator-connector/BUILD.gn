# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/test.gni")
import("//tools/cmc/build/expect_includes.gni")

executable("bin") {
  testonly = true
  output_name = "fake_display_coordinator_connector"

  configs += [ "//build/config:all_source" ]

  sources = [ "main.cc" ]

  deps = [
    ":service",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/trace-provider",
  ]
}

source_set("service") {
  testonly = true

  configs += [ "//build/config:all_source" ]

  sources = [
    "service.cc",
    "service.h",
  ]

  deps = [ "//src/graphics/display/drivers/fake:sysmem-proxy-device" ]

  public_deps = [
    "//sdk/fidl/fuchsia.hardware.display:fuchsia.hardware.display_cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/sys/cpp",
    "//src/graphics/display/drivers/fake:fake-display-stack",
  ]

  visibility = [
    ":bin",
    "tests:*",
  ]
}

fuchsia_component("component") {
  testonly = true
  manifest = "meta/fake_display_coordinator_connector.cml"
  component_name = "display-coordinator-connector"
  deps = [ ":bin" ]
}

fuchsia_package("fake-coordinator-connector") {
  testonly = true
  package_name = "fake-display-coordinator-connector"
  deps = [ ":component" ]
}

expect_includes("shard-includes") {
  includes = [ "meta/fake_display_coordinator_connector.shard.cml" ]
}

# Includes `component` as a child component
# and performs "includes" check for the fake display coordinator provider
# shard in the component manifest.
#
# Only supports statically defined components; do not use this on realms built
# by Realm Builder.
group("child-component") {
  testonly = true
  deps = [
    ":component",
    ":shard-includes",
  ]
}

group("tests") {
  testonly = true
  deps = [ "tests" ]
}
