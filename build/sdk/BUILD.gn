# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/python/python_host_test.gni")

if (is_host) {
  python_host_test("sdk_common_unittests") {
    main_source = "sdk_common_unittest.py"
    sources = [ "sdk_common.py" ]
  }
}

group("tests") {
  testonly = true

  deps = [
    ":sdk_common_unittests($host_toolchain)",
    "meta:tests($host_toolchain)",
    "tests",
    "tools/merge:merge_sdk_test($host_toolchain)",
  ]
}

# Contains all the source sets redistributed with the partner or public SDK that
# should be compatible with all the currently supported API levels.
_sdk_versioned_source_sets_list = [
  # sdk_source_set() targets:
  "//sdk/lib/driver/devfs/cpp",
  "//sdk/lib/async-loop-testing/cpp",
  "//sdk/lib/driver/incoming/cpp",
  "//sdk/lib/driver/logging/cpp",
  "//sdk/lib/driver/outgoing/cpp",
  "//sdk/lib/driver/runtime:driver_runtime",
  "//sdk/lib/driver/runtime:driver_runtime_cpp",
  "//sdk/lib/driver/runtime:driver_runtime_env",
  "//sdk/lib/driver/runtime:driver_runtime_env_cpp",
  "//sdk/lib/driver/symbols",
  "//sdk/lib/component/incoming/cpp",
  "//sdk/lib/component/outgoing/cpp",
  "//sdk/lib/fdio:fdio-spawn-actions",
  "//sdk/lib/fidl_driver:fidl_driver_transport",
  "//sdk/lib/fidl_driver:fidl_driver_natural",
  "//sdk/lib/fidl_driver",
  "//sdk/lib/fidl",
  "//sdk/lib/inspect/component/cpp:inspect_component_cpp",
  "//sdk/lib/fidl/cpp",
  "//sdk/lib/fidl/cpp/wire",
  "//sdk/lib/fidl/cpp:cpp_base",
  "//sdk/lib/fidl/cpp:cpp_sync",
  "//sdk/lib/fidl_base",
  "//sdk/lib/fit",
  "//sdk/lib/fit-promise",
  "//sdk/lib/images/cpp",
  "//sdk/lib/input_report_reader",
  "//sdk/lib/inspect/service/cpp",
  "//sdk/lib/media/cpp",
  "//sdk/lib/media/cpp:no_converters",
  "//sdk/lib/stdcompat",
  "//sdk/lib/sys/cpp",
  "//sdk/lib/sys/inspect/cpp",
  "//sdk/lib/sys/service/cpp",
  "//sdk/lib/syslog/structured_backend",
  "//sdk/lib/ui/scenic/cpp",
  "//sdk/lib/utf-utils",
  "//sdk/lib/vfs/cpp",
  "//sdk/lib/zbi-format",
  "//src/firmware/lib/zbi",
  "//src/lib/fidl/cpp",
  "//src/lib/fidl/cpp:cpp_base",
  "//src/lib/fidl/cpp:hlcpp_conversion",
  "//src/lib/fidl/cpp:natural_ostream",
  "//third_party/android/platform/external/avb",
  "//zircon/system/ulib/async",
  "//zircon/system/ulib/async-loop",
  "//zircon/system/ulib/async-loop:async-loop-cpp",
  "//zircon/system/ulib/async:async-cpp",
  "//zircon/system/ulib/ddk-platform-defs",
  "//zircon/system/ulib/inspect",
  "//zircon/system/ulib/mmio-ptr",
  "//zircon/system/ulib/trace",
  "//zircon/system/ulib/zx",

  # dart_library() targets:
  "//sdk/dart/fuchsia_vfs",
  "//sdk/dart/zircon",
  "//sdk/testing/sl4f/client",
]

group("sdk_versioned_source_sets") {
  deps = _sdk_versioned_source_sets_list
}

group("sdk_versioned_source_sets_allowlist") {
  visibility =
      _sdk_versioned_source_sets_list + [ ":sdk_versioned_source_sets" ]
}

# Contains all the shared libraries redistributed with the partner or public
# SDK that should be compatible with all the currently supported API levels.
_sdk_versioned_shared_libraries_list = [
  "//sdk/lib/fdio:fdio",
  "//sdk/lib/svc:svc",
  "//src/devices/bin/driver_runtime:driver_runtime",
  "//third_party/Vulkan-Loader:libvulkan",
  "//zircon/system/ulib/async-default:async-default",
  "//zircon/system/ulib/syslog:syslog",
  "//zircon/system/ulib/trace-engine:trace-engine",
  "//zircon/system/ulib/trace-provider:trace-provider-so",
]

group("sdk_versioned_shared_libraries") {
  deps = _sdk_versioned_shared_libraries_list
}

group("sdk_versioned_shared_libraries_allowlist") {
  visibility = _sdk_versioned_shared_libraries_list +
               [ ":sdk_versioned_shared_libraries" ]
}
