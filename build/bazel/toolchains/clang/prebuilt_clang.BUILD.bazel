# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

"""BUILD.bazel file for @prebuilt_clang repository."""

load("@//:fuchsia_build_config.bzl", "build_config")
load(":generated_constants.bzl", "constants")
load(
    "@//:build/bazel/toolchains/clang/toolchains.bzl",
    "define_host_prebuilt_clang_cc_toolchains",
)
load(
    "@//:build/bazel/toolchains/clang/clang_utilities_test.bzl",
    "include_clang_utilities_test_suite",
)

package(default_visibility = ["//visibility:public"])

# The following filegroups are referenced from toolchains.bzl functions.

filegroup(
    name = "all",
    srcs = glob(["**/*"], exclude = ["**/*.html", "**/*.pdf"]),
)

filegroup(
    name = "compiler_binaries",
    srcs = [
        "bin/clang",
        "bin/clang++",
    ],
)

filegroup(
    name = "linker_binaries",
    srcs = glob(["bin/*"]),  # TODO(digit): Restrict this
)

filegroup(
    name = "ar_binaries",
    srcs = ["bin/llvm-ar"],
)

filegroup(
    name = "objcopy_binaries",
    srcs = ["bin/llvm-objcopy"],
)

filegroup(
    name = "strip_binaries",
    srcs = ["bin/llvm-strip"],
)

filegroup(
    name = "all_binaries",
    srcs = [
        ":compiler_binaries",
        ":linker_binaries",
        ":ar_binaries",
        ":objcopy_binaries",
        ":strip_binaries",
    ],
)

filegroup(
    name = "headers",
    srcs = glob([
        "lib/clang/%s/include/**" % constants.clang_long_version,
        "include/c++/v1/**",
        "include/%s/c++/v1/**" % build_config.host_target_triple,
    ]),
)

filegroup(
    name = "runtime_libraries",
    srcs = glob([
        "lib/%s/**" % build_config.host_target_triple,
    ]) + [
        "lib/clang/%s/lib/%s/libclang_rt.builtins.a" % (constants.clang_short_version, build_config.host_target_triple),
    ],
)

exports_files(
    glob(["**/*"]),
)

define_host_prebuilt_clang_cc_toolchains("host_clang", build_config.host_os, build_config.host_arch)

include_clang_utilities_test_suite(
    name = "test_suite",
)
