# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/assembled_system.gni")
import("//build/images/zedboot/zedboot_args.gni")
import("//src/sys/core/build/core.gni")
import("//src/sys/root/build/root.gni")

# Wraps assembled_system to allow adding internal network-conformance test stubs.
#
# Parameters
#
#   additional_base_packages
#     Additional package labels to include in the `base_packages` passed to `assembled_system`.
#
template("assemble_network_conformance_system") {
  core_name = "core-${target_name}"

  core_realm_definition("core") {
    testonly = true

    deps = [
      # Need ssh to test the system
      "//src/developer/sshd-host:core_shard",
      "//src/sys/process-resolver:core_shard",
    ]

    restrict_persistent_storage = false
    restrict_core_env_to_base = false
  }

  root_realm("root") {
    testonly = true

    core_package_name = core_name
  }

  assembled_system(target_name) {
    testonly = true

    base_packages = [
      "//src/developer/sshd-host",
      "//src/developer/sshd-host:config",
      "//src/sys/process-resolver",
      "//src/connectivity/network",
      "//src/connectivity/network/mdns/bundles:config",
      "//src/connectivity/network/mdns/bundles:services",
      "//src/connectivity/network/netcfg:config-default",
      "//src/connectivity/network/net-cli",
      "//src/connectivity/network/testing/network-test-realm/service:network-test-realm",
      "//src/developer/ffx:runtime",
      "//src/security/policy:appmgr_policy_eng",
      "//src/security/bin/root_ssl_certificates",
      "//src/sys/appmgr:appmgr_scheme_config",
      "//src/sys/appmgr",
      "//src/sys/pkg/bin/pkg-cache",
      "//src/sys/pkg/bin/pkg-resolver",
      "//src/sys/full-resolver",
    ]
    base_packages += invoker.additional_base_packages

    core_realm_definition = ":core"
    core_package_name = core_name

    generate_fvm = !bootfs_only
    ramdisk_fvm_in_zbi = true

    include_component_id_index = true
    devmgr_config = [ "virtcon.disable=true" ] + zedboot_devmgr_config
    cmdline = [
      "console.shell=true",
      "netsvc.disable=false",
      "kernel.enable-debugging-syscalls=true",
      "kernel.enable-serial-syscalls=true",
      "kernel.serial=legacy",
      "kernel.halt-on-panic=true",
    ]

    bootfs_labels = [
      ":root",
      "//build/input:recovery_bootfs",
      "//bundles:bootstrap",
      "//bundles/drivers:bootstrap",
      "//src/sys/bin/psutils",
      "//src/sys/component_manager:component_manager_bootfs_config",
      "//src/diagnostics/archivist:default-service-config",
    ]
  }
}
