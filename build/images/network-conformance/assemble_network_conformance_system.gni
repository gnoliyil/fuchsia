# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/assembled_system.gni")
import("//build/assembly/product_assembly_configuration.gni")
import("//build/images/zedboot/zedboot_args.gni")
import("//src/storage/fshost/generated_fshost_config.gni")
import("//src/sys/core/build/core.gni")

# Wraps assembled_system to allow adding internal network-conformance test stubs.
#
# Parameters
#
#   additional_base_packages
#     Additional package labels to include in the `base_packages` passed to `assembled_system`.
#
template("assemble_network_conformance_system") {
  core_realm_definition("core") {
    testonly = true
  }

  product_assembly_configuration(target_name + ".product_assembly_config") {
    platform = {
      build_type = "eng"
      feature_set_level = "utility"
    }
  }

  assembled_system(target_name) {
    testonly = true
    product_assembly_config_label = ":${target_name}.product_assembly_config"
    allow_eng_platform_bundle_use = true

    base_packages = [
      "//src/developer/sshd-host:config-for_transition",
      "//src/connectivity/network",
      "//src/connectivity/network/mdns/bundles:config",
      "//src/connectivity/network/mdns/bundles:services",
      "//src/connectivity/network/netcfg:config-default",
      "//src/connectivity/network/net-cli",
      "//src/connectivity/network/testing/network-test-realm/service:network-test-realm",
      "//src/security/policy:appmgr_policy_eng",
      "//src/security/bin/root_ssl_certificates",
      "//src/sys/full-resolver",
    ]
    base_packages += invoker.additional_base_packages

    core_realm_definition = ":core"

    generate_fvm = !bootfs_only && !fxfs_blob
    generate_fxfs = !bootfs_only && fxfs_blob
    ramdisk_in_zbi = true

    include_component_id_index = true
    additional_boot_args =
        [ "virtcon.disable=true" ] + zedboot_additional_boot_args
    cmdline = [ "kernel.halt-on-panic=true" ]

    bootfs_labels = [
      "//build/input:recovery_bootfs",
      "//bundles:bootstrap",
      "//bundles/drivers:bootstrap",
      "//src/sys/bin/psutils",
      "//src/sys/component_manager:component_manager_bootfs_config",
      "//zircon/third_party/uapp/dash:dash",
    ]
  }
}
