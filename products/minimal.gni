# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# This `minimal` product is intended to be the "smallest thing we'd still call Fuchsia," which
# implies simplicity, security, updatability and performance. Importantly, that differs from "all
# current products use this feature;" today, that is what the `core` product is for.
# `minimal` will change over time, both by addition and subtraction -- for example, should the
# team ship a mechanism for updating Fuchsia that does not require IP networking, that functionality
# should be moved to a higher-level product definition.

import("//products/common/minimal.gni")

# Kernel command line arguments.
product_bootfs_labels += [
  "//products/kernel_cmdline:oom.reboot-timeout--low",
  "//bundles/drivers:usb-peripheral-stack",
  "//src/sys/component_manager:component_manager_bootfs_config",
]

core_realm_shards += [
  "//src/sys/pkg/bin/system-update-checker:system-update-checker-core-shard",
]

legacy_base_package_labels += [
  # TODO(http://fxb/100451): remove once core_realm shards can be compiled via
  "//src/sys/pkg:system-update-checker",

  # TODO(http://fxb/103965): remove once we have config_data support in assembly_input_bundle()
  "//src/connectivity/network/netcfg:config-default",
]

# Use the product assembly config target to specify the product configuration.
#
# This should be overridden by products which inherit from minimal.
fuchsia_product_assembly_config_label = "//products/minimal"

fuchsia_structured_config_policy =
    "//products/minimal/minimal_user_structured_config_policy.json5"

bazel_product_bundle_prefix = "//build/bazel/assembly:minimal"
extra_bazel_assembly_targets =
    [ "//build/bazel/assembly/assembly_outputs:verifications" ]

assembly_fshost = true
