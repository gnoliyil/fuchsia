# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/security/policies.gni")
import("//products/common/bringup.gni")

# TODO(fxbug.dev/102390): deprecate appmgr from speaker.
import("//src/sys/appmgr/appmgr.gni")
fuchsia_product_assembly_config_label = "//products/core"

# Minimal, and all products based on it, use the "standard" assembled_system()
# impl in `//build/images/fuchsia`
use_bringup_assembly = false
bootfs_only = false

product_system_image_deps = []

core_realm_restrict_persistent_storage = false

core_realm_shards = [
  "//src/connectivity/network:virtualization-core-shard",
  "//src/developer/build_info:build_info_core_shard",
  "//src/developer/forensics:core_shard",
  "//src/developer/memory/monitor:memory_monitor_core_shard",
  "//src/recovery/factory_reset:factory_reset_core_shard",
  "//src/sys/pkg/bin/system-updater:system-updater-core-shard",
  "//src/sys/process-resolver:core_shard",
  "//src/connectivity/bluetooth/tools/bt-snoop:bt-snoop-core-shard",
  "//src/connectivity/wlan/wlancfg:wlancfg-core-shard",
  "//src/connectivity/wlan/wlandevicemonitor:wlandevicemonitor-core-shard",
  "//src/connectivity/wlan/wlanstack:wlanstack-core-shard",
  "//src/developer/debug/debug_agent:core_shard",
  "//src/developer:default-laboratory-env-core-shard",
  "//src/developer/remote-control:laboratory-core-shard",
  "//src/devices/bin/driver_playground:driver-playground-core-shard",
  "//src/developer/process_explorer:process_explorer_core_shard",
  "//src/media/audio/audio_core:core_shard",
  "//src/media/sounds/soundplayer:core_shard",
  "//src/performance/trace_manager:trace_manager_core_shard",
  "//src/proc/bin/starnix_manager:starnix_manager_core_shard",
  "//src/settings/service:setui_service_core_shard",
  "//src/sys/pkg/bin/system-update-checker:system-update-checker-core-shard",
  "//src/sys/pkg/bin/system-updater:system-updater-core-shard",
  "//src/intl/tzdata_provider:core-shard",
  "//src/testing/metrics-logger:metrics-logger-shard",
  "//src/sys/test_manager:test_manager_core_shard",
  "//src/sys/fuzzing:fuzzing-core-shard",
  "//src/developer/sshd-host:core_shard",
  "//src/virtualization/bin/guest_manager:debian_core_shard",
  "//src/virtualization/bin/guest_manager:termina_core_shard",
  "//src/virtualization/bin/guest_manager:zircon_core_shard",
  "//src/sys/test_manager:test_manager_cmx_support_core_shard",
  "//src/sys/appmgr:appmgr_core_shard",
  "//src/sys/pkg/bin/system-update-checker:system-update-checker-core-shard",
]
legacy_base_package_labels += appmgr_base_packages
core_realm_shards += appmgr_core_shards

base_driver_package_labels = [ "//src/connectivity/bluetooth:core-drivers" ]

legacy_base_package_labels += [
  "//build/info:build-info",
  "//src/diagnostics/log_listener:log_listener_shell",
  "//src/sys/pkg:tools",
  "//src/connectivity/network/netcfg:config-default",
  "//src/developer/sshd-host:config",
  "//src/developer/sshd-host",
  "//src/sys/pkg/bin/system-update-committer:enable_reboot_on_verification_failure",
  "//src/devices/sysmem/bin/sysmem_connector",
  "//src/sys/time/httpsdate_time_source:httpsdate-time-source",
  "//src/connectivity/network/mdns/bundles:services",
  "//src/connectivity/network/mdns/bundles:config",
  "//src/sys/full-resolver",
  "//src/recovery/factory_reset",
  "//src/connectivity/network",
  "//src/intl/tzdata_provider:pkg",
  "//src/sys/core:core_component_id_index",
  "//src/hwinfo:default_product_config",
  "//tools/cargo-gnaw:install-cargo-gnaw",
  "//src/sys/pkg:system-update-checker",
  "//src/connectivity/wlan:packages",
  "//src/sys/time/timekeeper",
  "//src/sys/process-resolver",
  "//src/connectivity/network:network-legacy-deprecated",
]

legacy_cache_package_labels += [ "//src/developer/ffx:runtime" ]

legacy_universe_package_labels += [
  "//src/testing/metrics-logger",
  "//src/devices/bin/driver_playground:pkg",
  "//bundles/tools",
  "//src/diagnostics/archivist:archivist-without-attribution",
]

product_system_image_deps +=
    [ "//src/security/policy:pkgfs_non_static_pkgs_allowlist_eng" ]

product_bootfs_labels += [
  "//src/sys/base-resolver:bootfs",
  "//bundles/drivers:usb-peripheral-stack",
  "//products/kernel_cmdline:kernel.oom.behavior--reboot",
  "//src/sys/component_manager:component_manager_bootfs_config",
]

# Use the product assembly config file to specify the product configuration.
fuchsia_product_assembly_config_file =
    "//build/assembly/default_product_config.json"
