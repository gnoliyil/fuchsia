// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        // Netstack3 does not support TCP (yet).
        {
            type: "expect_pass",
            matchers: [
                "*",
            ],
        },
        {
            type: "skip",
            matchers: [
                // Skip tests that will otherwise hang forever.
                // TODO(https://fxbug.dev/111877): un-skip some of these when the data path is ready.
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSendShutdownWrite/*",

                // Skip flaky tests. TODO(https://fxbug.dev/111877): un-skip
                // once de-flaked.
                "AllTCPSockets/TCPSocketPairTest.ShutdownWrServerClientClose/*",
                "AllInetTests/TcpSocketTest.PollWithFullBufferBlocks/*",
                "AllInetTests/TcpSocketTest.ClosedWriteBlockingSocket/*",
                "AllInetTests/TcpSocketTest.ClosedReadBlockingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownWriteConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownReadWriteConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSendRecv/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectRecvShutdownRead/*",
            ],
        },
        {
            type: "expect_failure",
            matchers: [
                // Otherwise, expect failure.
                "AllInetTests/TcpSocketTest.ShutdownWriteInTimeWait/*",
                "AllInetTests/TcpSocketTest.ClosedWriteBlockingSocket/*",
                "AllInetTests/TcpSocketTest.MsgTrunc/*",
                "AllInetTests/TcpSocketTest.MsgTruncWithCtrunc/*",
                "AllInetTests/TcpSocketTest.MsgTruncWithCtruncOnly/*",
                "AllInetTests/TcpSocketTest.MsgTruncLargeSize/*",
                "AllInetTests/TcpSocketTest.MsgTruncPeek/*",
                "AllInetTests/TcpSocketTest.TcpInqSetSockOpt/*",
                "AllInetTests/TcpSocketTest.TcpInq/*",
                "AllInetTests/TcpSocketTest.TcpSCMPriority/*",
                "AllInetTests/TcpSocketTest.GetSocketAcceptConnListener/*",
                "AllInetTests/TcpSocketTest.GetSocketAcceptConnNonListener/*",
                "AllInetTests/SimpleTcpSocketTest.SynRcvdOnListenerShutdown/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownReadConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampZeroClosedSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampBelowMinRcvBuf/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampAboveHalfMinRcvBuf/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPSynCntLessThanOne/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPSynCntGreaterThanOne/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPSynCntAboveMax/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPDeferAcceptNeg/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPDeferAcceptGreaterThanZero/*",
                "AllInetTests/SimpleTcpSocketTest.SetMaxSegFailsForInvalidMSSValues/*",
                "AllInetTests/SimpleTcpSocketTest.SetMaxSeg/*",
                "AllInetTests/SimpleTcpSocketTest.SetGetTCPCongestionShortReadBuffer/*",
                "AllInetTests/SimpleTcpSocketTest.SetGetTCPCongestionLargeReadBuffer/*",
                "AllInetTests/SimpleTcpSocketTest.SetCongestionControlSucceedsForSupported/*",
                "AllInetTests/SimpleTcpSocketTest.SetCongestionControlFailsForUnsupported/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSend/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectRetry/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListenerRead/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListenerPeek/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListener/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnect_PollWrNorm/*",
                "AllInetTests/SimpleTcpSocketTest.MaxSegDefault/*",
                "AllInetTests/SimpleTcpSocketTest.GetTCPSynCntDefault/*",
                "AllInetTests/SimpleTcpSocketTest.GetTCPDeferAcceptDefault/*",
                "AllInetTests/SimpleTcpSocketTest.ConnectUnspecifiedAddress/*",
                "AllInetTests/SimpleTcpSocketTest.CloseNonConnectedLingerOption/*",
                "AllInetTests/SimpleTcpSocketTest.CleanupOnConnectionRefused/*",
                "AllTCPSockets/AllSocketPairTest.BasicSendmmsg/*",
                "AllTCPSockets/AllSocketPairTest.SendmmsgIsLimitedByMAXIOV/*",
                "AllTCPSockets/AllSocketPairTest.BasicRecvmmsg/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsg10KB/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsgMsgCtruncNoop/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsg16KB/*",
                "AllTCPSockets/AllSocketPairTest.RecvmsgMsghdrFlagsCleared/*",
                "AllTCPSockets/AllSocketPairTest.RecvmsgPeekMsghdrFlagsCleared/*",
                "AllTCPSockets/AllSocketPairTest.RecvmmsgInvalidTimeout/*",
                "AllTCPSockets/AllSocketPairTest.RecvmmsgTimeoutBeforeRecv/*",
                "AllTCPSockets/AllSocketPairTest.LingerSocketOption/*",
                "AllTCPSockets/AllSocketPairTest.RecvWaitAll/*",
                "AllTCPSockets/AllSocketPairTest.RecvWaitAllDontWait/*",
                "AllTCPSockets/AllSocketPairTest.RecvTimeoutWaitAll/*",
                "AllTCPSockets/AllSocketPairTest.GetSockoptDomain/*",
                "AllTCPSockets/AllSocketPairTest.GetSockoptProtocol/*",
                "AllTCPSockets/AllSocketPairTest.SetAndGetBooleanSocketOptions/*",
                "AllTCPSockets/AllSocketPairTest.GetSocketOutOfBandInlineOption/*",
                "AllTCPSockets/AllSocketPairTest.GetSocketRcvbufOption/*",
                "AllTCPSockets/AllSocketPairTest.GetSetSocketRcvlowatOption/*",
                "AllTCPSockets/TCPSocketPairTest.TcpInfoSucceeds/*",
                "AllTCPSockets/TCPSocketPairTest.ShortTcpInfoSucceeds/*",
                "AllTCPSockets/TCPSocketPairTest.ZeroTcpInfoSucceeds/*",
                "AllTCPSockets/TCPSocketPairTest.CheckTcpInfoFields/*",
                "AllTCPSockets/TCPSocketPairTest.RSTSentOnCloseWithUnreadData/*",
                "AllTCPSockets/TCPSocketPairTest.RSTCausesPollHUP/*",
                "AllTCPSockets/TCPSocketPairTest.RSTSentOnCloseWithUnreadDataAllowsReadBuffered/*",
                "AllTCPSockets/TCPSocketPairTest.ShutdownRdUnreadDataShouldCauseNoPacketsUnlessClosed/*",
                "AllTCPSockets/TCPSocketPairTest.TCPCorkDefault/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPCork/*",
                "AllTCPSockets/TCPSocketPairTest.TCPCork/*",
                "AllTCPSockets/TCPSocketPairTest.SetSoKeepaliveClosed/*",
                "AllTCPSockets/TCPSocketPairTest.SetOOBInline/*",
                "AllTCPSockets/TCPSocketPairTest.MsgTruncMsgPeek/*",
                "AllTCPSockets/TCPSocketPairTest.SetCongestionControlSucceedsForSupported/*",
                "AllTCPSockets/TCPSocketPairTest.SetGetTCPCongestionShortReadBuffer/*",
                "AllTCPSockets/TCPSocketPairTest.SetGetTCPCongestionLargeReadBuffer/*",
                "AllTCPSockets/TCPSocketPairTest.SetCongestionControlFailsForUnsupported/*",
                "AllTCPSockets/TCPSocketPairTest.TCPLingerTimeoutDefault/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPLingerTimeoutLessThanZero/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPLingerTimeoutZero/*",
                "AllTCPSockets/TCPSocketPairTest.SoLingerOptionWithReset/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPLingerTimeoutAboveMax/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPLingerTimeout/*",
                "AllTCPSockets/TCPSocketPairTest.TestTCPCloseWithData/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPWindowClampBelowMinRcvBufConnectedSocket/*",
                "AllTCPSockets/TCPSocketPairTest.IpMulticastTtlDefault/*",
                "AllTCPSockets/TCPSocketPairTest.IpMulticastLoopDefault/*",
                "AllTCPSockets/TCPSocketPairTest.SetAndGetLingerOption/*",
                "AllTCPSockets/TCPSocketPairTest.SetOffLingerOption/*",
                "AllTCPSockets/TCPSocketPairTest.CloseWithLingerOption/*",
                "AllTCPSockets/TCPSocketPairTest.ResetWithSoLingerZeroTimeoutOption/*",

                // These tests fail because we don't support dual-stack socket yet.
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/*",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/*",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/*",

                // Test case variants 2,5 (and 8,11 for TCPSocketPairTest cases)
                // should fail because they test dual-stack sockets, which
                // Netstack doesn't support yet. The IPv4-only and IPv6-only
                // variants are covered by other patterns.
                "AllTCPSockets/AllSocketPairTest.*/2",
                "AllTCPSockets/AllSocketPairTest.*/5",
                "AllTCPSockets/TCPSocketPairTest.*/2",
                "AllTCPSockets/TCPSocketPairTest.*/5",
                "AllTCPSockets/TCPSocketPairTest.*/8",
                "AllTCPSockets/TCPSocketPairTest.*/11",
            ],
        },
        {
            type: "expect_pass",
            matchers: [
                // 0,1,6,7,3,4,9,10 correspond to cases where dual-stack socket
                // is not used. These tests only exercise keep-alive options,
                // and should succeed.
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/0",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/1",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/6",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/7",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/3",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/4",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/9",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepidleDefault/10",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/0",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/1",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/6",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/7",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/3",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/4",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/9",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepintvlDefault/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleZero/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlZero/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleAboveMax/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlAboveMax/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepidleToMax/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepintvlToMax/10",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/0",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/1",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/6",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/7",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/3",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/4",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/9",
                "AllTCPSockets/TCPSocketPairTest.TCPKeepcountDefault/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountZero/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountAboveMax/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToMax/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToOne/10",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/0",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/1",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/6",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/7",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/3",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/4",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/9",
                "AllTCPSockets/TCPSocketPairTest.SetTCPKeepcountToNegative/10",
            ],
        },
    ],
}
