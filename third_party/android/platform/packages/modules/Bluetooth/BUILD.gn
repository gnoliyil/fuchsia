#
#  Copyright 2023 Google, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at:
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

config("sbc_decoder_includes_config") {
  include_dirs = [ "src/system/embdrv/sbc/decoder/include" ]
}

config("sbc_warnings") {
  cflags = [
    "-Wno-conversion",
    "-Wno-implicit-fallthrough",
    "-Wno-write-strings",
  ]
}

config("undefined_behavior_shift") {
  cflags = [ "-fno-sanitize=shift" ]
}

config("undefined_behavior_signed_integer_overflow") {
  cflags = [ "-fno-sanitize=signed-integer-overflow" ]
}

source_set("sbc_decoder") {
  sources = [
    "src/system/embdrv/sbc/decoder/srce/alloc.c",
    "src/system/embdrv/sbc/decoder/srce/bitalloc-sbc.c",
    "src/system/embdrv/sbc/decoder/srce/bitalloc.c",
    "src/system/embdrv/sbc/decoder/srce/bitstream-decode.c",
    "src/system/embdrv/sbc/decoder/srce/decoder-oina.c",
    "src/system/embdrv/sbc/decoder/srce/decoder-private.c",
    "src/system/embdrv/sbc/decoder/srce/decoder-sbc.c",
    "src/system/embdrv/sbc/decoder/srce/dequant.c",
    "src/system/embdrv/sbc/decoder/srce/framing-sbc.c",
    "src/system/embdrv/sbc/decoder/srce/framing.c",
    "src/system/embdrv/sbc/decoder/srce/oi_codec_version.c",
    "src/system/embdrv/sbc/decoder/srce/synthesis-8-generated.c",
    "src/system/embdrv/sbc/decoder/srce/synthesis-dct8.c",
    "src/system/embdrv/sbc/decoder/srce/synthesis-sbc.c",
  ]

  configs += [ ":sbc_warnings" ]
  public_configs = [ ":sbc_decoder_includes_config" ]
  configs += [ ":undefined_behavior_shift" ]
}

config("sbc_encoder_includes_config") {
  include_dirs = [ "src/system/embdrv/sbc/encoder/include" ]
}

source_set("sbc_encoder") {
  sources = [
    "src/system/embdrv/sbc/encoder/srce/sbc_analysis.c",
    "src/system/embdrv/sbc/encoder/srce/sbc_dct.c",
    "src/system/embdrv/sbc/encoder/srce/sbc_dct_coeffs.c",
    "src/system/embdrv/sbc/encoder/srce/sbc_enc_bit_alloc_mono.c",
    "src/system/embdrv/sbc/encoder/srce/sbc_enc_bit_alloc_ste.c",
    "src/system/embdrv/sbc/encoder/srce/sbc_enc_coeffs.c",
    "src/system/embdrv/sbc/encoder/srce/sbc_encoder.c",
    "src/system/embdrv/sbc/encoder/srce/sbc_packing.c",
  ]

  configs += [ ":sbc_warnings" ]
  public_configs = [ ":sbc_encoder_includes_config" ]
  configs += [
    ":undefined_behavior_shift",
    ":undefined_behavior_signed_integer_overflow",
  ]
}

static_library("sbc") {
  deps = [
    ":sbc_decoder",
    ":sbc_encoder",
  ]
}
