# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions

include <test/doccomments/c/fidl.h>
test_doccomments_MyFlexibleEnum = test_doccomments_MyFlexibleEnum_FOO, test_doccomments_MyFlexibleEnum_BAR, test_doccomments_MyFlexibleEnum__UNKNOWN
test_doccomments_MyStrictEnum = test_doccomments_MyStrictEnum_FOO, test_doccomments_MyStrictEnum_BAR
test_doccomments_MyFlexibleBits = test_doccomments_MyFlexibleBits_MY_FIRST_BIT, test_doccomments_MyFlexibleBits_MY_OTHER_BIT, test_doccomments_MyFlexibleBits__UNKNOWN
test_doccomments_MyStrictBits = test_doccomments_MyStrictBits_MY_FIRST_BIT, test_doccomments_MyStrictBits_MY_OTHER_BIT
test_doccomments_StructInLine {
    field int32
} [packed]
test_doccomments_StructOutOfLine {
    void void
} [packed]
test_doccomments_StructHandles {
    void void
} [packed]
test_doccomments_FlexibleUnionInLine [
    field fidl_union_member[1, int32]
]
test_doccomments_FlexibleUnionOutOfLine [
    void void
][varlen]
test_doccomments_FlexibleUnionHandles [
    void void
][varlen]
test_doccomments_StrictUnionInLine [
    field fidl_union_member[1, int32]
]
test_doccomments_StrictUnionOutOfLine [
    void void
][varlen]
test_doccomments_StrictUnionHandles [
    void void
][varlen]


test_doccomments_InterfaceMethodRequest {
    hdr fidl_message_header[5017051197196532121]
} [packed]
test_doccomments_InterfaceMethodRequestHandles {
    void void
} [packed]
test_doccomments_InterfaceOnEventEvent {
    hdr fidl_message_header[28780186509098736]
} [packed]
test_doccomments_InterfaceOnEventEventHandles {
    void void
} [packed]

resource zx_chan_test_doccomments_Interface_client[zx_chan]
resource zx_chan_test_doccomments_Interface_server[zx_chan]

zx_channel_create$test_doccomments_Interface(options const[0], out0 ptr[out, zx_chan_test_doccomments_Interface_client], out1 ptr[out, zx_chan_test_doccomments_Interface_server])
fdio_service_connect$test_doccomments_Interface(path ptr[in, string["/svc/"]], handle zx_chan_test_doccomments_Interface_server)
zx_channel_write$test_doccomments_InterfaceMethod(handle zx_chan_test_doccomments_Interface_client, options const[0], bytes ptr[in, test_doccomments_InterfaceMethodRequest], num_bytes bytesize[bytes], handles ptr[in, test_doccomments_InterfaceMethodRequestHandles], num_handles bytesize[handles])
zx_channel_read$test_doccomments_InterfaceOnEvent(handle zx_chan_test_doccomments_Interface_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_doccomments_InterfaceOnEventEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

