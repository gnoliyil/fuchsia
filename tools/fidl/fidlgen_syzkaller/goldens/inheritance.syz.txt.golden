# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions
# fidl_experiment = zx_select_case_sensitivity

include <test/inheritance/c/fidl.h>


test_inheritance_subfooRequest {
    hdr fidl_message_header[7540745593380780216]
    sInLine fidl_string
    sOutOfLine fidl_aligned[stringnoz]
} [packed]
test_inheritance_subfooRequestHandles {
    void void
} [packed]
test_inheritance_subfooResponse {
    hdr fidl_message_header[7540745593380780216]
    y int64
} [packed]
test_inheritance_subfooResponseHandles {
    void void
} [packed]

resource zx_chan_test_inheritance_sub_client[zx_chan]
resource zx_chan_test_inheritance_sub_server[zx_chan]

zx_channel_create$test_inheritance_sub(options const[0], out0 ptr[out, zx_chan_test_inheritance_sub_client], out1 ptr[out, zx_chan_test_inheritance_sub_server])
fdio_service_connect$test_inheritance_sub(path ptr[in, string["/svc/"]], handle zx_chan_test_inheritance_sub_server)
zx_channel_call$test_inheritance_subfoo(handle zx_chan_test_inheritance_sub_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_inheritance_subfooRequest, test_inheritance_subfooRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_inheritance_subfooResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])


test_inheritance_superfooRequest {
    hdr fidl_message_header[7540745593380780216]
    sInLine fidl_string
    sOutOfLine fidl_aligned[stringnoz]
} [packed]
test_inheritance_superfooRequestHandles {
    void void
} [packed]
test_inheritance_superfooResponse {
    hdr fidl_message_header[7540745593380780216]
    y int64
} [packed]
test_inheritance_superfooResponseHandles {
    void void
} [packed]

resource zx_chan_test_inheritance_super_client[zx_chan]
resource zx_chan_test_inheritance_super_server[zx_chan]

zx_channel_create$test_inheritance_super(options const[0], out0 ptr[out, zx_chan_test_inheritance_super_client], out1 ptr[out, zx_chan_test_inheritance_super_server])
fdio_service_connect$test_inheritance_super(path ptr[in, string["/svc/"]], handle zx_chan_test_inheritance_super_server)
zx_channel_call$test_inheritance_superfoo(handle zx_chan_test_inheritance_super_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_inheritance_superfooRequest, test_inheritance_superfooRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_inheritance_superfooResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

