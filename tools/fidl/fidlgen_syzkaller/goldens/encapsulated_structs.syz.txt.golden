# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions
# fidl_experiment = unknown_interactions_mandate

include <test/encapsulatedstructs/c/fidl.h>
test_encapsulatedstructs_ArrayInt16Int8InLine {
    arrInLine array[test_encapsulatedstructs_Int16Int8InLine, 3]
} [packed]
test_encapsulatedstructs_ArrayInt16Int8OutOfLine {
    arrOutOfLine array[test_encapsulatedstructs_Int16Int8OutOfLine, 3]
} [packed]
test_encapsulatedstructs_ArrayInt16Int8Handles {
    arrHandles array[test_encapsulatedstructs_Int16Int8Handles, 3]
} [packed]
test_encapsulatedstructs_Int16Int8InLine {
    a int16
    b int8
} [packed]
test_encapsulatedstructs_Int16Int8OutOfLine {
    void void
} [packed]
test_encapsulatedstructs_Int16Int8Handles {
    void void
} [packed]
test_encapsulatedstructs_Int8Int32InLine {
    a int8
    b int32
} [packed]
test_encapsulatedstructs_Int8Int32OutOfLine {
    void void
} [packed]
test_encapsulatedstructs_Int8Int32Handles {
    void void
} [packed]
test_encapsulatedstructs_NonInlineStructTestStructInLine {
    elementInLine test_encapsulatedstructs_Int16Int8InLine
    h flags[fidl_handle_presence, int32]
} [packed]
test_encapsulatedstructs_NonInlineStructTestStructOutOfLine {
    elementOutOfLine test_encapsulatedstructs_Int16Int8OutOfLine
} [packed]
test_encapsulatedstructs_NonInlineStructTestStructHandles {
    element test_encapsulatedstructs_Int16Int8Handles
    h zx_handle
} [packed]
test_encapsulatedstructs_StructPaddingTestStructInLine {
    trailingInLine test_encapsulatedstructs_Int16Int8InLine
    innerInLine test_encapsulatedstructs_Int8Int32InLine
    arrayInLine test_encapsulatedstructs_ArrayInt16Int8InLine
} [packed]
test_encapsulatedstructs_StructPaddingTestStructOutOfLine {
    trailingOutOfLine test_encapsulatedstructs_Int16Int8OutOfLine
    innerOutOfLine test_encapsulatedstructs_Int8Int32OutOfLine
    arrayOutOfLine test_encapsulatedstructs_ArrayInt16Int8OutOfLine
} [packed]
test_encapsulatedstructs_StructPaddingTestStructHandles {
    trailing test_encapsulatedstructs_Int16Int8Handles
    inner test_encapsulatedstructs_Int8Int32Handles
    array_ test_encapsulatedstructs_ArrayInt16Int8Handles
} [packed]
test_encapsulatedstructs_TopLevelStructInLine {
    aInLine test_encapsulatedstructs_StructPaddingTestStructInLine
    bInLine test_encapsulatedstructs_NonInlineStructTestStructInLine
} [packed]
test_encapsulatedstructs_TopLevelStructOutOfLine {
    aOutOfLine test_encapsulatedstructs_StructPaddingTestStructOutOfLine
    bOutOfLine test_encapsulatedstructs_NonInlineStructTestStructOutOfLine
} [packed]
test_encapsulatedstructs_TopLevelStructHandles {
    a test_encapsulatedstructs_StructPaddingTestStructHandles
    b test_encapsulatedstructs_NonInlineStructTestStructHandles
} [packed]

