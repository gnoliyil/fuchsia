# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions
# fidl_experiment = unknown_interactions_mandate

include <test/transitivedependenciescompose/c/fidl.h>


test_transitivedependenciescompose_TopGetFooRequest {
    hdr fidl_message_header[2618685789258237543]
} [packed]
test_transitivedependenciescompose_TopGetFooRequestHandles {
    void void
} [packed]
test_transitivedependenciescompose_TopGetFooResponse {
    hdr fidl_message_header[2618685789258237543]
    fooInLine test_bottom_FooInLine
    fooOutOfLine test_bottom_FooOutOfLine
} [packed]
test_transitivedependenciescompose_TopGetFooResponseHandles {
    foo test_bottom_FooHandles
} [packed]

resource zx_chan_test_transitivedependenciescompose_Top_client[zx_chan]
resource zx_chan_test_transitivedependenciescompose_Top_server[zx_chan]

zx_channel_create$test_transitivedependenciescompose_Top(options const[0], out0 ptr[out, zx_chan_test_transitivedependenciescompose_Top_client], out1 ptr[out, zx_chan_test_transitivedependenciescompose_Top_server])
fdio_service_connect$test_transitivedependenciescompose_Top(path ptr[in, string["/svc/"]], handle zx_chan_test_transitivedependenciescompose_Top_server)
zx_channel_call$test_transitivedependenciescompose_TopGetFoo(handle zx_chan_test_transitivedependenciescompose_Top_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_transitivedependenciescompose_TopGetFooRequest, test_transitivedependenciescompose_TopGetFooRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_transitivedependenciescompose_TopGetFooResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

