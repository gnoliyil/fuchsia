# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions
# fidl_experiment = unknown_interactions_mandate

include <test/error/c/fidl.h>
test_error_Example_foo_ResponseInLine {
    y int64
} [packed]
test_error_Example_foo_ResponseOutOfLine {
    void void
} [packed]
test_error_Example_foo_ResponseHandles {
    void void
} [packed]
test_error_Example_foo_ResultInLine [
    responseInLine fidl_union_member[1, test_error_Example_foo_ResponseInLine]
    err fidl_union_member[2, int32]
]
test_error_Example_foo_ResultOutOfLine [
    responseOutOfLine test_error_Example_foo_ResponseOutOfLine
][varlen]
test_error_Example_foo_ResultHandles [
    response test_error_Example_foo_ResponseHandles
][varlen]


test_error_ExamplefooRequest {
    hdr fidl_message_header[1107623248440401476]
    sInLine fidl_string
    sOutOfLine fidl_aligned[stringnoz]
} [packed]
test_error_ExamplefooRequestHandles {
    void void
} [packed]
test_error_ExamplefooResponse {
    hdr fidl_message_header[1107623248440401476]
    resultInLine test_error_Example_foo_ResultInLine
    resultOutOfLine test_error_Example_foo_ResultOutOfLine
} [packed]
test_error_ExamplefooResponseHandles {
    result test_error_Example_foo_ResultHandles
} [packed]

resource zx_chan_test_error_Example_client[zx_chan]
resource zx_chan_test_error_Example_server[zx_chan]

zx_channel_create$test_error_Example(options const[0], out0 ptr[out, zx_chan_test_error_Example_client], out1 ptr[out, zx_chan_test_error_Example_server])
fdio_service_connect$test_error_Example(path ptr[in, string["/svc/"]], handle zx_chan_test_error_Example_server)
zx_channel_call$test_error_Examplefoo(handle zx_chan_test_error_Example_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_error_ExamplefooRequest, test_error_ExamplefooRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_error_ExamplefooResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

