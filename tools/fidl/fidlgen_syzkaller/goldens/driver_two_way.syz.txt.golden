# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions
# fidl_experiment = zx_select_case_sensitivity

include <test/drivertwoway/c/fidl.h>


test_drivertwoway_TwoWayAddRequest {
    hdr fidl_message_header[989730524426044687]
    addend1 int16
    addend2 int16
} [packed]
test_drivertwoway_TwoWayAddRequestHandles {
    void void
} [packed]
test_drivertwoway_TwoWayAddResponse {
    hdr fidl_message_header[989730524426044687]
    sum int16
} [packed]
test_drivertwoway_TwoWayAddResponseHandles {
    void void
} [packed]

resource zx_chan_test_drivertwoway_TwoWay_client[zx_chan]
resource zx_chan_test_drivertwoway_TwoWay_server[zx_chan]

zx_channel_create$test_drivertwoway_TwoWay(options const[0], out0 ptr[out, zx_chan_test_drivertwoway_TwoWay_client], out1 ptr[out, zx_chan_test_drivertwoway_TwoWay_server])
fdio_service_connect$test_drivertwoway_TwoWay(path ptr[in, string["/svc/"]], handle zx_chan_test_drivertwoway_TwoWay_server)
zx_channel_call$test_drivertwoway_TwoWayAdd(handle zx_chan_test_drivertwoway_TwoWay_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_drivertwoway_TwoWayAddRequest, test_drivertwoway_TwoWayAddRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_drivertwoway_TwoWayAddResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

