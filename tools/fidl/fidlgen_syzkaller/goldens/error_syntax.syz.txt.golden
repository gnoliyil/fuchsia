# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions

include <test/errorsyntax/c/fidl.h>
test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResponseInLine {
    value int64
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResponseOutOfLine {
    void void
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResponseHandles {
    void void
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResultInLine [
    responseInLine fidl_union_member[1, test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResponseInLine]
    err fidl_union_member[2, int32]
]
test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResultOutOfLine [
    responseOutOfLine test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResponseOutOfLine
][varlen]
test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResultHandles [
    response test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResponseHandles
][varlen]


test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFailRequest {
    hdr fidl_message_header[3565108794310607393]
    sInLine fidl_string
    sOutOfLine fidl_aligned[stringnoz]
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFailRequestHandles {
    void void
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFailResponse {
    hdr fidl_message_header[3565108794310607393]
    resultInLine test_errorsyntax_parent_ParentUsesErrorSyntax_ComposedCallWhichMayFail_ResultInLine
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFailResponseHandles {
    void void
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFailRequest {
    hdr fidl_message_header[3757408930698888354]
    sInLine fidl_string
    sOutOfLine fidl_aligned[stringnoz]
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFailRequestHandles {
    void void
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFailResponse {
    hdr fidl_message_header[3757408930698888354]
    resultInLine test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResultInLine
    resultOutOfLine test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResultOutOfLine
} [packed]
test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFailResponseHandles {
    result test_errorsyntax_ExampleUseOfErrorSyntax_CallWhichMayFail_ResultHandles
} [packed]

resource zx_chan_test_errorsyntax_ExampleUseOfErrorSyntax_client[zx_chan]
resource zx_chan_test_errorsyntax_ExampleUseOfErrorSyntax_server[zx_chan]

zx_channel_create$test_errorsyntax_ExampleUseOfErrorSyntax(options const[0], out0 ptr[out, zx_chan_test_errorsyntax_ExampleUseOfErrorSyntax_client], out1 ptr[out, zx_chan_test_errorsyntax_ExampleUseOfErrorSyntax_server])
fdio_service_connect$test_errorsyntax_ExampleUseOfErrorSyntax(path ptr[in, string["/svc/"]], handle zx_chan_test_errorsyntax_ExampleUseOfErrorSyntax_server)
zx_channel_call$test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFail(handle zx_chan_test_errorsyntax_ExampleUseOfErrorSyntax_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFailRequest, test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFailRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_errorsyntax_ExampleUseOfErrorSyntaxComposedCallWhichMayFailResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFail(handle zx_chan_test_errorsyntax_ExampleUseOfErrorSyntax_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFailRequest, test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFailRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_errorsyntax_ExampleUseOfErrorSyntaxCallWhichMayFailResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

