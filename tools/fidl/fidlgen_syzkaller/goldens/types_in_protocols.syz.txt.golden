# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions

include <test/typesinprotocols/c/fidl.h>
test_typesinprotocols_Enum = test_typesinprotocols_Enum_VAL, test_typesinprotocols_Enum__UNKNOWN
test_typesinprotocols_Bits = test_typesinprotocols_Bits_VAL, test_typesinprotocols_Bits__UNKNOWN
test_typesinprotocols_ArrayBasicInLine {
    array_uint8InLine array[int8, 5]
    array_uint16InLine array[int16, 5]
    array_uint32InLine array[int32, 5]
    array_uint64InLine array[int64, 5]
    array_int8InLine array[int8, 5]
    array_int16InLine array[int16, 5]
    array_int32InLine array[int32, 5]
    array_int64InLine array[int64, 5]
    array_float32InLine array[int32, 5]
    array_float64InLine array[int64, 5]
    array_stringInLine array[fidl_string, 5]
    array_opt_stringInLine array[fidl_string, 5]
} [packed]
test_typesinprotocols_ArrayBasicOutOfLine {
    array_stringOutOfLine array[fidl_aligned[stringnoz], 5]
    array_opt_stringOutOfLine array[fidl_aligned[stringnoz], 5]
} [packed]
test_typesinprotocols_ArrayBasicHandles {
    void void
} [packed]
test_typesinprotocols_ArrayCompoundInLine {
    array_bitsInLine array[flags[test_typesinprotocols_Bits, int32], 5]
    array_enumInLine array[flags[test_typesinprotocols_Enum, int32], 5]
    array_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_opt_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_opt_unionInLine array[test_typesinprotocols_UnionInLine, 5]
} [packed]
test_typesinprotocols_ArrayCompoundOutOfLine {
    array_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
    array_opt_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
} [packed]
test_typesinprotocols_ArrayCompoundHandles {
    array_structHandles array[test_typesinprotocols_StructHandles, 5]
    array_opt_structHandles array[test_typesinprotocols_StructHandles, 5]
} [packed]
test_typesinprotocols_ArrayVectorNestedInLine {
    array_array_uint8InLine array[array[int8, 5], 5]
    array_vector_uint8InLine array[fidl_vector, 5]
    vector_array_uint8InLine fidl_vector
    vector_vector_uint8InLine fidl_vector
} [packed]
test_typesinprotocols_ArrayVectorNestedOutOfLine {
    array_vector_uint8OutOfLine array[array[int8], 5]
    vector_array_uint8OutOfLine array[array[int8, 5]]
    vector_vector_uint8OutOfLine parallel_array[fidl_vector, array[int8]]
} [packed]
test_typesinprotocols_ArrayVectorNestedHandles {
    void void
} [packed]
test_typesinprotocols_BasicInLine {
    uint8 int8
    uint16 int16
    uint32 int32
    uint64 int64
    int8_ int8
    int16_ int16
    int32_ int32
    int64_ int64
    float32 int32
    float64 int64
    stringInLine fidl_string
    opt_stringInLine fidl_string
} [packed]
test_typesinprotocols_BasicOutOfLine {
    stringOutOfLine fidl_aligned[stringnoz]
    opt_stringOutOfLine fidl_aligned[stringnoz]
} [packed]
test_typesinprotocols_BasicHandles {
    void void
} [packed]
test_typesinprotocols_CompoundInLine {
    bits flags[test_typesinprotocols_Bits, int32]
    enum flags[test_typesinprotocols_Enum, int32]
    structInLine test_typesinprotocols_StructInLine
     
    unionInLine test_typesinprotocols_UnionInLine
    opt_structInLine test_typesinprotocols_StructInLine
    opt_unionInLine test_typesinprotocols_UnionInLine
} [packed]
test_typesinprotocols_CompoundOutOfLine {
    structOutOfLine test_typesinprotocols_StructOutOfLine
    opt_structOutOfLine test_typesinprotocols_StructOutOfLine
} [packed]
test_typesinprotocols_CompoundHandles {
    struct test_typesinprotocols_StructHandles
    opt_struct test_typesinprotocols_StructHandles
} [packed]
test_typesinprotocols_ResourceInLine {
    handle flags[fidl_handle_presence, int32]
    vmo flags[fidl_handle_presence, int32]
    client_end flags[fidl_handle_presence, int32]
    server_end flags[fidl_handle_presence, int32]
    structInLine test_typesinprotocols_ResourceStructInLine
     
    unionInLine test_typesinprotocols_ResourceUnionInLine
    opt_handle flags[fidl_handle_presence, int32]
    opt_vmo flags[fidl_handle_presence, int32]
    opt_client_end flags[fidl_handle_presence, int32]
    opt_server_end flags[fidl_handle_presence, int32]
    opt_structInLine test_typesinprotocols_ResourceStructInLine
    opt_unionInLine test_typesinprotocols_ResourceUnionInLine
    array_handleInLine array[flags[fidl_handle_presence, int32], 5]
    array_vmoInLine array[flags[fidl_handle_presence, int32], 5]
    array_client_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_server_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_structInLine array[test_typesinprotocols_ResourceStructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_ResourceUnionInLine, 5]
    vector_handleInLine fidl_vector
    vector_vmoInLine fidl_vector
    vector_client_endInLine fidl_vector
    vector_server_endInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
} [packed]
test_typesinprotocols_ResourceOutOfLine {
    structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    opt_structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    array_structOutOfLine array[test_typesinprotocols_ResourceStructOutOfLine, 5]
    vector_handleOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_vmoOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_client_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_server_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_ResourceStructInLine, test_typesinprotocols_ResourceStructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_ResourceUnionInLine]
} [packed]
test_typesinprotocols_ResourceHandles {
    handle zx_handle
    vmo zx_vmo
    client_end zx_chan_test_typesinprotocols_Protocol_client
    server_end zx_chan_test_typesinprotocols_Protocol_server
    struct test_typesinprotocols_ResourceStructHandles
    opt_handle zx_handle
    opt_vmo zx_vmo
    opt_client_end zx_chan_test_typesinprotocols_Protocol_client
    opt_server_end zx_chan_test_typesinprotocols_Protocol_server
    opt_struct test_typesinprotocols_ResourceStructHandles
    array_handleHandles array[zx_handle, 5]
    array_vmoHandles array[zx_vmo, 5]
    array_client_endHandles array[zx_chan_test_typesinprotocols_Protocol_client, 5]
    array_server_endHandles array[zx_chan_test_typesinprotocols_Protocol_server, 5]
    array_structHandles array[test_typesinprotocols_ResourceStructHandles, 5]
    vector_handle array[zx_handle]
    vector_vmo array[zx_vmo]
    vector_client_end array[zx_chan_test_typesinprotocols_Protocol_client]
    vector_server_end array[zx_chan_test_typesinprotocols_Protocol_server]
    vector_struct array[test_typesinprotocols_ResourceStructHandles]
} [packed]
test_typesinprotocols_ResourceStructInLine {
    padding int8
} [packed]
test_typesinprotocols_ResourceStructOutOfLine {
    void void
} [packed]
test_typesinprotocols_ResourceStructHandles {
    void void
} [packed]
test_typesinprotocols_StructInLine {
    padding int8
} [packed]
test_typesinprotocols_StructOutOfLine {
    void void
} [packed]
test_typesinprotocols_StructHandles {
    void void
} [packed]
test_typesinprotocols_VectorBasicInLine {
    vector_uint8InLine fidl_vector
    vector_uint16InLine fidl_vector
    vector_uint32InLine fidl_vector
    vector_uint64InLine fidl_vector
    vector_int8InLine fidl_vector
    vector_int16InLine fidl_vector
    vector_int32InLine fidl_vector
    vector_int64InLine fidl_vector
    vector_float32InLine fidl_vector
    vector_float64InLine fidl_vector
    vector_stringInLine fidl_vector
    vector_opt_stringInLine fidl_vector
} [packed]
test_typesinprotocols_VectorBasicOutOfLine {
    vector_uint8OutOfLine array[int8]
    vector_uint16OutOfLine array[int16]
    vector_uint32OutOfLine array[int32]
    vector_uint64OutOfLine array[int64]
    vector_int8OutOfLine array[int8]
    vector_int16OutOfLine array[int16]
    vector_int32OutOfLine array[int32]
    vector_int64OutOfLine array[int64]
    vector_float32OutOfLine array[int32]
    vector_float64OutOfLine array[int64]
    vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    vector_opt_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
} [packed]
test_typesinprotocols_VectorBasicHandles {
    void void
} [packed]
test_typesinprotocols_VectorCompoundInLine {
    vector_bitsInLine fidl_vector
    vector_enumInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    vector_opt_structInLine fidl_vector
    vector_opt_unionInLine fidl_vector
} [packed]
test_typesinprotocols_VectorCompoundOutOfLine {
    vector_bitsOutOfLine array[flags[test_typesinprotocols_Bits, int32]]
    vector_enumOutOfLine array[flags[test_typesinprotocols_Enum, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_UnionInLine]
    vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_opt_unionOutOfLine array[test_typesinprotocols_UnionInLine]
} [packed]
test_typesinprotocols_VectorCompoundHandles {
    vector_struct array[test_typesinprotocols_StructHandles]
    vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_VectorOptionalInLine {
    opt_vector_uint8InLine fidl_vector
    opt_vector_stringInLine fidl_vector
    opt_vector_structInLine fidl_vector
    opt_vector_opt_structInLine fidl_vector
} [packed]
test_typesinprotocols_VectorOptionalOutOfLine {
    opt_vector_uint8OutOfLine array[int8]
    opt_vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    opt_vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    opt_vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
} [packed]
test_typesinprotocols_VectorOptionalHandles {
    opt_vector_struct array[test_typesinprotocols_StructHandles]
    opt_vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ResourceUnionInLine [
    b fidl_union_member[1, int8]
]
test_typesinprotocols_ResourceUnionOutOfLine [
    void void
][varlen]
test_typesinprotocols_ResourceUnionHandles [
    void void
][varlen]
test_typesinprotocols_UnionInLine [
    b fidl_union_member[1, int8]
]
test_typesinprotocols_UnionOutOfLine [
    void void
][varlen]
test_typesinprotocols_UnionHandles [
    void void
][varlen]


test_typesinprotocols_ProtocolOneWayBasicRequest {
    hdr fidl_message_header[8948968077914418681]
    uint8 int8
    uint16 int16
    uint32 int32
    uint64 int64
    int8_ int8
    int16_ int16
    int32_ int32
    int64_ int64
    float32 int32
    float64 int64
    stringInLine fidl_string
    opt_stringInLine fidl_string
    stringOutOfLine fidl_aligned[stringnoz]
    opt_stringOutOfLine fidl_aligned[stringnoz]
} [packed]
test_typesinprotocols_ProtocolOneWayBasicRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayBasicRequest {
    hdr fidl_message_header[2331618702752598159]
    uint8 int8
    uint16 int16
    uint32 int32
    uint64 int64
    int8_ int8
    int16_ int16
    int32_ int32
    int64_ int64
    float32 int32
    float64 int64
    stringInLine fidl_string
    opt_stringInLine fidl_string
    stringOutOfLine fidl_aligned[stringnoz]
    opt_stringOutOfLine fidl_aligned[stringnoz]
} [packed]
test_typesinprotocols_ProtocolTwoWayBasicRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayBasicResponse {
    hdr fidl_message_header[2331618702752598159]
    uint8 int8
    uint16 int16
    uint32 int32
    uint64 int64
    int8_ int8
    int16_ int16
    int32_ int32
    int64_ int64
    float32 int32
    float64 int64
    stringInLine fidl_string
    opt_stringInLine fidl_string
    stringOutOfLine fidl_aligned[stringnoz]
    opt_stringOutOfLine fidl_aligned[stringnoz]
} [packed]
test_typesinprotocols_ProtocolTwoWayBasicResponseHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolEventBasicEvent {
    hdr fidl_message_header[5892309624949902400]
    uint8 int8
    uint16 int16
    uint32 int32
    uint64 int64
    int8_ int8
    int16_ int16
    int32_ int32
    int64_ int64
    float32 int32
    float64 int64
    stringInLine fidl_string
    opt_stringInLine fidl_string
    stringOutOfLine fidl_aligned[stringnoz]
    opt_stringOutOfLine fidl_aligned[stringnoz]
} [packed]
test_typesinprotocols_ProtocolEventBasicEventHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolOneWayCompoundRequest {
    hdr fidl_message_header[3153289648860022476]
    bits flags[test_typesinprotocols_Bits, int32]
    enum flags[test_typesinprotocols_Enum, int32]
    structInLine test_typesinprotocols_StructInLine
     
    unionInLine test_typesinprotocols_UnionInLine
    opt_structInLine test_typesinprotocols_StructInLine
    opt_unionInLine test_typesinprotocols_UnionInLine
    structOutOfLine test_typesinprotocols_StructOutOfLine
    opt_structOutOfLine test_typesinprotocols_StructOutOfLine
} [packed]
test_typesinprotocols_ProtocolOneWayCompoundRequestHandles {
    struct test_typesinprotocols_StructHandles
    opt_struct test_typesinprotocols_StructHandles
} [packed]
test_typesinprotocols_ProtocolTwoWayCompoundRequest {
    hdr fidl_message_header[8787219719097524529]
    bits flags[test_typesinprotocols_Bits, int32]
    enum flags[test_typesinprotocols_Enum, int32]
    structInLine test_typesinprotocols_StructInLine
     
    unionInLine test_typesinprotocols_UnionInLine
    opt_structInLine test_typesinprotocols_StructInLine
    opt_unionInLine test_typesinprotocols_UnionInLine
    structOutOfLine test_typesinprotocols_StructOutOfLine
    opt_structOutOfLine test_typesinprotocols_StructOutOfLine
} [packed]
test_typesinprotocols_ProtocolTwoWayCompoundRequestHandles {
    struct test_typesinprotocols_StructHandles
    opt_struct test_typesinprotocols_StructHandles
} [packed]
test_typesinprotocols_ProtocolTwoWayCompoundResponse {
    hdr fidl_message_header[8787219719097524529]
    bits flags[test_typesinprotocols_Bits, int32]
    enum flags[test_typesinprotocols_Enum, int32]
    structInLine test_typesinprotocols_StructInLine
     
    unionInLine test_typesinprotocols_UnionInLine
    opt_structInLine test_typesinprotocols_StructInLine
    opt_unionInLine test_typesinprotocols_UnionInLine
    structOutOfLine test_typesinprotocols_StructOutOfLine
    opt_structOutOfLine test_typesinprotocols_StructOutOfLine
} [packed]
test_typesinprotocols_ProtocolTwoWayCompoundResponseHandles {
    struct test_typesinprotocols_StructHandles
    opt_struct test_typesinprotocols_StructHandles
} [packed]
test_typesinprotocols_ProtocolEventCompoundEvent {
    hdr fidl_message_header[7024581948727571669]
    bits flags[test_typesinprotocols_Bits, int32]
    enum flags[test_typesinprotocols_Enum, int32]
    structInLine test_typesinprotocols_StructInLine
     
    unionInLine test_typesinprotocols_UnionInLine
    opt_structInLine test_typesinprotocols_StructInLine
    opt_unionInLine test_typesinprotocols_UnionInLine
    structOutOfLine test_typesinprotocols_StructOutOfLine
    opt_structOutOfLine test_typesinprotocols_StructOutOfLine
} [packed]
test_typesinprotocols_ProtocolEventCompoundEventHandles {
    struct test_typesinprotocols_StructHandles
    opt_struct test_typesinprotocols_StructHandles
} [packed]
test_typesinprotocols_ProtocolOneWayArrayBasicRequest {
    hdr fidl_message_header[7125516817014311449]
    array_uint8InLine array[int8, 5]
    array_uint16InLine array[int16, 5]
    array_uint32InLine array[int32, 5]
    array_uint64InLine array[int64, 5]
    array_int8InLine array[int8, 5]
    array_int16InLine array[int16, 5]
    array_int32InLine array[int32, 5]
    array_int64InLine array[int64, 5]
    array_float32InLine array[int32, 5]
    array_float64InLine array[int64, 5]
    array_stringInLine array[fidl_string, 5]
    array_opt_stringInLine array[fidl_string, 5]
    array_stringOutOfLine array[fidl_aligned[stringnoz], 5]
    array_opt_stringOutOfLine array[fidl_aligned[stringnoz], 5]
} [packed]
test_typesinprotocols_ProtocolOneWayArrayBasicRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayBasicRequest {
    hdr fidl_message_header[5309034178175279380]
    array_uint8InLine array[int8, 5]
    array_uint16InLine array[int16, 5]
    array_uint32InLine array[int32, 5]
    array_uint64InLine array[int64, 5]
    array_int8InLine array[int8, 5]
    array_int16InLine array[int16, 5]
    array_int32InLine array[int32, 5]
    array_int64InLine array[int64, 5]
    array_float32InLine array[int32, 5]
    array_float64InLine array[int64, 5]
    array_stringInLine array[fidl_string, 5]
    array_opt_stringInLine array[fidl_string, 5]
    array_stringOutOfLine array[fidl_aligned[stringnoz], 5]
    array_opt_stringOutOfLine array[fidl_aligned[stringnoz], 5]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayBasicRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayBasicResponse {
    hdr fidl_message_header[5309034178175279380]
    array_uint8InLine array[int8, 5]
    array_uint16InLine array[int16, 5]
    array_uint32InLine array[int32, 5]
    array_uint64InLine array[int64, 5]
    array_int8InLine array[int8, 5]
    array_int16InLine array[int16, 5]
    array_int32InLine array[int32, 5]
    array_int64InLine array[int64, 5]
    array_float32InLine array[int32, 5]
    array_float64InLine array[int64, 5]
    array_stringInLine array[fidl_string, 5]
    array_opt_stringInLine array[fidl_string, 5]
    array_stringOutOfLine array[fidl_aligned[stringnoz], 5]
    array_opt_stringOutOfLine array[fidl_aligned[stringnoz], 5]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayBasicResponseHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolEventArrayBasicEvent {
    hdr fidl_message_header[5888282827283820590]
    array_uint8InLine array[int8, 5]
    array_uint16InLine array[int16, 5]
    array_uint32InLine array[int32, 5]
    array_uint64InLine array[int64, 5]
    array_int8InLine array[int8, 5]
    array_int16InLine array[int16, 5]
    array_int32InLine array[int32, 5]
    array_int64InLine array[int64, 5]
    array_float32InLine array[int32, 5]
    array_float64InLine array[int64, 5]
    array_stringInLine array[fidl_string, 5]
    array_opt_stringInLine array[fidl_string, 5]
    array_stringOutOfLine array[fidl_aligned[stringnoz], 5]
    array_opt_stringOutOfLine array[fidl_aligned[stringnoz], 5]
} [packed]
test_typesinprotocols_ProtocolEventArrayBasicEventHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolOneWayArrayCompoundRequest {
    hdr fidl_message_header[5064659223443251357]
    array_bitsInLine array[flags[test_typesinprotocols_Bits, int32], 5]
    array_enumInLine array[flags[test_typesinprotocols_Enum, int32], 5]
    array_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_opt_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_opt_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
    array_opt_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
} [packed]
test_typesinprotocols_ProtocolOneWayArrayCompoundRequestHandles {
    array_structHandles array[test_typesinprotocols_StructHandles, 5]
    array_opt_structHandles array[test_typesinprotocols_StructHandles, 5]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayCompoundRequest {
    hdr fidl_message_header[849744466051983995]
    array_bitsInLine array[flags[test_typesinprotocols_Bits, int32], 5]
    array_enumInLine array[flags[test_typesinprotocols_Enum, int32], 5]
    array_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_opt_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_opt_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
    array_opt_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayCompoundRequestHandles {
    array_structHandles array[test_typesinprotocols_StructHandles, 5]
    array_opt_structHandles array[test_typesinprotocols_StructHandles, 5]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayCompoundResponse {
    hdr fidl_message_header[849744466051983995]
    array_bitsInLine array[flags[test_typesinprotocols_Bits, int32], 5]
    array_enumInLine array[flags[test_typesinprotocols_Enum, int32], 5]
    array_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_opt_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_opt_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
    array_opt_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayCompoundResponseHandles {
    array_structHandles array[test_typesinprotocols_StructHandles, 5]
    array_opt_structHandles array[test_typesinprotocols_StructHandles, 5]
} [packed]
test_typesinprotocols_ProtocolEventArrayCompoundEvent {
    hdr fidl_message_header[2189769767733851157]
    array_bitsInLine array[flags[test_typesinprotocols_Bits, int32], 5]
    array_enumInLine array[flags[test_typesinprotocols_Enum, int32], 5]
    array_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_opt_structInLine array[test_typesinprotocols_StructInLine, 5]
    array_opt_unionInLine array[test_typesinprotocols_UnionInLine, 5]
    array_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
    array_opt_structOutOfLine array[test_typesinprotocols_StructOutOfLine, 5]
} [packed]
test_typesinprotocols_ProtocolEventArrayCompoundEventHandles {
    array_structHandles array[test_typesinprotocols_StructHandles, 5]
    array_opt_structHandles array[test_typesinprotocols_StructHandles, 5]
} [packed]
test_typesinprotocols_ProtocolOneWayVectorBasicRequest {
    hdr fidl_message_header[5733220720079947351]
    vector_uint8InLine fidl_vector
    vector_uint16InLine fidl_vector
    vector_uint32InLine fidl_vector
    vector_uint64InLine fidl_vector
    vector_int8InLine fidl_vector
    vector_int16InLine fidl_vector
    vector_int32InLine fidl_vector
    vector_int64InLine fidl_vector
    vector_float32InLine fidl_vector
    vector_float64InLine fidl_vector
    vector_stringInLine fidl_vector
    vector_opt_stringInLine fidl_vector
    vector_uint8OutOfLine array[int8]
    vector_uint16OutOfLine array[int16]
    vector_uint32OutOfLine array[int32]
    vector_uint64OutOfLine array[int64]
    vector_int8OutOfLine array[int8]
    vector_int16OutOfLine array[int16]
    vector_int32OutOfLine array[int32]
    vector_int64OutOfLine array[int64]
    vector_float32OutOfLine array[int32]
    vector_float64OutOfLine array[int64]
    vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    vector_opt_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
} [packed]
test_typesinprotocols_ProtocolOneWayVectorBasicRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorBasicRequest {
    hdr fidl_message_header[8674156353091415668]
    vector_uint8InLine fidl_vector
    vector_uint16InLine fidl_vector
    vector_uint32InLine fidl_vector
    vector_uint64InLine fidl_vector
    vector_int8InLine fidl_vector
    vector_int16InLine fidl_vector
    vector_int32InLine fidl_vector
    vector_int64InLine fidl_vector
    vector_float32InLine fidl_vector
    vector_float64InLine fidl_vector
    vector_stringInLine fidl_vector
    vector_opt_stringInLine fidl_vector
    vector_uint8OutOfLine array[int8]
    vector_uint16OutOfLine array[int16]
    vector_uint32OutOfLine array[int32]
    vector_uint64OutOfLine array[int64]
    vector_int8OutOfLine array[int8]
    vector_int16OutOfLine array[int16]
    vector_int32OutOfLine array[int32]
    vector_int64OutOfLine array[int64]
    vector_float32OutOfLine array[int32]
    vector_float64OutOfLine array[int64]
    vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    vector_opt_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorBasicRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorBasicResponse {
    hdr fidl_message_header[8674156353091415668]
    vector_uint8InLine fidl_vector
    vector_uint16InLine fidl_vector
    vector_uint32InLine fidl_vector
    vector_uint64InLine fidl_vector
    vector_int8InLine fidl_vector
    vector_int16InLine fidl_vector
    vector_int32InLine fidl_vector
    vector_int64InLine fidl_vector
    vector_float32InLine fidl_vector
    vector_float64InLine fidl_vector
    vector_stringInLine fidl_vector
    vector_opt_stringInLine fidl_vector
    vector_uint8OutOfLine array[int8]
    vector_uint16OutOfLine array[int16]
    vector_uint32OutOfLine array[int32]
    vector_uint64OutOfLine array[int64]
    vector_int8OutOfLine array[int8]
    vector_int16OutOfLine array[int16]
    vector_int32OutOfLine array[int32]
    vector_int64OutOfLine array[int64]
    vector_float32OutOfLine array[int32]
    vector_float64OutOfLine array[int64]
    vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    vector_opt_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorBasicResponseHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolEventVectorBasicEvent {
    hdr fidl_message_header[4583890770109526006]
    vector_uint8InLine fidl_vector
    vector_uint16InLine fidl_vector
    vector_uint32InLine fidl_vector
    vector_uint64InLine fidl_vector
    vector_int8InLine fidl_vector
    vector_int16InLine fidl_vector
    vector_int32InLine fidl_vector
    vector_int64InLine fidl_vector
    vector_float32InLine fidl_vector
    vector_float64InLine fidl_vector
    vector_stringInLine fidl_vector
    vector_opt_stringInLine fidl_vector
    vector_uint8OutOfLine array[int8]
    vector_uint16OutOfLine array[int16]
    vector_uint32OutOfLine array[int32]
    vector_uint64OutOfLine array[int64]
    vector_int8OutOfLine array[int8]
    vector_int16OutOfLine array[int16]
    vector_int32OutOfLine array[int32]
    vector_int64OutOfLine array[int64]
    vector_float32OutOfLine array[int32]
    vector_float64OutOfLine array[int64]
    vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    vector_opt_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
} [packed]
test_typesinprotocols_ProtocolEventVectorBasicEventHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolOneWayVectorCompoundRequest {
    hdr fidl_message_header[1853985797298830992]
    vector_bitsInLine fidl_vector
    vector_enumInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    vector_opt_structInLine fidl_vector
    vector_opt_unionInLine fidl_vector
    vector_bitsOutOfLine array[flags[test_typesinprotocols_Bits, int32]]
    vector_enumOutOfLine array[flags[test_typesinprotocols_Enum, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_UnionInLine]
    vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_opt_unionOutOfLine array[test_typesinprotocols_UnionInLine]
} [packed]
test_typesinprotocols_ProtocolOneWayVectorCompoundRequestHandles {
    vector_struct array[test_typesinprotocols_StructHandles]
    vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorCompoundRequest {
    hdr fidl_message_header[3968024057912959924]
    vector_bitsInLine fidl_vector
    vector_enumInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    vector_opt_structInLine fidl_vector
    vector_opt_unionInLine fidl_vector
    vector_bitsOutOfLine array[flags[test_typesinprotocols_Bits, int32]]
    vector_enumOutOfLine array[flags[test_typesinprotocols_Enum, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_UnionInLine]
    vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_opt_unionOutOfLine array[test_typesinprotocols_UnionInLine]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorCompoundRequestHandles {
    vector_struct array[test_typesinprotocols_StructHandles]
    vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorCompoundResponse {
    hdr fidl_message_header[3968024057912959924]
    vector_bitsInLine fidl_vector
    vector_enumInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    vector_opt_structInLine fidl_vector
    vector_opt_unionInLine fidl_vector
    vector_bitsOutOfLine array[flags[test_typesinprotocols_Bits, int32]]
    vector_enumOutOfLine array[flags[test_typesinprotocols_Enum, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_UnionInLine]
    vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_opt_unionOutOfLine array[test_typesinprotocols_UnionInLine]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorCompoundResponseHandles {
    vector_struct array[test_typesinprotocols_StructHandles]
    vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolEventVectorCompoundEvent {
    hdr fidl_message_header[6026375226599919603]
    vector_bitsInLine fidl_vector
    vector_enumInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    vector_opt_structInLine fidl_vector
    vector_opt_unionInLine fidl_vector
    vector_bitsOutOfLine array[flags[test_typesinprotocols_Bits, int32]]
    vector_enumOutOfLine array[flags[test_typesinprotocols_Enum, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_UnionInLine]
    vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    vector_opt_unionOutOfLine array[test_typesinprotocols_UnionInLine]
} [packed]
test_typesinprotocols_ProtocolEventVectorCompoundEventHandles {
    vector_struct array[test_typesinprotocols_StructHandles]
    vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolOneWayVectorOptionalRequest {
    hdr fidl_message_header[1530215841195476271]
    opt_vector_uint8InLine fidl_vector
    opt_vector_stringInLine fidl_vector
    opt_vector_structInLine fidl_vector
    opt_vector_opt_structInLine fidl_vector
    opt_vector_uint8OutOfLine array[int8]
    opt_vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    opt_vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    opt_vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
} [packed]
test_typesinprotocols_ProtocolOneWayVectorOptionalRequestHandles {
    opt_vector_struct array[test_typesinprotocols_StructHandles]
    opt_vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorOptionalRequest {
    hdr fidl_message_header[1030024737742222323]
    opt_vector_uint8InLine fidl_vector
    opt_vector_stringInLine fidl_vector
    opt_vector_structInLine fidl_vector
    opt_vector_opt_structInLine fidl_vector
    opt_vector_uint8OutOfLine array[int8]
    opt_vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    opt_vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    opt_vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorOptionalRequestHandles {
    opt_vector_struct array[test_typesinprotocols_StructHandles]
    opt_vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorOptionalResponse {
    hdr fidl_message_header[1030024737742222323]
    opt_vector_uint8InLine fidl_vector
    opt_vector_stringInLine fidl_vector
    opt_vector_structInLine fidl_vector
    opt_vector_opt_structInLine fidl_vector
    opt_vector_uint8OutOfLine array[int8]
    opt_vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    opt_vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    opt_vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
} [packed]
test_typesinprotocols_ProtocolTwoWayVectorOptionalResponseHandles {
    opt_vector_struct array[test_typesinprotocols_StructHandles]
    opt_vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolEventVectorOptionalEvent {
    hdr fidl_message_header[1684763340073130077]
    opt_vector_uint8InLine fidl_vector
    opt_vector_stringInLine fidl_vector
    opt_vector_structInLine fidl_vector
    opt_vector_opt_structInLine fidl_vector
    opt_vector_uint8OutOfLine array[int8]
    opt_vector_stringOutOfLine parallel_array[fidl_string, fidl_aligned[stringnoz]]
    opt_vector_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
    opt_vector_opt_structOutOfLine parallel_array[test_typesinprotocols_StructInLine, test_typesinprotocols_StructOutOfLine]
} [packed]
test_typesinprotocols_ProtocolEventVectorOptionalEventHandles {
    opt_vector_struct array[test_typesinprotocols_StructHandles]
    opt_vector_opt_struct array[test_typesinprotocols_StructHandles]
} [packed]
test_typesinprotocols_ProtocolOneWayArrayVectorNestedRequest {
    hdr fidl_message_header[5912603762133524183]
    array_array_uint8InLine array[array[int8, 5], 5]
    array_vector_uint8InLine array[fidl_vector, 5]
    vector_array_uint8InLine fidl_vector
    vector_vector_uint8InLine fidl_vector
    array_vector_uint8OutOfLine array[array[int8], 5]
    vector_array_uint8OutOfLine array[array[int8, 5]]
    vector_vector_uint8OutOfLine parallel_array[fidl_vector, array[int8]]
} [packed]
test_typesinprotocols_ProtocolOneWayArrayVectorNestedRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayVectorNestedRequest {
    hdr fidl_message_header[5351275678438791132]
    array_array_uint8InLine array[array[int8, 5], 5]
    array_vector_uint8InLine array[fidl_vector, 5]
    vector_array_uint8InLine fidl_vector
    vector_vector_uint8InLine fidl_vector
    array_vector_uint8OutOfLine array[array[int8], 5]
    vector_array_uint8OutOfLine array[array[int8, 5]]
    vector_vector_uint8OutOfLine parallel_array[fidl_vector, array[int8]]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayVectorNestedRequestHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayVectorNestedResponse {
    hdr fidl_message_header[5351275678438791132]
    array_array_uint8InLine array[array[int8, 5], 5]
    array_vector_uint8InLine array[fidl_vector, 5]
    vector_array_uint8InLine fidl_vector
    vector_vector_uint8InLine fidl_vector
    array_vector_uint8OutOfLine array[array[int8], 5]
    vector_array_uint8OutOfLine array[array[int8, 5]]
    vector_vector_uint8OutOfLine parallel_array[fidl_vector, array[int8]]
} [packed]
test_typesinprotocols_ProtocolTwoWayArrayVectorNestedResponseHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolEventArrayVectorNestedEvent {
    hdr fidl_message_header[1228201560727880574]
    array_array_uint8InLine array[array[int8, 5], 5]
    array_vector_uint8InLine array[fidl_vector, 5]
    vector_array_uint8InLine fidl_vector
    vector_vector_uint8InLine fidl_vector
    array_vector_uint8OutOfLine array[array[int8], 5]
    vector_array_uint8OutOfLine array[array[int8, 5]]
    vector_vector_uint8OutOfLine parallel_array[fidl_vector, array[int8]]
} [packed]
test_typesinprotocols_ProtocolEventArrayVectorNestedEventHandles {
    void void
} [packed]
test_typesinprotocols_ProtocolOneWayResourceRequest {
    hdr fidl_message_header[6553996787849601058]
    handle flags[fidl_handle_presence, int32]
    vmo flags[fidl_handle_presence, int32]
    client_end flags[fidl_handle_presence, int32]
    server_end flags[fidl_handle_presence, int32]
    structInLine test_typesinprotocols_ResourceStructInLine
     
    unionInLine test_typesinprotocols_ResourceUnionInLine
    opt_handle flags[fidl_handle_presence, int32]
    opt_vmo flags[fidl_handle_presence, int32]
    opt_client_end flags[fidl_handle_presence, int32]
    opt_server_end flags[fidl_handle_presence, int32]
    opt_structInLine test_typesinprotocols_ResourceStructInLine
    opt_unionInLine test_typesinprotocols_ResourceUnionInLine
    array_handleInLine array[flags[fidl_handle_presence, int32], 5]
    array_vmoInLine array[flags[fidl_handle_presence, int32], 5]
    array_client_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_server_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_structInLine array[test_typesinprotocols_ResourceStructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_ResourceUnionInLine, 5]
    vector_handleInLine fidl_vector
    vector_vmoInLine fidl_vector
    vector_client_endInLine fidl_vector
    vector_server_endInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    opt_structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    array_structOutOfLine array[test_typesinprotocols_ResourceStructOutOfLine, 5]
    vector_handleOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_vmoOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_client_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_server_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_ResourceStructInLine, test_typesinprotocols_ResourceStructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_ResourceUnionInLine]
} [packed]
test_typesinprotocols_ProtocolOneWayResourceRequestHandles {
    handle zx_handle
    vmo zx_vmo
    client_end zx_chan_test_typesinprotocols_Protocol_client
    server_end zx_chan_test_typesinprotocols_Protocol_server
    struct test_typesinprotocols_ResourceStructHandles
    opt_handle zx_handle
    opt_vmo zx_vmo
    opt_client_end zx_chan_test_typesinprotocols_Protocol_client
    opt_server_end zx_chan_test_typesinprotocols_Protocol_server
    opt_struct test_typesinprotocols_ResourceStructHandles
    array_handleHandles array[zx_handle, 5]
    array_vmoHandles array[zx_vmo, 5]
    array_client_endHandles array[zx_chan_test_typesinprotocols_Protocol_client, 5]
    array_server_endHandles array[zx_chan_test_typesinprotocols_Protocol_server, 5]
    array_structHandles array[test_typesinprotocols_ResourceStructHandles, 5]
    vector_handle array[zx_handle]
    vector_vmo array[zx_vmo]
    vector_client_end array[zx_chan_test_typesinprotocols_Protocol_client]
    vector_server_end array[zx_chan_test_typesinprotocols_Protocol_server]
    vector_struct array[test_typesinprotocols_ResourceStructHandles]
} [packed]
test_typesinprotocols_ProtocolTwoWayResourceRequest {
    hdr fidl_message_header[1802709005492464987]
    handle flags[fidl_handle_presence, int32]
    vmo flags[fidl_handle_presence, int32]
    client_end flags[fidl_handle_presence, int32]
    server_end flags[fidl_handle_presence, int32]
    structInLine test_typesinprotocols_ResourceStructInLine
     
    unionInLine test_typesinprotocols_ResourceUnionInLine
    opt_handle flags[fidl_handle_presence, int32]
    opt_vmo flags[fidl_handle_presence, int32]
    opt_client_end flags[fidl_handle_presence, int32]
    opt_server_end flags[fidl_handle_presence, int32]
    opt_structInLine test_typesinprotocols_ResourceStructInLine
    opt_unionInLine test_typesinprotocols_ResourceUnionInLine
    array_handleInLine array[flags[fidl_handle_presence, int32], 5]
    array_vmoInLine array[flags[fidl_handle_presence, int32], 5]
    array_client_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_server_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_structInLine array[test_typesinprotocols_ResourceStructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_ResourceUnionInLine, 5]
    vector_handleInLine fidl_vector
    vector_vmoInLine fidl_vector
    vector_client_endInLine fidl_vector
    vector_server_endInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    opt_structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    array_structOutOfLine array[test_typesinprotocols_ResourceStructOutOfLine, 5]
    vector_handleOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_vmoOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_client_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_server_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_ResourceStructInLine, test_typesinprotocols_ResourceStructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_ResourceUnionInLine]
} [packed]
test_typesinprotocols_ProtocolTwoWayResourceRequestHandles {
    handle zx_handle
    vmo zx_vmo
    client_end zx_chan_test_typesinprotocols_Protocol_client
    server_end zx_chan_test_typesinprotocols_Protocol_server
    struct test_typesinprotocols_ResourceStructHandles
    opt_handle zx_handle
    opt_vmo zx_vmo
    opt_client_end zx_chan_test_typesinprotocols_Protocol_client
    opt_server_end zx_chan_test_typesinprotocols_Protocol_server
    opt_struct test_typesinprotocols_ResourceStructHandles
    array_handleHandles array[zx_handle, 5]
    array_vmoHandles array[zx_vmo, 5]
    array_client_endHandles array[zx_chan_test_typesinprotocols_Protocol_client, 5]
    array_server_endHandles array[zx_chan_test_typesinprotocols_Protocol_server, 5]
    array_structHandles array[test_typesinprotocols_ResourceStructHandles, 5]
    vector_handle array[zx_handle]
    vector_vmo array[zx_vmo]
    vector_client_end array[zx_chan_test_typesinprotocols_Protocol_client]
    vector_server_end array[zx_chan_test_typesinprotocols_Protocol_server]
    vector_struct array[test_typesinprotocols_ResourceStructHandles]
} [packed]
test_typesinprotocols_ProtocolTwoWayResourceResponse {
    hdr fidl_message_header[1802709005492464987]
    handle flags[fidl_handle_presence, int32]
    vmo flags[fidl_handle_presence, int32]
    client_end flags[fidl_handle_presence, int32]
    server_end flags[fidl_handle_presence, int32]
    structInLine test_typesinprotocols_ResourceStructInLine
     
    unionInLine test_typesinprotocols_ResourceUnionInLine
    opt_handle flags[fidl_handle_presence, int32]
    opt_vmo flags[fidl_handle_presence, int32]
    opt_client_end flags[fidl_handle_presence, int32]
    opt_server_end flags[fidl_handle_presence, int32]
    opt_structInLine test_typesinprotocols_ResourceStructInLine
    opt_unionInLine test_typesinprotocols_ResourceUnionInLine
    array_handleInLine array[flags[fidl_handle_presence, int32], 5]
    array_vmoInLine array[flags[fidl_handle_presence, int32], 5]
    array_client_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_server_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_structInLine array[test_typesinprotocols_ResourceStructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_ResourceUnionInLine, 5]
    vector_handleInLine fidl_vector
    vector_vmoInLine fidl_vector
    vector_client_endInLine fidl_vector
    vector_server_endInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    opt_structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    array_structOutOfLine array[test_typesinprotocols_ResourceStructOutOfLine, 5]
    vector_handleOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_vmoOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_client_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_server_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_ResourceStructInLine, test_typesinprotocols_ResourceStructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_ResourceUnionInLine]
} [packed]
test_typesinprotocols_ProtocolTwoWayResourceResponseHandles {
    handle zx_handle
    vmo zx_vmo
    client_end zx_chan_test_typesinprotocols_Protocol_client
    server_end zx_chan_test_typesinprotocols_Protocol_server
    struct test_typesinprotocols_ResourceStructHandles
    opt_handle zx_handle
    opt_vmo zx_vmo
    opt_client_end zx_chan_test_typesinprotocols_Protocol_client
    opt_server_end zx_chan_test_typesinprotocols_Protocol_server
    opt_struct test_typesinprotocols_ResourceStructHandles
    array_handleHandles array[zx_handle, 5]
    array_vmoHandles array[zx_vmo, 5]
    array_client_endHandles array[zx_chan_test_typesinprotocols_Protocol_client, 5]
    array_server_endHandles array[zx_chan_test_typesinprotocols_Protocol_server, 5]
    array_structHandles array[test_typesinprotocols_ResourceStructHandles, 5]
    vector_handle array[zx_handle]
    vector_vmo array[zx_vmo]
    vector_client_end array[zx_chan_test_typesinprotocols_Protocol_client]
    vector_server_end array[zx_chan_test_typesinprotocols_Protocol_server]
    vector_struct array[test_typesinprotocols_ResourceStructHandles]
} [packed]
test_typesinprotocols_ProtocolEventResourceEvent {
    hdr fidl_message_header[5745997765922613643]
    handle flags[fidl_handle_presence, int32]
    vmo flags[fidl_handle_presence, int32]
    client_end flags[fidl_handle_presence, int32]
    server_end flags[fidl_handle_presence, int32]
    structInLine test_typesinprotocols_ResourceStructInLine
     
    unionInLine test_typesinprotocols_ResourceUnionInLine
    opt_handle flags[fidl_handle_presence, int32]
    opt_vmo flags[fidl_handle_presence, int32]
    opt_client_end flags[fidl_handle_presence, int32]
    opt_server_end flags[fidl_handle_presence, int32]
    opt_structInLine test_typesinprotocols_ResourceStructInLine
    opt_unionInLine test_typesinprotocols_ResourceUnionInLine
    array_handleInLine array[flags[fidl_handle_presence, int32], 5]
    array_vmoInLine array[flags[fidl_handle_presence, int32], 5]
    array_client_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_server_endInLine array[flags[fidl_handle_presence, int32], 5]
    array_structInLine array[test_typesinprotocols_ResourceStructInLine, 5]
    array_tableInLine array[, 5]
    array_unionInLine array[test_typesinprotocols_ResourceUnionInLine, 5]
    vector_handleInLine fidl_vector
    vector_vmoInLine fidl_vector
    vector_client_endInLine fidl_vector
    vector_server_endInLine fidl_vector
    vector_structInLine fidl_vector
    vector_tableInLine fidl_vector
    vector_unionInLine fidl_vector
    structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    opt_structOutOfLine test_typesinprotocols_ResourceStructOutOfLine
    array_structOutOfLine array[test_typesinprotocols_ResourceStructOutOfLine, 5]
    vector_handleOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_vmoOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_client_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_server_endOutOfLine array[flags[fidl_handle_presence, int32]]
    vector_structOutOfLine parallel_array[test_typesinprotocols_ResourceStructInLine, test_typesinprotocols_ResourceStructOutOfLine]
    vector_tableOutOfLine array[]
    vector_unionOutOfLine array[test_typesinprotocols_ResourceUnionInLine]
} [packed]
test_typesinprotocols_ProtocolEventResourceEventHandles {
    handle zx_handle
    vmo zx_vmo
    client_end zx_chan_test_typesinprotocols_Protocol_client
    server_end zx_chan_test_typesinprotocols_Protocol_server
    struct test_typesinprotocols_ResourceStructHandles
    opt_handle zx_handle
    opt_vmo zx_vmo
    opt_client_end zx_chan_test_typesinprotocols_Protocol_client
    opt_server_end zx_chan_test_typesinprotocols_Protocol_server
    opt_struct test_typesinprotocols_ResourceStructHandles
    array_handleHandles array[zx_handle, 5]
    array_vmoHandles array[zx_vmo, 5]
    array_client_endHandles array[zx_chan_test_typesinprotocols_Protocol_client, 5]
    array_server_endHandles array[zx_chan_test_typesinprotocols_Protocol_server, 5]
    array_structHandles array[test_typesinprotocols_ResourceStructHandles, 5]
    vector_handle array[zx_handle]
    vector_vmo array[zx_vmo]
    vector_client_end array[zx_chan_test_typesinprotocols_Protocol_client]
    vector_server_end array[zx_chan_test_typesinprotocols_Protocol_server]
    vector_struct array[test_typesinprotocols_ResourceStructHandles]
} [packed]

resource zx_chan_test_typesinprotocols_Protocol_client[zx_chan]
resource zx_chan_test_typesinprotocols_Protocol_server[zx_chan]

zx_channel_create$test_typesinprotocols_Protocol(options const[0], out0 ptr[out, zx_chan_test_typesinprotocols_Protocol_client], out1 ptr[out, zx_chan_test_typesinprotocols_Protocol_server])
fdio_service_connect$test_typesinprotocols_Protocol(path ptr[in, string["/svc/"]], handle zx_chan_test_typesinprotocols_Protocol_server)
zx_channel_write$test_typesinprotocols_ProtocolOneWayBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayBasicRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayBasicRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayBasicRequest, test_typesinprotocols_ProtocolTwoWayBasicRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayBasicResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventBasicEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayCompoundRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayCompoundRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayCompoundRequest, test_typesinprotocols_ProtocolTwoWayCompoundRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayCompoundResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventCompoundEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayArrayBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayArrayBasicRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayArrayBasicRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayArrayBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayArrayBasicRequest, test_typesinprotocols_ProtocolTwoWayArrayBasicRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayArrayBasicResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventArrayBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventArrayBasicEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayArrayCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayArrayCompoundRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayArrayCompoundRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayArrayCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayArrayCompoundRequest, test_typesinprotocols_ProtocolTwoWayArrayCompoundRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayArrayCompoundResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventArrayCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventArrayCompoundEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayVectorBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayVectorBasicRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayVectorBasicRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayVectorBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayVectorBasicRequest, test_typesinprotocols_ProtocolTwoWayVectorBasicRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayVectorBasicResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventVectorBasic(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventVectorBasicEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayVectorCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayVectorCompoundRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayVectorCompoundRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayVectorCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayVectorCompoundRequest, test_typesinprotocols_ProtocolTwoWayVectorCompoundRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayVectorCompoundResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventVectorCompound(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventVectorCompoundEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayVectorOptional(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayVectorOptionalRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayVectorOptionalRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayVectorOptional(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayVectorOptionalRequest, test_typesinprotocols_ProtocolTwoWayVectorOptionalRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayVectorOptionalResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventVectorOptional(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventVectorOptionalEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayArrayVectorNested(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayArrayVectorNestedRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayArrayVectorNestedRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayArrayVectorNested(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayArrayVectorNestedRequest, test_typesinprotocols_ProtocolTwoWayArrayVectorNestedRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayArrayVectorNestedResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventArrayVectorNested(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventArrayVectorNestedEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_typesinprotocols_ProtocolOneWayResource(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[in, test_typesinprotocols_ProtocolOneWayResourceRequest], num_bytes bytesize[bytes], handles ptr[in, test_typesinprotocols_ProtocolOneWayResourceRequestHandles], num_handles bytesize[handles])
zx_channel_call$test_typesinprotocols_ProtocolTwoWayResource(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_typesinprotocols_ProtocolTwoWayResourceRequest, test_typesinprotocols_ProtocolTwoWayResourceRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_typesinprotocols_ProtocolTwoWayResourceResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$test_typesinprotocols_ProtocolEventResource(handle zx_chan_test_typesinprotocols_Protocol_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_typesinprotocols_ProtocolEventResourceEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

