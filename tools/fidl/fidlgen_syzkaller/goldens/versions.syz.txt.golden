# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions

include <test/versions/c/fidl.h>
test_versions_Enum = test_versions_Enum_A, test_versions_Enum__UNKNOWN
test_versions_Bits = test_versions_Bits_A, test_versions_Bits__UNKNOWN
test_versions_StructInLine {
    x int32
} [packed]
test_versions_StructOutOfLine {
    void void
} [packed]
test_versions_StructHandles {
    void void
} [packed]
test_versions_UnionInLine [
    x fidl_union_member[1, int32]
]
test_versions_UnionOutOfLine [
    void void
][varlen]
test_versions_UnionHandles [
    void void
][varlen]



resource zx_chan_test_versions_OtherProtocol_client[zx_chan]
resource zx_chan_test_versions_OtherProtocol_server[zx_chan]

zx_channel_create$test_versions_OtherProtocol(options const[0], out0 ptr[out, zx_chan_test_versions_OtherProtocol_client], out1 ptr[out, zx_chan_test_versions_OtherProtocol_server])
fdio_service_connect$test_versions_OtherProtocol(path ptr[in, string["/svc/"]], handle zx_chan_test_versions_OtherProtocol_server)


test_versions_ProtocolFooRequest {
    hdr fidl_message_header[6231434419097198905]
} [packed]
test_versions_ProtocolFooRequestHandles {
    void void
} [packed]

resource zx_chan_test_versions_Protocol_client[zx_chan]
resource zx_chan_test_versions_Protocol_server[zx_chan]

zx_channel_create$test_versions_Protocol(options const[0], out0 ptr[out, zx_chan_test_versions_Protocol_client], out1 ptr[out, zx_chan_test_versions_Protocol_server])
fdio_service_connect$test_versions_Protocol(path ptr[in, string["/svc/"]], handle zx_chan_test_versions_Protocol_server)
zx_channel_write$test_versions_ProtocolFoo(handle zx_chan_test_versions_Protocol_client, options const[0], bytes ptr[in, test_versions_ProtocolFooRequest], num_bytes bytesize[bytes], handles ptr[in, test_versions_ProtocolFooRequestHandles], num_handles bytesize[handles])

