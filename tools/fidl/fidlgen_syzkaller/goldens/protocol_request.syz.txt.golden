# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

# fidl_experiment = no_optional_structs
# fidl_experiment = output_index_json
# fidl_experiment = simple_empty_response_syntax
# fidl_experiment = unknown_interactions
# fidl_experiment = unknown_interactions_mandate

include <test/protocolrequest/c/fidl.h>



resource zx_chan_test_protocolrequest_Child_client[zx_chan]
resource zx_chan_test_protocolrequest_Child_server[zx_chan]

zx_channel_create$test_protocolrequest_Child(options const[0], out0 ptr[out, zx_chan_test_protocolrequest_Child_client], out1 ptr[out, zx_chan_test_protocolrequest_Child_server])
fdio_service_connect$test_protocolrequest_Child(path ptr[in, string["/svc/"]], handle zx_chan_test_protocolrequest_Child_server)


test_protocolrequest_ParentGetChildRequest {
    hdr fidl_message_header[881818649151440699]
} [packed]
test_protocolrequest_ParentGetChildRequestHandles {
    void void
} [packed]
test_protocolrequest_ParentGetChildResponse {
    hdr fidl_message_header[881818649151440699]
    c flags[fidl_handle_presence, int32]
} [packed]
test_protocolrequest_ParentGetChildResponseHandles {
    c zx_chan_test_protocolrequest_Child_client
} [packed]
test_protocolrequest_ParentGetChildRequestRequest {
    hdr fidl_message_header[1096855814967598201]
} [packed]
test_protocolrequest_ParentGetChildRequestRequestHandles {
    void void
} [packed]
test_protocolrequest_ParentGetChildRequestResponse {
    hdr fidl_message_header[1096855814967598201]
    r flags[fidl_handle_presence, int32]
} [packed]
test_protocolrequest_ParentGetChildRequestResponseHandles {
    r zx_chan_test_protocolrequest_Child_server
} [packed]
test_protocolrequest_ParentTakeChildRequest {
    hdr fidl_message_header[4470101341872267920]
    c flags[fidl_handle_presence, int32]
} [packed]
test_protocolrequest_ParentTakeChildRequestHandles {
    c zx_chan_test_protocolrequest_Child_client
} [packed]
test_protocolrequest_ParentTakeChildRequestRequest {
    hdr fidl_message_header[2333981071306416007]
    r flags[fidl_handle_presence, int32]
} [packed]
test_protocolrequest_ParentTakeChildRequestRequestHandles {
    r zx_chan_test_protocolrequest_Child_server
} [packed]

resource zx_chan_test_protocolrequest_Parent_client[zx_chan]
resource zx_chan_test_protocolrequest_Parent_server[zx_chan]

zx_channel_create$test_protocolrequest_Parent(options const[0], out0 ptr[out, zx_chan_test_protocolrequest_Parent_client], out1 ptr[out, zx_chan_test_protocolrequest_Parent_server])
fdio_service_connect$test_protocolrequest_Parent(path ptr[in, string["/svc/"]], handle zx_chan_test_protocolrequest_Parent_server)
zx_channel_call$test_protocolrequest_ParentGetChild(handle zx_chan_test_protocolrequest_Parent_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_protocolrequest_ParentGetChildRequest, test_protocolrequest_ParentGetChildRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_protocolrequest_ParentGetChildResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$test_protocolrequest_ParentGetChildRequest(handle zx_chan_test_protocolrequest_Parent_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[test_protocolrequest_ParentGetChildRequestRequest, test_protocolrequest_ParentGetChildRequestRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], test_protocolrequest_ParentGetChildRequestResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_write$test_protocolrequest_ParentTakeChild(handle zx_chan_test_protocolrequest_Parent_client, options const[0], bytes ptr[in, test_protocolrequest_ParentTakeChildRequest], num_bytes bytesize[bytes], handles ptr[in, test_protocolrequest_ParentTakeChildRequestHandles], num_handles bytesize[handles])
zx_channel_write$test_protocolrequest_ParentTakeChildRequest(handle zx_chan_test_protocolrequest_Parent_client, options const[0], bytes ptr[in, test_protocolrequest_ParentTakeChildRequestRequest], num_bytes bytesize[bytes], handles ptr[in, test_protocolrequest_ParentTakeChildRequestRequestHandles], num_handles bytesize[handles])

