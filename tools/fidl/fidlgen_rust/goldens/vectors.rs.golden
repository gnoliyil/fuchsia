// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions
// fidl_experiment = unknown_interactions_mandate

#![allow(
    unused_parens, // one-element-tuple-case is not a tuple
    unused_mut, // not all args require mutation, but many do
    nonstandard_style, // auto-caps does its best, but is not always successful
)]
#![recursion_limit = "512"]

#[cfg(target_os = "fuchsia")]
#[allow(unused_imports)]
use fuchsia_zircon as zx;

#[allow(unused_imports)]
use {
    bitflags::bitflags,
    fidl::{
        client::QueryResponseFut,
        endpoints::{ControlHandle as _, Responder as _},
        fidl_bits, fidl_enum, fidl_struct, fidl_table, fidl_union,
    },
    fuchsia_zircon_status as zx_status,
    futures::future::{self, MaybeDone, TryFutureExt},
};

#[derive(Debug, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]
pub struct ExampleUseOfVectors {
    pub vector_of_uint8: Vec<u8>,
    pub vector_of_vector_of_bool: Vec<Vec<bool>>,
}
impl fidl::Persistable for ExampleUseOfVectors {}

fidl_struct! {
    name: ExampleUseOfVectors,
    members: [
        vector_of_uint8 {
            ty: fidl::encoding::UnboundedVector<u8>,
            index: 0,
            typevar: T0,
            offset_v1: 0,
            offset_v2: 0,
        },
        vector_of_vector_of_bool {
            ty: fidl::encoding::UnboundedVector<fidl::encoding::UnboundedVector<bool>>,
            index: 1,
            typevar: T1,
            offset_v1: 16,
            offset_v2: 16,
        },
    ],
    padding_v1: [
    ],
    padding_v2: [
    ],
    size_v1: 32,
    size_v2: 32,
    align_v1: 8,
    align_v2: 8,
}
