library test.handlesintypes;

// This is not a reference to library zx to avoid complexity in the test data.
// A local handle is defined here that contains subtypes that this test cares
// about.
type obj_type = strict enum : uint32 {
    NONE = 0;
    VMO = 3;
};

resource_definition handle : uint32 {
    properties {
        subtype obj_type;
    };
};

type TableWithHandle = resource table {
    1: h handle:VMO;
};

type UnionWithHandle = flexible resource union {
    1: h handle:VMO;
};

type HandlesInTypes = resource struct {
    normal_handle handle:VMO;

    handle_in_vec vector<handle:VMO>;
    handle_in_array array<handle:VMO, 5>;
    handle_in_mixed_vec_array vector<array<handle:VMO, 5>>;

    table_with_handle TableWithHandle;
    union_with_handle UnionWithHandle;
};

type EmptyResourceStruct = resource struct {};
type EmptyResourceTable = resource table {};

// TODO(fxbug.dev/118943): Support empty flexible unions in libfuzzer.
@bindings_denylist("libfuzzer")
type EmptyResourceUnion = flexible resource union {};
