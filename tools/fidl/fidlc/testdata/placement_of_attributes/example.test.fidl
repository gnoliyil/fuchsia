library test.placementofattributes;

// TODO: Support placement of an attribute on using.
using test.exampleusing;

@on_bits
type ExampleBits = strict bits {
    @on_bits_member
    MEMBER = 1;
};

@on_const
const EXAMPLE_CONST uint32 = 0;

@on_enum
type ExampleEnum = strict enum {
    @on_enum_member
    MEMBER = 1;
};

@on_protocol
closed protocol ExampleProtocol {
    @on_method
    strict Method(struct {
        arg test.exampleusing.Empty;
    });
};

@on_struct
type ExampleStruct = struct {
    @on_struct_member
    member uint32;
};

@on_table
type ExampleTable = table {
    @on_table_member
    1: member uint32;
};

@on_alias
alias Alias = uint32;

@on_union
type ExampleUnion = strict union {
    @on_union_member
    1: variant uint32;
};

@on_x_union
type ExampleXUnion = flexible union {
    @on_x_union_member
    1: variant uint32;
};
