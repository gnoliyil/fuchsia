# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/sdk/sdk_host_tool.gni")
import("//build/testing/golden_files.gni")
import("//tools/fidl/fidlc/testdata/info.gni")

config("fidlc_config") {
  defines = []
  if (defined(fidlc_deprecate_c_unions) && fidlc_deprecate_c_unions) {
    defines += [ "FIDLC_DEPRECATE_C_UNIONS" ]
  }
}

source_set("fidl") {
  sources = [
    "lib/c_generator.cc",
    "lib/check.cc",
    "lib/coded_types_generator.cc",
    "lib/diagnostic_types.cc",
    "lib/diagnostics_json.cc",
    "lib/experimental_flags.cc",
    "lib/findings_json.cc",
    "lib/fixables.cc",
    "lib/flat/attribute_schema.cc",
    "lib/flat/attributes.cc",
    "lib/flat/availability_step.cc",
    "lib/flat/compile_step.cc",
    "lib/flat/compiler.cc",
    "lib/flat/constraints.cc",
    "lib/flat/consume_step.cc",
    "lib/flat/name.cc",
    "lib/flat/reference.cc",
    "lib/flat/resolve_step.cc",
    "lib/flat/sort_step.cc",
    "lib/flat/transport.cc",
    "lib/flat/type_resolver.cc",
    "lib/flat/types.cc",
    "lib/flat/typespace.cc",
    "lib/flat/values.cc",
    "lib/flat/verify_steps.cc",
    "lib/flat_ast.cc",
    "lib/formatter.cc",
    "lib/index_json_generator.cc",
    "lib/json_generator.cc",
    "lib/lexer.cc",
    "lib/linter.cc",
    "lib/linting_tree_callbacks.cc",
    "lib/names.cc",
    "lib/ordinals.cc",
    "lib/parsed_transformer.cc",
    "lib/parser.cc",
    "lib/raw_ast.cc",
    "lib/reporter.cc",
    "lib/source_file.cc",
    "lib/source_manager.cc",
    "lib/source_span.cc",
    "lib/span_sequence.cc",
    "lib/span_sequence_tree_visitor.cc",
    "lib/tables_generator.cc",
    "lib/template_string.cc",
    "lib/token_list.cc",
    "lib/tree_visitor.cc",
    "lib/type_shape.cc",
    "lib/utils.cc",
    "lib/versioning_types.cc",
    "lib/virtual_source_file.cc",
  ]
  public_deps = [
    "//sdk/lib/fit",
    "//third_party/re2",
    "//zircon/system/ulib/cmdline",
    "//zircon/third_party/ulib/safemath",
  ]
  deps = [ ":json_schema" ]
  deps += [ "//third_party/boringssl" ]

  configs += [ ":fidlc_config" ]

  visibility = [
    ":fidl-format",
    ":fidl-lint",
    ":fidlc",
    "tests:*",
    "//src/tests/benchmarks/fidl/fidlc:*",
  ]
}

source_set("json_schema") {
  visibility = [ ":*" ]
  sources = [ "$target_gen_dir/json_schema.cc" ]
  deps = [ ":gen-json-schema" ]
}

action("gen-json-schema") {
  visibility = [ ":json_schema" ]
  outputs = [ "$target_gen_dir/json_schema.cc" ]
  sources = [ "schema.json" ]
  script = "gen-json-schema.sh"
  args = rebase_path(outputs, root_build_dir) +
         rebase_path(sources, root_build_dir)
}

group("host") {
  if (current_os != "fuchsia") {
    deps = [ ":fidlc" ]
  }
}

if (is_host) {
  executable("fidlc") {
    sources = [ "compiler/main.cc" ]
    deps = [ ":fidl" ]
  }

  executable("fidl-format") {
    sources = [ "formatter/main.cc" ]
    deps = [ ":fidl" ]
  }

  executable("fidl-lint") {
    sources = [
      "linter/command_line_options.cc",
      "linter/main.cc",
    ]
    deps = [ ":fidl" ]
  }

  sdk_host_tool("fidlc_sdk") {
    category = "partner"
    output_name = "fidlc"
    deps = [ ":fidlc" ]
  }

  sdk_host_tool("fidl-format_sdk") {
    category = "partner"
    output_name = "fidl-format"
    deps = [ ":fidl-format" ]
  }
}

golden_files("fidlc_golden_tests") {
  testonly = true
  deps = []
  comparisons = []
  foreach(info, fidl_testdata_info) {
    deps += [ "${info.target}($fidl_toolchain)" ]
    comparisons += [
      {
        golden = "goldens/${info.name}.json.golden"
        candidate = "${info.fidl_gen_dir}/${info.target_name}.fidl.json"
      },
      {
        golden = "goldens/${info.name}.index.json.golden"
        candidate = "${info.fidl_gen_dir}/${info.target_name}.fidl.index.json"
      },
      {
        golden = "goldens/${info.name}.tables.c.golden"
        candidate = "${info.fidl_gen_dir}/${info.target_name}/c/${info.target_name}.fidl.tables.c"
      },
    ]
  }
}

group("tests") {
  testonly = true
  deps = [
    ":fidlc_golden_tests",
    "testdata:verify_files_exist",
    "tests($host_toolchain)",
  ]
}
