// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#include <fidl/test.protocollayouts/cpp/natural_ostream.h>

std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayImportWithErrorTopResponse>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayImportWithErrorTopResponse& value) {
  os << "test_protocollayouts::MainProtocolTwoWayImportWithErrorTopResponse";
  os << "{ ";
  os << "result";
  os << " = " << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolTwoWayImportWithErrorResult>(value.result()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnImportWithErrorRequest>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnImportWithErrorRequest& value) {
  os << "test_protocollayouts::MainProtocolOnImportWithErrorRequest";
  os << "{ ";
  os << "result";
  os << " = " << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolOnImportWithErrorResult>(value.result()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayLocalWithErrorTopResponse>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayLocalWithErrorTopResponse& value) {
  os << "test_protocollayouts::MainProtocolTwoWayLocalWithErrorTopResponse";
  os << "{ ";
  os << "result";
  os << " = " << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult>(value.result()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnLocalWithErrorRequest>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnLocalWithErrorRequest& value) {
  os << "test_protocollayouts::MainProtocolOnLocalWithErrorRequest";
  os << "{ ";
  os << "result";
  os << " = " << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolOnLocalWithErrorResult>(value.result()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorTopResponse>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorTopResponse& value) {
  os << "test_protocollayouts::MainProtocolTwoWayAnonWithErrorTopResponse";
  os << "{ ";
  os << "result";
  os << " = " << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult>(value.result()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonWithErrorRequest>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonWithErrorRequest& value) {
  os << "test_protocollayouts::MainProtocolOnAnonWithErrorRequest";
  os << "{ ";
  os << "result";
  os << " = " << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolOnAnonWithErrorResult>(value.result()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::LocalTablePayload>::Format(std::ostream& os, const ::test_protocollayouts::LocalTablePayload& value) {
  os << "test_protocollayouts::LocalTablePayload";
  os << "{ ";
  if (value.a().has_value()) {
    os << "a";
    os << " = " << fidl::ostream::Formatted<uint16_t>(value.a().value()) << ", ";
  }
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOneWayAnonRequest>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOneWayAnonRequest& value) {
  os << "test_protocollayouts::MainProtocolOneWayAnonRequest";
  os << "{ ";
  if (value.a().has_value()) {
    os << "a";
    os << " = " << fidl::ostream::Formatted<uint16_t>(value.a().value()) << ", ";
  }
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonResponse>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonResponse& value) {
  os << "test_protocollayouts::MainProtocolTwoWayAnonResponse";
  os << "{ ";
  if (value.a().has_value()) {
    os << "a";
    os << " = " << fidl::ostream::Formatted<uint16_t>(value.a().value()) << ", ";
  }
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorRequest>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorRequest& value) {
  os << "test_protocollayouts::MainProtocolTwoWayAnonWithErrorRequest";
  os << "{ ";
  if (value.a().has_value()) {
    os << "a";
    os << " = " << fidl::ostream::Formatted<uint16_t>(value.a().value()) << ", ";
  }
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonWithErrorResponse>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonWithErrorResponse& value) {
  os << "test_protocollayouts::MainProtocolOnAnonWithErrorResponse";
  os << "{ ";
  if (value.a().has_value()) {
    os << "a";
    os << " = " << fidl::ostream::Formatted<uint16_t>(value.a().value()) << ", ";
  }
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::LocalUnionPayload>::Format(std::ostream& os, const ::test_protocollayouts::LocalUnionPayload& value) {
  os << "test_protocollayouts::LocalUnionPayload::";
  switch (value.Which()) {
    case ::test_protocollayouts::LocalUnionPayload::Tag::kB:
      os << "b(" << fidl::ostream::Formatted<bool>(value.b().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayImportWithErrorResult>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayImportWithErrorResult& value) {
  os << "test_protocollayouts::MainProtocolTwoWayImportWithErrorResult::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolTwoWayImportWithErrorResult::Tag::kResponse:
      os << "response(" << fidl::ostream::Formatted<::test_protocollayouts_imported::ImportUnionPayload>(value.response().value()) << ")";
      break;
    case ::test_protocollayouts::MainProtocolTwoWayImportWithErrorResult::Tag::kErr:
      os << "err(" << fidl::ostream::Formatted<uint32_t>(value.err().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnImportWithErrorResult>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnImportWithErrorResult& value) {
  os << "test_protocollayouts::MainProtocolOnImportWithErrorResult::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolOnImportWithErrorResult::Tag::kResponse:
      os << "response(" << fidl::ostream::Formatted<::test_protocollayouts_imported::ImportTablePayload>(value.response().value()) << ")";
      break;
    case ::test_protocollayouts::MainProtocolOnImportWithErrorResult::Tag::kErr:
      os << "err(" << fidl::ostream::Formatted<uint32_t>(value.err().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult& value) {
  os << "test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult::Tag::kResponse:
      os << "response(" << fidl::ostream::Formatted<::test_protocollayouts::LocalUnionPayload>(value.response().value()) << ")";
      break;
    case ::test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult::Tag::kErr:
      os << "err(" << fidl::ostream::Formatted<uint32_t>(value.err().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnLocalWithErrorResult>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnLocalWithErrorResult& value) {
  os << "test_protocollayouts::MainProtocolOnLocalWithErrorResult::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolOnLocalWithErrorResult::Tag::kResponse:
      os << "response(" << fidl::ostream::Formatted<::test_protocollayouts::LocalTablePayload>(value.response().value()) << ")";
      break;
    case ::test_protocollayouts::MainProtocolOnLocalWithErrorResult::Tag::kErr:
      os << "err(" << fidl::ostream::Formatted<uint32_t>(value.err().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonRequest>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonRequest& value) {
  os << "test_protocollayouts::MainProtocolTwoWayAnonRequest::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolTwoWayAnonRequest::Tag::kB:
      os << "b(" << fidl::ostream::Formatted<bool>(value.b().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResponse>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResponse& value) {
  os << "test_protocollayouts::MainProtocolTwoWayAnonWithErrorResponse::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResponse::Tag::kB:
      os << "b(" << fidl::ostream::Formatted<bool>(value.b().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult& value) {
  os << "test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult::Tag::kResponse:
      os << "response(" << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResponse>(value.response().value()) << ")";
      break;
    case ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult::Tag::kErr:
      os << "err(" << fidl::ostream::Formatted<uint32_t>(value.err().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonRequest>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonRequest& value) {
  os << "test_protocollayouts::MainProtocolOnAnonRequest::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolOnAnonRequest::Tag::kB:
      os << "b(" << fidl::ostream::Formatted<bool>(value.b().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonWithErrorResult>::Format(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonWithErrorResult& value) {
  os << "test_protocollayouts::MainProtocolOnAnonWithErrorResult::";
  switch (value.Which()) {
    case ::test_protocollayouts::MainProtocolOnAnonWithErrorResult::Tag::kResponse:
      os << "response(" << fidl::ostream::Formatted<::test_protocollayouts::MainProtocolOnAnonWithErrorResponse>(value.response().value()) << ")";
      break;
    case ::test_protocollayouts::MainProtocolOnAnonWithErrorResult::Tag::kErr:
      os << "err(" << fidl::ostream::Formatted<uint32_t>(value.err().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}

namespace test_protocollayouts {

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::LocalTablePayload& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::LocalTablePayload>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::LocalUnionPayload& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::LocalUnionPayload>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayImportWithErrorResult& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayImportWithErrorResult>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayImportWithErrorTopResponse& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayImportWithErrorTopResponse>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnImportWithErrorResult& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnImportWithErrorResult>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnImportWithErrorRequest& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnImportWithErrorRequest>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayLocalWithErrorResult>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayLocalWithErrorTopResponse& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayLocalWithErrorTopResponse>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnLocalWithErrorResult& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnLocalWithErrorResult>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnLocalWithErrorRequest& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnLocalWithErrorRequest>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOneWayAnonRequest& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOneWayAnonRequest>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonRequest& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonRequest>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonResponse& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonResponse>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorRequest& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorRequest>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResponse& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResponse>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorResult>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolTwoWayAnonWithErrorTopResponse& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolTwoWayAnonWithErrorTopResponse>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonRequest& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonRequest>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonWithErrorResponse& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonWithErrorResponse>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonWithErrorResult& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonWithErrorResult>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_protocollayouts::MainProtocolOnAnonWithErrorRequest& value) {
  return fidl::ostream::Formatter<::test_protocollayouts::MainProtocolOnAnonWithErrorRequest>::Format(os, value);
}

}  // namespace test_protocollayouts
