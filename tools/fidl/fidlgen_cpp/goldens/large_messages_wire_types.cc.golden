// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = allow_overflowing
// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#include <fidl/test.largemessages/cpp/wire_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

#ifdef __Fuchsia__
void ::test_largemessages::wire::Elements::_CloseHandles() {
  handle.reset();
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__
void ::test_largemessages::wire::UnboundedMaybeLargeResource::_CloseHandles() {
  for (auto& e_1 : elements) {
    e_1._CloseHandles();
  }
}

#endif  // __Fuchsia__

auto ::test_largemessages::wire::SemiBoundedBelievedToBeSmall::Which() const -> ::test_largemessages::wire::SemiBoundedBelievedToBeSmall::Tag {
  ZX_ASSERT(!has_invalid_tag());
  switch (ordinal_) {
    case ::test_largemessages::wire::SemiBoundedBelievedToBeSmall::Ordinal::kBytes:
      return static_cast<::test_largemessages::wire::SemiBoundedBelievedToBeSmall::Tag>(ordinal_);
    default:
      return ::test_largemessages::wire::SemiBoundedBelievedToBeSmall::Tag::_do_not_handle_this__write_a_default_case_instead;
  }
}

void ::test_largemessages::wire::SemiBoundedBelievedToBeSmall::SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(SemiBoundedBelievedToBeSmall) == sizeof(fidl_xunion_v2_t));
  static_assert(offsetof(SemiBoundedBelievedToBeSmall, ordinal_) == offsetof(fidl_xunion_v2_t, tag));
  static_assert(offsetof(SemiBoundedBelievedToBeSmall, envelope_) == offsetof(fidl_xunion_v2_t, envelope));
}

auto ::test_largemessages::wire::SemiBoundedMaybeLarge::Which() const -> ::test_largemessages::wire::SemiBoundedMaybeLarge::Tag {
  ZX_ASSERT(!has_invalid_tag());
  switch (ordinal_) {
    case ::test_largemessages::wire::SemiBoundedMaybeLarge::Ordinal::kBytes:
      return static_cast<::test_largemessages::wire::SemiBoundedMaybeLarge::Tag>(ordinal_);
    default:
      return ::test_largemessages::wire::SemiBoundedMaybeLarge::Tag::_do_not_handle_this__write_a_default_case_instead;
  }
}

void ::test_largemessages::wire::SemiBoundedMaybeLarge::SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(SemiBoundedMaybeLarge) == sizeof(fidl_xunion_v2_t));
  static_assert(offsetof(SemiBoundedMaybeLarge, ordinal_) == offsetof(fidl_xunion_v2_t, tag));
  static_assert(offsetof(SemiBoundedMaybeLarge, envelope_) == offsetof(fidl_xunion_v2_t, envelope));
}

#pragma clang diagnostic pop
