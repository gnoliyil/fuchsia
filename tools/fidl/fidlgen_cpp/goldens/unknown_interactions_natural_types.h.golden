// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions
// fidl_experiment = unknown_interactions_new_defaults

#pragma once

#include <cinttypes>
#include <string>

#include <lib/fidl/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_coding_traits.h>

#include <fidl/test.unknowninteractions/cpp/markers.h>
#include <fidl/test.unknowninteractions/cpp/common_types.h>


#ifdef __Fuchsia__

  #include <lib/zx/channel.h>
  

#endif  // __Fuchsia__


namespace test_unknowninteractions {





class UnknownInteractionsProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsProtocolStrictTwoWayErrResponse;


class UnknownInteractionsProtocolStrictTwoWayErrTopResponse;


class UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse;


class UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse;


class UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayResponse;


class UnknownInteractionsProtocolFlexibleTwoWayTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayErrResponse;


class UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse;


class UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse;


class UnknownInteractionsProtocolStrictEventFieldsRequest;


class UnknownInteractionsProtocolStrictEventErrResponse;


class UnknownInteractionsProtocolStrictEventErrRequest;


class UnknownInteractionsProtocolStrictEventFieldsErrResponse;


class UnknownInteractionsProtocolStrictEventFieldsErrRequest;


class UnknownInteractionsProtocolStrictEventUnionErrRequest;


class UnknownInteractionsProtocolStrictEventTableErrRequest;


class UnknownInteractionsProtocolFlexibleEventFieldsRequest;


class UnknownInteractionsProtocolFlexibleEventErrResponse;


class UnknownInteractionsProtocolFlexibleEventErrRequest;


class UnknownInteractionsProtocolFlexibleEventFieldsErrResponse;


class UnknownInteractionsProtocolFlexibleEventFieldsErrRequest;


class UnknownInteractionsProtocolFlexibleEventUnionErrRequest;


class UnknownInteractionsProtocolFlexibleEventTableErrRequest;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayErrResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse;


class UnknownInteractionsAjarProtocolStrictEventFieldsRequest;


class UnknownInteractionsAjarProtocolStrictEventErrResponse;


class UnknownInteractionsAjarProtocolStrictEventErrRequest;


class UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse;


class UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest;


class UnknownInteractionsAjarProtocolStrictEventUnionErrRequest;


class UnknownInteractionsAjarProtocolStrictEventTableErrRequest;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest;


class UnknownInteractionsAjarProtocolFlexibleEventErrResponse;


class UnknownInteractionsAjarProtocolFlexibleEventErrRequest;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest;


class UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest;


class UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayErrResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse;


class UnknownInteractionsClosedProtocolStrictEventFieldsRequest;


class UnknownInteractionsClosedProtocolStrictEventErrResponse;


class UnknownInteractionsClosedProtocolStrictEventErrRequest;


class UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse;


class UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest;


class UnknownInteractionsClosedProtocolStrictEventUnionErrRequest;


class UnknownInteractionsClosedProtocolStrictEventTableErrRequest;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayErrResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse;




class UnknownInteractionsProtocolStrictTwoWayTableResponse;



class UnknownInteractionsProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsProtocolFlexibleTwoWayTableResponse;



class UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse;



class UnknownInteractionsProtocolStrictEventTableRequest;



class UnknownInteractionsProtocolStrictEventTableErrResponse;



class UnknownInteractionsProtocolFlexibleEventTableRequest;



class UnknownInteractionsProtocolFlexibleEventTableErrResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayTableResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsAjarProtocolStrictEventTableRequest;



class UnknownInteractionsAjarProtocolStrictEventTableErrResponse;



class UnknownInteractionsAjarProtocolFlexibleEventTableRequest;



class UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayTableResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsClosedProtocolStrictEventTableRequest;



class UnknownInteractionsClosedProtocolStrictEventTableErrResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayTableResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse;




class UnknownInteractionsProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsProtocolStrictTwoWayErrResult;



class UnknownInteractionsProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayResult;



class UnknownInteractionsProtocolFlexibleTwoWayFieldsResult;



class UnknownInteractionsProtocolFlexibleTwoWayUnionResponse;



class UnknownInteractionsProtocolFlexibleTwoWayUnionResult;



class UnknownInteractionsProtocolFlexibleTwoWayTableResult;



class UnknownInteractionsProtocolFlexibleTwoWayErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse;



class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayTableErrResult;



class UnknownInteractionsProtocolStrictEventUnionRequest;



class UnknownInteractionsProtocolStrictEventErrResult;



class UnknownInteractionsProtocolStrictEventFieldsErrResult;



class UnknownInteractionsProtocolStrictEventUnionErrResponse;



class UnknownInteractionsProtocolStrictEventUnionErrResult;



class UnknownInteractionsProtocolStrictEventTableErrResult;



class UnknownInteractionsProtocolFlexibleEventUnionRequest;



class UnknownInteractionsProtocolFlexibleEventErrResult;



class UnknownInteractionsProtocolFlexibleEventFieldsErrResult;



class UnknownInteractionsProtocolFlexibleEventUnionErrResponse;



class UnknownInteractionsProtocolFlexibleEventUnionErrResult;



class UnknownInteractionsProtocolFlexibleEventTableErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsAjarProtocolStrictEventUnionRequest;



class UnknownInteractionsAjarProtocolStrictEventErrResult;



class UnknownInteractionsAjarProtocolStrictEventFieldsErrResult;



class UnknownInteractionsAjarProtocolStrictEventUnionErrResponse;



class UnknownInteractionsAjarProtocolStrictEventUnionErrResult;



class UnknownInteractionsAjarProtocolStrictEventTableErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventUnionRequest;



class UnknownInteractionsAjarProtocolFlexibleEventErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse;



class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventTableErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsClosedProtocolStrictEventUnionRequest;



class UnknownInteractionsClosedProtocolStrictEventErrResult;



class UnknownInteractionsClosedProtocolStrictEventFieldsErrResult;



class UnknownInteractionsClosedProtocolStrictEventUnionErrResponse;



class UnknownInteractionsClosedProtocolStrictEventUnionErrResult;



class UnknownInteractionsClosedProtocolStrictEventTableErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult;




  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayFieldsResponseTable;


class UnknownInteractionsProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(UnknownInteractionsProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayUnionResponseTable;


class UnknownInteractionsProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictTwoWayUnionResponse(UnknownInteractionsProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayUnionResponse(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayTableResponseTable;


class UnknownInteractionsProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableResponse(UnknownInteractionsProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayTableResponse(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayErr_ResponseTable;


class UnknownInteractionsProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayErrResponse(UnknownInteractionsProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayErrResponse(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolStrictTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayErr_ResultTable;


class UnknownInteractionsProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayErrResult(UnknownInteractionsProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayErrResult(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayErrTopResponseTable;


class UnknownInteractionsProtocolStrictTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayErrTopResponse(UnknownInteractionsProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayErrTopResponse& operator=(UnknownInteractionsProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayErrTopResponse(const UnknownInteractionsProtocolStrictTwoWayErrTopResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayErrTopResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayFieldsErr_ResultTable;


class UnknownInteractionsProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse(UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse(const UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayUnionErr_ResponseTable;


class UnknownInteractionsProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayUnionErr_ResultTable;


class UnknownInteractionsProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayUnionErrResult(UnknownInteractionsProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponseTable;


class UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse(UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse& operator=(UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse(const UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayTableErr_ResponseTable;


class UnknownInteractionsProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(UnknownInteractionsProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayTableErr_ResultTable;


class UnknownInteractionsProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayTableErrResult(UnknownInteractionsProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayTableErrResult(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayTableErrTopResponseTable;


class UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse(UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse& operator=(UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse(const UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWay_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayResponse(UnknownInteractionsProtocolFlexibleTwoWayResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayResponse(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWay_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayResult(UnknownInteractionsProtocolFlexibleTwoWayResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayResult(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayTopResponse(UnknownInteractionsProtocolFlexibleTwoWayTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFields_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFields_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(UnknownInteractionsProtocolFlexibleTwoWayFieldsResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnion_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnion_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayUnionResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionResult(UnknownInteractionsProtocolFlexibleTwoWayUnionResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTable_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(UnknownInteractionsProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTable_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayTableResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayTableResult(UnknownInteractionsProtocolFlexibleTwoWayTableResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayTableResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayTableResult(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayTableResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayTableResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayTableResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayTableResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayTableTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse(UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(UnknownInteractionsProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayErr_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayErrResult(UnknownInteractionsProtocolFlexibleTwoWayErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayErrResult(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayErrTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse(UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnionErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnionErr_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTableErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTableErr_ResultTable;


class UnknownInteractionsProtocolFlexibleTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(UnknownInteractionsProtocolFlexibleTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponseTable;


class UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse(UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventFieldsRequestTable;


class UnknownInteractionsProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventFieldsRequest(UnknownInteractionsProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventFieldsRequest(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept : UnknownInteractionsProtocolStrictEventFieldsRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsRequest& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventUnionRequestTable;


class UnknownInteractionsProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictEventUnionRequest(UnknownInteractionsProtocolStrictEventUnionRequest&& other) noexcept
      : UnknownInteractionsProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventUnionRequest& operator=(UnknownInteractionsProtocolStrictEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventUnionRequest(const UnknownInteractionsProtocolStrictEventUnionRequest& other) noexcept : UnknownInteractionsProtocolStrictEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsProtocolStrictEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventTableRequestTable;


class UnknownInteractionsProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsProtocolStrictEventTableRequest(UnknownInteractionsProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventTableRequest& operator=(UnknownInteractionsProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventTableRequest(const UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept : UnknownInteractionsProtocolStrictEventTableRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventTableRequest& operator=(const UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolStrictEventTableRequest& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolStrictEventTableRequest& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventTableRequest(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventErr_ResponseTable;


class UnknownInteractionsProtocolStrictEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventErrResponse(UnknownInteractionsProtocolStrictEventErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventErrResponse& operator=(UnknownInteractionsProtocolStrictEventErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventErrResponse(const UnknownInteractionsProtocolStrictEventErrResponse& other) noexcept : UnknownInteractionsProtocolStrictEventErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventErrResponse& operator=(const UnknownInteractionsProtocolStrictEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolStrictEventErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventErr_ResultTable;


class UnknownInteractionsProtocolStrictEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventErrResult(UnknownInteractionsProtocolStrictEventErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventErrResult& operator=(UnknownInteractionsProtocolStrictEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventErrResult(const UnknownInteractionsProtocolStrictEventErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventErrResult& operator=(const UnknownInteractionsProtocolStrictEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse val) {
      return UnknownInteractionsProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventErrRequestTable;


class UnknownInteractionsProtocolStrictEventErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictEventErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventErrRequest(UnknownInteractionsProtocolStrictEventErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventErrRequest& operator=(UnknownInteractionsProtocolStrictEventErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventErrRequest(const UnknownInteractionsProtocolStrictEventErrRequest& other) noexcept : UnknownInteractionsProtocolStrictEventErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventErrRequest& operator=(const UnknownInteractionsProtocolStrictEventErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictEventErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventFieldsErr_ResponseTable;


class UnknownInteractionsProtocolStrictEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventFieldsErrResponse(UnknownInteractionsProtocolStrictEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventFieldsErrResponse& operator=(UnknownInteractionsProtocolStrictEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventFieldsErrResponse(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) noexcept : UnknownInteractionsProtocolStrictEventFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventFieldsErrResponse& operator=(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventFieldsErr_ResultTable;


class UnknownInteractionsProtocolStrictEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventFieldsErrResult(UnknownInteractionsProtocolStrictEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventFieldsErrResult& operator=(UnknownInteractionsProtocolStrictEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventFieldsErrResult(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventFieldsErrResult& operator=(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse val) {
      return UnknownInteractionsProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventFieldsErrRequestTable;


class UnknownInteractionsProtocolStrictEventFieldsErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventFieldsErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictEventFieldsErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventFieldsErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventFieldsErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventFieldsErrRequest(UnknownInteractionsProtocolStrictEventFieldsErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventFieldsErrRequest& operator=(UnknownInteractionsProtocolStrictEventFieldsErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventFieldsErrRequest(const UnknownInteractionsProtocolStrictEventFieldsErrRequest& other) noexcept : UnknownInteractionsProtocolStrictEventFieldsErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventFieldsErrRequest& operator=(const UnknownInteractionsProtocolStrictEventFieldsErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventFieldsErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventFieldsErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventUnionErr_ResponseTable;


class UnknownInteractionsProtocolStrictEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictEventUnionErrResponse(UnknownInteractionsProtocolStrictEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventUnionErrResponse& operator=(UnknownInteractionsProtocolStrictEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventUnionErrResponse(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) noexcept : UnknownInteractionsProtocolStrictEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventUnionErrResponse& operator=(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventUnionErr_ResultTable;


class UnknownInteractionsProtocolStrictEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventUnionErrResult(UnknownInteractionsProtocolStrictEventUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventUnionErrResult& operator=(UnknownInteractionsProtocolStrictEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventUnionErrResult(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventUnionErrResult& operator=(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse val) {
      return UnknownInteractionsProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventUnionErrRequestTable;


class UnknownInteractionsProtocolStrictEventUnionErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventUnionErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictEventUnionErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventUnionErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventUnionErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventUnionErrRequest(UnknownInteractionsProtocolStrictEventUnionErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventUnionErrRequest& operator=(UnknownInteractionsProtocolStrictEventUnionErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventUnionErrRequest(const UnknownInteractionsProtocolStrictEventUnionErrRequest& other) noexcept : UnknownInteractionsProtocolStrictEventUnionErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventUnionErrRequest& operator=(const UnknownInteractionsProtocolStrictEventUnionErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventUnionErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictEventUnionErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventUnionErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventUnionErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventTableErr_ResponseTable;


class UnknownInteractionsProtocolStrictEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolStrictEventTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolStrictEventTableErrResponse(UnknownInteractionsProtocolStrictEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventTableErrResponse& operator=(UnknownInteractionsProtocolStrictEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventTableErrResponse(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) noexcept : UnknownInteractionsProtocolStrictEventTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventTableErrResponse& operator=(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventTableErr_ResultTable;


class UnknownInteractionsProtocolStrictEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventTableErrResult(UnknownInteractionsProtocolStrictEventTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventTableErrResult& operator=(UnknownInteractionsProtocolStrictEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventTableErrResult(const UnknownInteractionsProtocolStrictEventTableErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventTableErrResult& operator=(const UnknownInteractionsProtocolStrictEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse val) {
      return UnknownInteractionsProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventTableErrRequestTable;


class UnknownInteractionsProtocolStrictEventTableErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventTableErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolStrictEventTableErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventTableErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventTableErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventTableErrRequest(UnknownInteractionsProtocolStrictEventTableErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventTableErrRequest& operator=(UnknownInteractionsProtocolStrictEventTableErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventTableErrRequest(const UnknownInteractionsProtocolStrictEventTableErrRequest& other) noexcept : UnknownInteractionsProtocolStrictEventTableErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventTableErrRequest& operator=(const UnknownInteractionsProtocolStrictEventTableErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventTableErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventTableErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolStrictEventTableErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolStrictEventTableErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventTableErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventFieldsRequestTable;


class UnknownInteractionsProtocolFlexibleEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventFieldsRequest(UnknownInteractionsProtocolFlexibleEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventFieldsRequest& operator=(UnknownInteractionsProtocolFlexibleEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventFieldsRequest(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventFieldsRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventFieldsRequest& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsRequest& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventUnionRequestTable;


class UnknownInteractionsProtocolFlexibleEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleEventUnionRequest(UnknownInteractionsProtocolFlexibleEventUnionRequest&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventUnionRequest& operator=(UnknownInteractionsProtocolFlexibleEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventUnionRequest(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventUnionRequest& operator=(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventTableRequestTable;


class UnknownInteractionsProtocolFlexibleEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolFlexibleEventTableRequest() noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableRequest(UnknownInteractionsProtocolFlexibleEventTableRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableRequest& operator=(UnknownInteractionsProtocolFlexibleEventTableRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventTableRequest(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventTableRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventTableRequest& operator=(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableRequest& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventTableRequest(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventErrResponse(UnknownInteractionsProtocolFlexibleEventErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventErrResponse(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleEventErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolFlexibleEventErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventErr_ResultTable;


class UnknownInteractionsProtocolFlexibleEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventErrResult(UnknownInteractionsProtocolFlexibleEventErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventErrResult& operator=(UnknownInteractionsProtocolFlexibleEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventErrResult(const UnknownInteractionsProtocolFlexibleEventErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventErrRequestTable;


class UnknownInteractionsProtocolFlexibleEventErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleEventErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventErrRequest(UnknownInteractionsProtocolFlexibleEventErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventErrRequest& operator=(UnknownInteractionsProtocolFlexibleEventErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventErrRequest(const UnknownInteractionsProtocolFlexibleEventErrRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventErrRequest& operator=(const UnknownInteractionsProtocolFlexibleEventErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleEventErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventFieldsErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(UnknownInteractionsProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventFieldsErr_ResultTable;


class UnknownInteractionsProtocolFlexibleEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventFieldsErrResult(UnknownInteractionsProtocolFlexibleEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventFieldsErrResult& operator=(UnknownInteractionsProtocolFlexibleEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventFieldsErrRequestTable;


class UnknownInteractionsProtocolFlexibleEventFieldsErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventFieldsErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleEventFieldsErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventFieldsErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventFieldsErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventFieldsErrRequest(UnknownInteractionsProtocolFlexibleEventFieldsErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventFieldsErrRequest& operator=(UnknownInteractionsProtocolFlexibleEventFieldsErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventFieldsErrRequest(const UnknownInteractionsProtocolFlexibleEventFieldsErrRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventFieldsErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventFieldsErrRequest& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventFieldsErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventFieldsErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventUnionErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleEventUnionErrResponse(UnknownInteractionsProtocolFlexibleEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventUnionErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventUnionErrResponse(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventUnionErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventUnionErr_ResultTable;


class UnknownInteractionsProtocolFlexibleEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventUnionErrResult(UnknownInteractionsProtocolFlexibleEventUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventUnionErrResult& operator=(UnknownInteractionsProtocolFlexibleEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventUnionErrResult(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventUnionErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventUnionErrRequestTable;


class UnknownInteractionsProtocolFlexibleEventUnionErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventUnionErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleEventUnionErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventUnionErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventUnionErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventUnionErrRequest(UnknownInteractionsProtocolFlexibleEventUnionErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventUnionErrRequest& operator=(UnknownInteractionsProtocolFlexibleEventUnionErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventUnionErrRequest(const UnknownInteractionsProtocolFlexibleEventUnionErrRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventUnionErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventUnionErrRequest& operator=(const UnknownInteractionsProtocolFlexibleEventUnionErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventUnionErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventUnionErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventTableErr_ResponseTable;


class UnknownInteractionsProtocolFlexibleEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsProtocolFlexibleEventTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableErrResponse(UnknownInteractionsProtocolFlexibleEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventTableErrResponse(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleEventTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventTableErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventTableErr_ResultTable;


class UnknownInteractionsProtocolFlexibleEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventTableErrResult(UnknownInteractionsProtocolFlexibleEventTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventTableErrResult& operator=(UnknownInteractionsProtocolFlexibleEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventTableErrResult(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventTableErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventTableErrRequestTable;


class UnknownInteractionsProtocolFlexibleEventTableErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventTableErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsProtocolFlexibleEventTableErrRequest(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventTableErrRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventTableErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventTableErrRequest(UnknownInteractionsProtocolFlexibleEventTableErrRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableErrRequest& operator=(UnknownInteractionsProtocolFlexibleEventTableErrRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventTableErrRequest(const UnknownInteractionsProtocolFlexibleEventTableErrRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventTableErrRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventTableErrRequest& operator=(const UnknownInteractionsProtocolFlexibleEventTableErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventTableErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableErrRequest& result(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventTableErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventTableErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayTableResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(UnknownInteractionsAjarProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayErrResult(UnknownInteractionsAjarProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse(UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse(const UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayTableErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayTableErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponseTable;


class UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse(UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventFieldsRequestTable;


class UnknownInteractionsAjarProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(UnknownInteractionsAjarProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventFieldsRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventUnionRequestTable;


class UnknownInteractionsAjarProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictEventUnionRequest(UnknownInteractionsAjarProtocolStrictEventUnionRequest&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventUnionRequest& operator=(UnknownInteractionsAjarProtocolStrictEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventUnionRequest(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventTableRequestTable;


class UnknownInteractionsAjarProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableRequest(UnknownInteractionsAjarProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableRequest& operator=(UnknownInteractionsAjarProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventTableRequest(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventTableRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventTableRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventTableRequest(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventErrResponse(UnknownInteractionsAjarProtocolStrictEventErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventErrResponse(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictEventErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarProtocolStrictEventErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventErrResult(UnknownInteractionsAjarProtocolStrictEventErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventErrResult(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventErrRequestTable;


class UnknownInteractionsAjarProtocolStrictEventErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictEventErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventErrRequest(UnknownInteractionsAjarProtocolStrictEventErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventErrRequest& operator=(UnknownInteractionsAjarProtocolStrictEventErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventErrRequest(const UnknownInteractionsAjarProtocolStrictEventErrRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventErrRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictEventErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventFieldsErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventFieldsErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(UnknownInteractionsAjarProtocolStrictEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventFieldsErrRequestTable;


class UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest(UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest(const UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventUnionErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(UnknownInteractionsAjarProtocolStrictEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventUnionErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventUnionErrResult(UnknownInteractionsAjarProtocolStrictEventUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventUnionErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventUnionErrRequestTable;


class UnknownInteractionsAjarProtocolStrictEventUnionErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventUnionErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictEventUnionErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventUnionErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventUnionErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventUnionErrRequest(UnknownInteractionsAjarProtocolStrictEventUnionErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventUnionErrRequest& operator=(UnknownInteractionsAjarProtocolStrictEventUnionErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventUnionErrRequest(const UnknownInteractionsAjarProtocolStrictEventUnionErrRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventUnionErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventUnionErrRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventUnionErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventUnionErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventTableErr_ResponseTable;


class UnknownInteractionsAjarProtocolStrictEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse(UnknownInteractionsAjarProtocolStrictEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventTableErrResponse(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictEventTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventTableErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventTableErr_ResultTable;


class UnknownInteractionsAjarProtocolStrictEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventTableErrResult(UnknownInteractionsAjarProtocolStrictEventTableErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventTableErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventTableErrResult(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventTableErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventTableErrRequestTable;


class UnknownInteractionsAjarProtocolStrictEventTableErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventTableErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolStrictEventTableErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventTableErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventTableErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventTableErrRequest(UnknownInteractionsAjarProtocolStrictEventTableErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableErrRequest& operator=(UnknownInteractionsAjarProtocolStrictEventTableErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventTableErrRequest(const UnknownInteractionsAjarProtocolStrictEventTableErrRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventTableErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventTableErrRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventTableErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventTableErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventTableErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventFieldsRequestTable;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTable;


class UnknownInteractionsAjarProtocolFlexibleEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(UnknownInteractionsAjarProtocolFlexibleEventUnionRequest&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventTableRequestTable;


class UnknownInteractionsAjarProtocolFlexibleEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest() noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(UnknownInteractionsAjarProtocolFlexibleEventTableRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventTableRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventTableRequest(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventErr_ResponseTable;


class UnknownInteractionsAjarProtocolFlexibleEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventErrResponse(UnknownInteractionsAjarProtocolFlexibleEventErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventErr_ResultTable;


class UnknownInteractionsAjarProtocolFlexibleEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventErrResult(UnknownInteractionsAjarProtocolFlexibleEventErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventErrResult(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventErrRequestTable;


class UnknownInteractionsAjarProtocolFlexibleEventErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolFlexibleEventErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventErrRequest(UnknownInteractionsAjarProtocolFlexibleEventErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventErrRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventErrRequest(const UnknownInteractionsAjarProtocolFlexibleEventErrRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventErrRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_ResponseTable;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_ResultTable;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequestTable;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventUnionErr_ResponseTable;


class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventUnionErr_ResultTable;


class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequestTable;


class UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest(UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventTableErr_ResponseTable;


class UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse() noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventTableErr_ResultTable;


class UnknownInteractionsAjarProtocolFlexibleEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(UnknownInteractionsAjarProtocolFlexibleEventTableErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventTableErrRequestTable;


class UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest(UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest(const UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest& result(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayTableResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(UnknownInteractionsClosedProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayErrResult(UnknownInteractionsClosedProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse(UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse(const UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayTableErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayTableErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponseTable;


class UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse(UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventFieldsRequestTable;


class UnknownInteractionsClosedProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(UnknownInteractionsClosedProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventFieldsRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventUnionRequestTable;


class UnknownInteractionsClosedProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictEventUnionRequest(UnknownInteractionsClosedProtocolStrictEventUnionRequest&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventUnionRequest& operator=(UnknownInteractionsClosedProtocolStrictEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventUnionRequest(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventTableRequestTable;


class UnknownInteractionsClosedProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsClosedProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableRequest(UnknownInteractionsClosedProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableRequest& operator=(UnknownInteractionsClosedProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventTableRequest(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventTableRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventTableRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventTableRequest(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventErrResponse(UnknownInteractionsClosedProtocolStrictEventErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventErrResponse(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictEventErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsClosedProtocolStrictEventErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventErrResult(UnknownInteractionsClosedProtocolStrictEventErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventErrResult(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventErrRequestTable;


class UnknownInteractionsClosedProtocolStrictEventErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictEventErrRequest(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventErrRequest| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventErrRequest(UnknownInteractionsClosedProtocolStrictEventErrRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventErrRequest& operator=(UnknownInteractionsClosedProtocolStrictEventErrRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventErrRequest(const UnknownInteractionsClosedProtocolStrictEventErrRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventErrRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventErrRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictEventErrRequest& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventFieldsErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventFieldsErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(UnknownInteractionsClosedProtocolStrictEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventFieldsErrRequestTable;


class UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest(UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest(const UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventUnionErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(UnknownInteractionsClosedProtocolStrictEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventUnionErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventUnionErrResult(UnknownInteractionsClosedProtocolStrictEventUnionErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventUnionErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventUnionErrRequestTable;


class UnknownInteractionsClosedProtocolStrictEventUnionErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventUnionErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictEventUnionErrRequest(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventUnionErrRequest| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventUnionErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventUnionErrRequest(UnknownInteractionsClosedProtocolStrictEventUnionErrRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventUnionErrRequest& operator=(UnknownInteractionsClosedProtocolStrictEventUnionErrRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventUnionErrRequest(const UnknownInteractionsClosedProtocolStrictEventUnionErrRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventUnionErrRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventUnionErrRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionErrRequest& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventUnionErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventUnionErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventTableErr_ResponseTable;


class UnknownInteractionsClosedProtocolStrictEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse(UnknownInteractionsClosedProtocolStrictEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventTableErrResponse(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictEventTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventTableErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventTableErr_ResultTable;


class UnknownInteractionsClosedProtocolStrictEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventTableErrResult(UnknownInteractionsClosedProtocolStrictEventTableErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventTableErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventTableErrResult(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventTableErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventTableErrRequestTable;


class UnknownInteractionsClosedProtocolStrictEventTableErrRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventTableErrRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedProtocolStrictEventTableErrRequest(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventTableErrRequest| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventTableErrRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventTableErrRequest(UnknownInteractionsClosedProtocolStrictEventTableErrRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableErrRequest& operator=(UnknownInteractionsClosedProtocolStrictEventTableErrRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventTableErrRequest(const UnknownInteractionsClosedProtocolStrictEventTableErrRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventTableErrRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventTableErrRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventTableErrRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableErrRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableErrRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableErrRequest& result(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventTableErrRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventTableErrRequest(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayTableResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayErr_ResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayErr_ResultTable;


class UnknownInteractionsDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayErrResult(UnknownInteractionsDriverProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse(UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse(const UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_ResultTable;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_ResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_ResultTable;


class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayTableErr_ResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayTableErr_ResultTable;


class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponseTable;


class UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse(UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWay_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWay_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayResult(UnknownInteractionsDriverProtocolFlexibleTwoWayResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFields_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFields_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTable_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse() noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTable_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kTransportErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayErr_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayErr_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_ResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_ResultTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse
        , int32_t
        , ::fidl::internal::TransportErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kTransportErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithTransportErr(::fidl::internal::TransportErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> transport_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> transport_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the transport_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& transport_err(::fidl::internal::TransportErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kTransportErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kTransportErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponseTable;


class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_ResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_ResultTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_ResultTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_ResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_ResultTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_ResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_ResultTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponseTable;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_ResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_ResultTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_ResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_ResultTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_ResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_ResultTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_ResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }
  bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }
  bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
    return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
  }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(Storage_{}) {}

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field {};
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_ResultTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  



extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponseTable;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult result) noexcept
    : storage_({
      .result = std::move(result)
    }) {}

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse, 16>::Equal(this, &other);
    }
    
      const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult &
    result() const {
      return storage_.result;
    }

    
    ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& result() {
      return storage_.result;
    }

    // Setter for result.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse& result(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult value) {
      storage_.result = std::move(value);
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse(Storage_{
      .result =::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
  }) {}

 private:
  struct Storage_ final {
      ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult result;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse, 16>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::result, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  

}  // namespace test_unknowninteractions
namespace fidl {


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayFieldsResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWay_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFields_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayTableTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventFieldsRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventFieldsErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventUnionErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventTableErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventFieldsRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventFieldsErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventUnionErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventTableErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventFieldsRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventFieldsErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventUnionErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventTableErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventFieldsRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventTableErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventFieldsRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventFieldsErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventUnionErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventTableErrRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrRequest, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWay_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFields_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = false;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrTopResponse, 16> {};

  
  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrTopResponse, 16> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayTableResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTable_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventTableRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventTableRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayTableResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventTableRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventTableRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayTableResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventTableRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayTableResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTable_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> {};

  

  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> {};

  


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictTwoWayUnionResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWay_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFields_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnion_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnion_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTable_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolStrictEventUnionRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_StrictEventTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocolFlexibleEventUnionRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsProtocol_FlexibleEventTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolStrictEventUnionRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_StrictEventTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarProtocol_FlexibleEventTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocolStrictEventUnionRequestTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedProtocol_StrictEventTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_StrictTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWay_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFields_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTable_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_ResponseTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> {};


  

  extern "C" const fidl_type_t test_unknowninteractions_UnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_ResultTable;

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasEnvelope = true;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> {};





}  // namespace fidl

