// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#pragma once

#include <fidl/test.handlesintypes/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_ostream.h>

#include <iostream>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

template <>
struct fidl::ostream::Formatter<::test_handlesintypes::ObjType> {
  static std::ostream& Format(std::ostream& os, const ::test_handlesintypes::ObjType& value);
};
template <>
struct fidl::ostream::Formatter<::test_handlesintypes::TableWithHandle> {
  static std::ostream& Format(std::ostream& os, const ::test_handlesintypes::TableWithHandle& value);
};
template <>
struct fidl::ostream::Formatter<::test_handlesintypes::UnionWithHandle> {
  static std::ostream& Format(std::ostream& os, const ::test_handlesintypes::UnionWithHandle& value);
};
template <>
struct fidl::ostream::Formatter<::test_handlesintypes::HandlesInTypes> {
  static std::ostream& Format(std::ostream& os, const ::test_handlesintypes::HandlesInTypes& value);
};
template <>
struct fidl::ostream::Formatter<::test_handlesintypes::EmptyResourceStruct> {
  static std::ostream& Format(std::ostream& os, const ::test_handlesintypes::EmptyResourceStruct& value);
};
template <>
struct fidl::ostream::Formatter<::test_handlesintypes::EmptyResourceTable> {
  static std::ostream& Format(std::ostream& os, const ::test_handlesintypes::EmptyResourceTable& value);
};
template <>
struct fidl::ostream::Formatter<::test_handlesintypes::EmptyResourceUnion> {
  static std::ostream& Format(std::ostream& os, const ::test_handlesintypes::EmptyResourceUnion& value);
};

namespace test_handlesintypes {

std::ostream& operator<<(std::ostream& os, const ::test_handlesintypes::ObjType& value);

std::ostream& operator<<(std::ostream& os, const ::test_handlesintypes::TableWithHandle& value);

std::ostream& operator<<(std::ostream& os, const ::test_handlesintypes::UnionWithHandle& value);

std::ostream& operator<<(std::ostream& os, const ::test_handlesintypes::HandlesInTypes& value);

std::ostream& operator<<(std::ostream& os, const ::test_handlesintypes::EmptyResourceStruct& value);

std::ostream& operator<<(std::ostream& os, const ::test_handlesintypes::EmptyResourceTable& value);

std::ostream& operator<<(std::ostream& os, const ::test_handlesintypes::EmptyResourceUnion& value);

}  // namespace test_handlesintypes

#pragma clang diagnostic pop
