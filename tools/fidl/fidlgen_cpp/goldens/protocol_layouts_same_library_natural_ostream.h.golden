// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#pragma once

#include <fidl/test.protocollayoutssamelibrary/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_ostream.h>

#include <iostream>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::TablePayload> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::TablePayload& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::UnionPayload> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::UnionPayload& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorTopResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorTopResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorTopResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorTopResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolOnNamedComposedWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnNamedComposedWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::ComposedProtocolOnNamedComposedWithErrorRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnNamedComposedWithErrorRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorTopResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorTopResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolOnLocalWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnLocalWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolOnLocalWithErrorRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnLocalWithErrorRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorTopResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorTopResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorResult> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorResult& value);
};
template <>
struct fidl::ostream::Formatter<::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorRequest& value);
};

namespace test_protocollayoutssamelibrary {

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::TablePayload& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::UnionPayload& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorTopResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedWithErrorRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorTopResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnNamedComposedWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::ComposedProtocolOnNamedComposedWithErrorRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorTopResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnLocalWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnLocalWithErrorRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorTopResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorResult& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocollayoutssamelibrary::MainProtocolOnAnonWithErrorRequest& value);

}  // namespace test_protocollayoutssamelibrary

template <>
struct fidl::ostream::Formatter<::fidl::ClientEnd<::test_protocollayoutssamelibrary::ComposedProtocol>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ClientEnd<::test_protocollayoutssamelibrary::ComposedProtocol>& value) {
    return os << "ClientEnd<"
              << "test_protocollayoutssamelibrary::ComposedProtocol"
              << ">(" << value.channel().get() << ")";
  }
};

template <>
struct fidl::ostream::Formatter<::fidl::ServerEnd<::test_protocollayoutssamelibrary::ComposedProtocol>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ServerEnd<::test_protocollayoutssamelibrary::ComposedProtocol>& value) {
    return os << "ServerEnd<"
              << "test_protocollayoutssamelibrary::ComposedProtocol"
              << ">(" << value.channel().get() << ")";
  }
};
template <>
struct fidl::ostream::Formatter<::fidl::ClientEnd<::test_protocollayoutssamelibrary::MainProtocol>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ClientEnd<::test_protocollayoutssamelibrary::MainProtocol>& value) {
    return os << "ClientEnd<"
              << "test_protocollayoutssamelibrary::MainProtocol"
              << ">(" << value.channel().get() << ")";
  }
};

template <>
struct fidl::ostream::Formatter<::fidl::ServerEnd<::test_protocollayoutssamelibrary::MainProtocol>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ServerEnd<::test_protocollayoutssamelibrary::MainProtocol>& value) {
    return os << "ServerEnd<"
              << "test_protocollayoutssamelibrary::MainProtocol"
              << ">(" << value.channel().get() << ")";
  }
};

namespace fidl {

inline std::ostream& operator<<(std::ostream& os, const ::fidl::ClientEnd<::test_protocollayoutssamelibrary::ComposedProtocol>& value) {
  return fidl::ostream::Formatter<::fidl::ClientEnd<::test_protocollayoutssamelibrary::ComposedProtocol>>::Format(os, value);
}

inline std::ostream& operator<<(std::ostream& os, const ::fidl::ServerEnd<::test_protocollayoutssamelibrary::ComposedProtocol>& value) {
  return fidl::ostream::Formatter<::fidl::ServerEnd<::test_protocollayoutssamelibrary::ComposedProtocol>>::Format(os, value);
}

inline std::ostream& operator<<(std::ostream& os, const ::fidl::ClientEnd<::test_protocollayoutssamelibrary::MainProtocol>& value) {
  return fidl::ostream::Formatter<::fidl::ClientEnd<::test_protocollayoutssamelibrary::MainProtocol>>::Format(os, value);
}

inline std::ostream& operator<<(std::ostream& os, const ::fidl::ServerEnd<::test_protocollayoutssamelibrary::MainProtocol>& value) {
  return fidl::ostream::Formatter<::fidl::ServerEnd<::test_protocollayoutssamelibrary::MainProtocol>>::Format(os, value);
}

#pragma clang diagnostic pop

}  // namespace fidl
