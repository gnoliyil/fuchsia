// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#pragma once

#include <fidl/test.placementofattributes/cpp/markers.h>
#include <fidl/test.placementofattributes/cpp/natural_types.h>
#include <fidl/test.placementofattributes/cpp/wire_types.h>
#ifdef __Fuchsia__
#include <fidl/test.placementofattributes/cpp/natural_messaging.h>
#include <fidl/test.placementofattributes/cpp/wire_messaging.h>

#endif  // __Fuchsia__
#include <fidl/test.exampleusing/cpp/type_conversions.h>
#include <lib/fidl/cpp/wire_natural_conversions.h>
namespace fidl {
namespace internal {

template <>
struct NaturalTypeForWireType<::test_placementofattributes::wire::ExampleBits> {
  using type = ::test_placementofattributes::ExampleBits;
};
template <>
struct WireTypeForNaturalType<::test_placementofattributes::ExampleBits> {
  using type = ::test_placementofattributes::wire::ExampleBits;
};

template <>
struct NaturalTypeForWireType<::test_placementofattributes::wire::ExampleEnum> {
  using type = ::test_placementofattributes::ExampleEnum;
};
template <>
struct WireTypeForNaturalType<::test_placementofattributes::ExampleEnum> {
  using type = ::test_placementofattributes::wire::ExampleEnum;
};

template <>
struct WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleProtocolMethodRequest, ::test_placementofattributes::ExampleProtocolMethodRequest> {
  static ::test_placementofattributes::ExampleProtocolMethodRequest ToNatural(::test_placementofattributes::wire::ExampleProtocolMethodRequest src);
  static ::test_placementofattributes::wire::ExampleProtocolMethodRequest ToWire(fidl::AnyArena& arena, ::test_placementofattributes::ExampleProtocolMethodRequest src);
};

template <>
struct NaturalTypeForWireType<::test_placementofattributes::wire::ExampleProtocolMethodRequest> {
  using type = ::test_placementofattributes::ExampleProtocolMethodRequest;
};
template <>
struct WireTypeForNaturalType<::test_placementofattributes::ExampleProtocolMethodRequest> {
  using type = ::test_placementofattributes::wire::ExampleProtocolMethodRequest;
};

template <>
struct WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleStruct, ::test_placementofattributes::ExampleStruct> {
  static ::test_placementofattributes::ExampleStruct ToNatural(::test_placementofattributes::wire::ExampleStruct src);
  static ::test_placementofattributes::wire::ExampleStruct ToWire(fidl::AnyArena& arena, ::test_placementofattributes::ExampleStruct src);
};

template <>
struct NaturalTypeForWireType<::test_placementofattributes::wire::ExampleStruct> {
  using type = ::test_placementofattributes::ExampleStruct;
};
template <>
struct WireTypeForNaturalType<::test_placementofattributes::ExampleStruct> {
  using type = ::test_placementofattributes::wire::ExampleStruct;
};

template <>
struct WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleTable, ::test_placementofattributes::ExampleTable> {
  static ::test_placementofattributes::ExampleTable ToNatural(::test_placementofattributes::wire::ExampleTable src);
  static ::test_placementofattributes::wire::ExampleTable ToWire(fidl::AnyArena& arena, ::test_placementofattributes::ExampleTable src);
};

template <>
struct NaturalTypeForWireType<::test_placementofattributes::wire::ExampleTable> {
  using type = ::test_placementofattributes::ExampleTable;
};
template <>
struct WireTypeForNaturalType<::test_placementofattributes::ExampleTable> {
  using type = ::test_placementofattributes::wire::ExampleTable;
};

template <>
struct WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleUnion, ::test_placementofattributes::ExampleUnion> {
  static ::test_placementofattributes::ExampleUnion ToNatural(::test_placementofattributes::wire::ExampleUnion src);
  static ::test_placementofattributes::wire::ExampleUnion ToWire(fidl::AnyArena& arena, ::test_placementofattributes::ExampleUnion src);
};

template <>
struct WireNaturalConversionTraits<::fidl::WireOptional<::test_placementofattributes::wire::ExampleUnion>, std::unique_ptr<::test_placementofattributes::ExampleUnion>> {
  static std::unique_ptr<::test_placementofattributes::ExampleUnion> ToNatural(::fidl::WireOptional<::test_placementofattributes::wire::ExampleUnion> src);
  static ::fidl::WireOptional<::test_placementofattributes::wire::ExampleUnion> ToWire(fidl::AnyArena& arena, std::unique_ptr<::test_placementofattributes::ExampleUnion> src);
};

template <>
struct NaturalTypeForWireType<::test_placementofattributes::wire::ExampleUnion> {
  using type = ::test_placementofattributes::ExampleUnion;
};
template <>
struct WireTypeForNaturalType<::test_placementofattributes::ExampleUnion> {
  using type = ::test_placementofattributes::wire::ExampleUnion;
};

#ifdef __Fuchsia__

#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
