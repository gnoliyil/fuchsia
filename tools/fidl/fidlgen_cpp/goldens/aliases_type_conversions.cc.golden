// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#include <fidl/test.aliases/cpp/type_conversions.h>

namespace fidl {
namespace internal {

#ifdef __Fuchsia__

::test_aliases::ExampleOfUseOfAliases WireNaturalConversionTraits<::test_aliases::wire::ExampleOfUseOfAliases, ::test_aliases::ExampleOfUseOfAliases>::ToNatural(::test_aliases::wire::ExampleOfUseOfAliases src) {
  return ::test_aliases::ExampleOfUseOfAliases{{
      .field_of_u32 = WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(std::move(src.field_of_u32)),
      .field_of_vec_of_strings = WireNaturalConversionTraits<::fidl::VectorView<::fidl::StringView>, ::std::vector<::std::string>>::ToNatural(std::move(src.field_of_vec_of_strings)),
      .field_of_vec_of_strings_at_most_nine = WireNaturalConversionTraits<::fidl::VectorView<::fidl::StringView>, ::std::vector<::std::string>>::ToNatural(std::move(src.field_of_vec_of_strings_at_most_nine)),
      .field_of_vec_of_strings_at_most_5 = WireNaturalConversionTraits<::fidl::VectorView<::fidl::StringView>, ::std::vector<::std::string>>::ToNatural(std::move(src.field_of_vec_of_strings_at_most_5)),
      .field_of_vec_of_ref_me_at_most_5 = WireNaturalConversionTraits<::fidl::VectorView<::test_someotherlibrary::wire::ReferenceMe>, ::std::vector<::test_someotherlibrary::ReferenceMe>>::ToNatural(std::move(src.field_of_vec_of_ref_me_at_most_5)),
      .field_of_channel = WireNaturalConversionTraits<::zx::channel, ::zx::channel>::ToNatural(std::move(src.field_of_channel)),
      .field_of_client_end = WireNaturalConversionTraits<::zx::channel, ::zx::channel>::ToNatural(std::move(src.field_of_client_end)),
      .field_of_nullable_client_end = WireNaturalConversionTraits<::zx::channel, ::zx::channel>::ToNatural(std::move(src.field_of_nullable_client_end)),
  }};
}
::test_aliases::wire::ExampleOfUseOfAliases WireNaturalConversionTraits<::test_aliases::wire::ExampleOfUseOfAliases, ::test_aliases::ExampleOfUseOfAliases>::ToWire(fidl::AnyArena& arena, ::test_aliases::ExampleOfUseOfAliases src) {
  return ::test_aliases::wire::ExampleOfUseOfAliases{
      .field_of_u32 = WireNaturalConversionTraits<uint32_t, uint32_t>::ToWire(arena, std::move(src.field_of_u32())),
      .field_of_vec_of_strings = WireNaturalConversionTraits<::fidl::VectorView<::fidl::StringView>, ::std::vector<::std::string>>::ToWire(arena, std::move(src.field_of_vec_of_strings())),
      .field_of_vec_of_strings_at_most_nine = WireNaturalConversionTraits<::fidl::VectorView<::fidl::StringView>, ::std::vector<::std::string>>::ToWire(arena, std::move(src.field_of_vec_of_strings_at_most_nine())),
      .field_of_vec_of_strings_at_most_5 = WireNaturalConversionTraits<::fidl::VectorView<::fidl::StringView>, ::std::vector<::std::string>>::ToWire(arena, std::move(src.field_of_vec_of_strings_at_most_5())),
      .field_of_vec_of_ref_me_at_most_5 = WireNaturalConversionTraits<::fidl::VectorView<::test_someotherlibrary::wire::ReferenceMe>, ::std::vector<::test_someotherlibrary::ReferenceMe>>::ToWire(arena, std::move(src.field_of_vec_of_ref_me_at_most_5())),
      .field_of_channel = WireNaturalConversionTraits<::zx::channel, ::zx::channel>::ToWire(arena, std::move(src.field_of_channel())),
      .field_of_client_end = WireNaturalConversionTraits<::zx::channel, ::zx::channel>::ToWire(arena, std::move(src.field_of_client_end())),
      .field_of_nullable_client_end = WireNaturalConversionTraits<::zx::channel, ::zx::channel>::ToWire(arena, std::move(src.field_of_nullable_client_end())),
  };
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
