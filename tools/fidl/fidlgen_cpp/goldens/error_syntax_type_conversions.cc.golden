// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#include <fidl/test.errorsyntax/cpp/type_conversions.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

namespace fidl {
namespace internal {

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailRequest, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest>::ToNatural(::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailRequest src) {
  return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest(WireNaturalConversionTraits<::fidl::StringView, ::std::string>::ToNatural(std::move(src.s)));
}
::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailRequest WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailRequest, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest>::ToWire(fidl::AnyArena& arena, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest src) {
  return ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailRequest{
      .s = WireNaturalConversionTraits<::fidl::StringView, ::std::string>::ToWire(arena, std::move(src.s())),
  };
}

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse>::ToNatural(::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse src) {
  return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse(WireNaturalConversionTraits<int64_t, int64_t>::ToNatural(std::move(src.value)));
}
::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse>::ToWire(fidl::AnyArena& arena, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse src) {
  return ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse{
      .value = WireNaturalConversionTraits<int64_t, int64_t>::ToWire(arena, std::move(src.value())),
  };
}

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse>::ToNatural(::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse src) {
  return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse(WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>::ToNatural(std::move(src.result)));
}
::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse>::ToWire(fidl::AnyArena& arena, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse src) {
  return ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse{
      .result = WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>::ToWire(arena, std::move(src.result())),
  };
}

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>::ToNatural(::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult src) {
  switch (src.Which()) {
    case ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult::Tag::kResponse:
      return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult::WithResponse(
          WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse>::ToNatural(std::move(src.response())));
    case ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult::Tag::kErr:
      return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult::WithErr(
          WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(std::move(src.err())));
    default:
      ZX_PANIC("unknown union tag in strict union");
  }
}
::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>::ToWire(fidl::AnyArena& arena, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult src) {
  switch (src.Which()) {
    case ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult::Tag::kResponse:
      return ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult::WithResponse(arena,
                                                                                                   WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse>::ToWire(arena, std::move(src.response().value())));
    case ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult::Tag::kErr:
      return ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult::WithErr(
          WireNaturalConversionTraits<uint32_t, uint32_t>::ToWire(arena, std::move(src.err().value())));
  }
}

#ifdef __Fuchsia__

::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail> WireNaturalConversionTraits<::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>, ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>>::ToNatural(::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail> src) {
  return ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>(
      WireNaturalConversionTraits<::test_errorsyntax_parent::wire::ParentUsesErrorSyntaxComposedCallWhichMayFailTopResponse, ::fit::result<uint32_t, ::test_errorsyntax_parent::ParentUsesErrorSyntaxComposedCallWhichMayFailResponse>>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail> WireNaturalConversionTraits<::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>, ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail> src) {
  return ::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>(
      WireNaturalConversionTraits<::test_errorsyntax_parent::wire::ParentUsesErrorSyntaxComposedCallWhichMayFailTopResponse, ::fit::result<uint32_t, ::test_errorsyntax_parent::ParentUsesErrorSyntaxComposedCallWhichMayFailResponse>>::ToWire(arena, std::move(src)));
}

::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail> WireNaturalConversionTraits<::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>, ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>>::ToNatural(::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail> src) {
  return ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>(
      WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse, ::fit::result<uint32_t, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse>>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail> WireNaturalConversionTraits<::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>, ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail> src) {
  return ::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>(
      WireNaturalConversionTraits<::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse, ::fit::result<uint32_t, ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse>>::ToWire(arena, std::move(src)));
}

#endif  // __Fuchsia__
#pragma clang diagnostic pop

}  // namespace internal
}  // namespace fidl
