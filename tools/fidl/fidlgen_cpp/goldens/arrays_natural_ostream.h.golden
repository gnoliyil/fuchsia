// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions
// fidl_experiment = unknown_interactions_mandate

#pragma once

#include <fidl/test.arrays/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_ostream.h>

#include <iostream>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

template <>
struct fidl::ostream::Formatter<::test_arrays::StructSmallArray> {
  static std::ostream& Format(std::ostream& os, const ::test_arrays::StructSmallArray& value);
};
template <>
struct fidl::ostream::Formatter<::test_arrays::StructLargeArray> {
  static std::ostream& Format(std::ostream& os, const ::test_arrays::StructLargeArray& value);
};
template <>
struct fidl::ostream::Formatter<::test_arrays::TableSmallArray> {
  static std::ostream& Format(std::ostream& os, const ::test_arrays::TableSmallArray& value);
};
template <>
struct fidl::ostream::Formatter<::test_arrays::TableLargeArray> {
  static std::ostream& Format(std::ostream& os, const ::test_arrays::TableLargeArray& value);
};
template <>
struct fidl::ostream::Formatter<::test_arrays::UnionSmallArray> {
  static std::ostream& Format(std::ostream& os, const ::test_arrays::UnionSmallArray& value);
};
template <>
struct fidl::ostream::Formatter<::test_arrays::UnionLargeArray> {
  static std::ostream& Format(std::ostream& os, const ::test_arrays::UnionLargeArray& value);
};

namespace test_arrays {

std::ostream& operator<<(std::ostream& os, const ::test_arrays::StructSmallArray& value);

std::ostream& operator<<(std::ostream& os, const ::test_arrays::StructLargeArray& value);

std::ostream& operator<<(std::ostream& os, const ::test_arrays::TableSmallArray& value);

std::ostream& operator<<(std::ostream& os, const ::test_arrays::TableLargeArray& value);

std::ostream& operator<<(std::ostream& os, const ::test_arrays::UnionSmallArray& value);

std::ostream& operator<<(std::ostream& os, const ::test_arrays::UnionLargeArray& value);

}  // namespace test_arrays

#pragma clang diagnostic pop
