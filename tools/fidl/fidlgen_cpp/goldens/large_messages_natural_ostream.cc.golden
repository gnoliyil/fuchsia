// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = allow_overflowing
// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#include <fidl/test.largemessages/cpp/natural_ostream.h>

std::ostream& fidl::ostream::Formatter<::test_largemessages::BoundedKnownToBeSmall>::Format(std::ostream& os, const ::test_largemessages::BoundedKnownToBeSmall& value) {
  os << "test_largemessages::BoundedKnownToBeSmall";
  os << "{ ";
  os << "bytes";
  os << " = " << fidl::ostream::Formatted<::std::vector<uint8_t>>(value.bytes()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_largemessages::BoundedMaybeLarge>::Format(std::ostream& os, const ::test_largemessages::BoundedMaybeLarge& value) {
  os << "test_largemessages::BoundedMaybeLarge";
  os << "{ ";
  os << "bytes";
  os << " = " << fidl::ostream::Formatted<::std::vector<uint8_t>>(value.bytes()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_largemessages::UnboundedMaybeLargeValue>::Format(std::ostream& os, const ::test_largemessages::UnboundedMaybeLargeValue& value) {
  os << "test_largemessages::UnboundedMaybeLargeValue";
  os << "{ ";
  os << "bytes";
  os << " = " << fidl::ostream::Formatted<::std::vector<uint8_t>>(value.bytes()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_largemessages::Elements>::Format(std::ostream& os, const ::test_largemessages::Elements& value) {
  os << "test_largemessages::Elements";
  os << "{ ";
  os << "handle";
  os << " = " << fidl::ostream::Formatted<::zx::handle>(value.handle()) << ", ";
  os << "bytes";
  os << " = " << fidl::ostream::Formatted<::std::vector<uint8_t>>(value.bytes()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_largemessages::UnboundedMaybeLargeResource>::Format(std::ostream& os, const ::test_largemessages::UnboundedMaybeLargeResource& value) {
  os << "test_largemessages::UnboundedMaybeLargeResource";
  os << "{ ";
  os << "elements";
  os << " = " << fidl::ostream::Formatted<::std::array<::test_largemessages::Elements, 64>>(value.elements()) << ", ";
  os << "}";
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_largemessages::SemiBoundedBelievedToBeSmall>::Format(std::ostream& os, const ::test_largemessages::SemiBoundedBelievedToBeSmall& value) {
  os << "test_largemessages::SemiBoundedBelievedToBeSmall::";
  switch (value.Which()) {
    case ::test_largemessages::SemiBoundedBelievedToBeSmall::Tag::kBytes:
      os << "bytes(" << fidl::ostream::Formatted<::std::vector<uint8_t>>(value.bytes().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}
std::ostream& fidl::ostream::Formatter<::test_largemessages::SemiBoundedMaybeLarge>::Format(std::ostream& os, const ::test_largemessages::SemiBoundedMaybeLarge& value) {
  os << "test_largemessages::SemiBoundedMaybeLarge::";
  switch (value.Which()) {
    case ::test_largemessages::SemiBoundedMaybeLarge::Tag::kBytes:
      os << "bytes(" << fidl::ostream::Formatted<::std::vector<uint8_t>>(value.bytes().value()) << ")";
      break;
    default:
      os << "Unknown";
  }
  return os;
}

namespace test_largemessages {

std::ostream& operator<<(std::ostream& os, const ::test_largemessages::BoundedKnownToBeSmall& value) {
  return fidl::ostream::Formatter<::test_largemessages::BoundedKnownToBeSmall>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_largemessages::BoundedMaybeLarge& value) {
  return fidl::ostream::Formatter<::test_largemessages::BoundedMaybeLarge>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_largemessages::SemiBoundedBelievedToBeSmall& value) {
  return fidl::ostream::Formatter<::test_largemessages::SemiBoundedBelievedToBeSmall>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_largemessages::SemiBoundedMaybeLarge& value) {
  return fidl::ostream::Formatter<::test_largemessages::SemiBoundedMaybeLarge>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_largemessages::UnboundedMaybeLargeValue& value) {
  return fidl::ostream::Formatter<::test_largemessages::UnboundedMaybeLargeValue>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_largemessages::Elements& value) {
  return fidl::ostream::Formatter<::test_largemessages::Elements>::Format(os, value);
}

std::ostream& operator<<(std::ostream& os, const ::test_largemessages::UnboundedMaybeLargeResource& value) {
  return fidl::ostream::Formatter<::test_largemessages::UnboundedMaybeLargeResource>::Format(os, value);
}

}  // namespace test_largemessages
