// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

#pragma once

#include <fidl/test.protocolrequest/cpp/markers.h>
#include <fidl/test.protocolrequest/cpp/natural_types.h>
#include <fidl/test.protocolrequest/cpp/wire_types.h>
#ifdef __Fuchsia__
#include <fidl/test.protocolrequest/cpp/natural_messaging.h>
#include <fidl/test.protocolrequest/cpp/wire_messaging.h>

#endif  // __Fuchsia__
#include <lib/fidl/cpp/wire_natural_conversions.h>

namespace fidl {
namespace internal {

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<::test_protocolrequest::wire::ParentGetChildResponse, ::test_protocolrequest::ParentGetChildResponse> {
  static ::test_protocolrequest::ParentGetChildResponse ToNatural(::test_protocolrequest::wire::ParentGetChildResponse src);
  static ::test_protocolrequest::wire::ParentGetChildResponse ToWire(fidl::AnyArena& arena, ::test_protocolrequest::ParentGetChildResponse src);
};

template <>
struct NaturalTypeForWireType<::test_protocolrequest::wire::ParentGetChildResponse> {
  using type = ::test_protocolrequest::ParentGetChildResponse;
};
template <>
struct WireTypeForNaturalType<::test_protocolrequest::ParentGetChildResponse> {
  using type = ::test_protocolrequest::wire::ParentGetChildResponse;
};

#endif  // __Fuchsia__

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<::test_protocolrequest::wire::ParentGetChildRequestResponse, ::test_protocolrequest::ParentGetChildRequestResponse> {
  static ::test_protocolrequest::ParentGetChildRequestResponse ToNatural(::test_protocolrequest::wire::ParentGetChildRequestResponse src);
  static ::test_protocolrequest::wire::ParentGetChildRequestResponse ToWire(fidl::AnyArena& arena, ::test_protocolrequest::ParentGetChildRequestResponse src);
};

template <>
struct NaturalTypeForWireType<::test_protocolrequest::wire::ParentGetChildRequestResponse> {
  using type = ::test_protocolrequest::ParentGetChildRequestResponse;
};
template <>
struct WireTypeForNaturalType<::test_protocolrequest::ParentGetChildRequestResponse> {
  using type = ::test_protocolrequest::wire::ParentGetChildRequestResponse;
};

#endif  // __Fuchsia__

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<::test_protocolrequest::wire::ParentTakeChildRequest, ::test_protocolrequest::ParentTakeChildRequest> {
  static ::test_protocolrequest::ParentTakeChildRequest ToNatural(::test_protocolrequest::wire::ParentTakeChildRequest src);
  static ::test_protocolrequest::wire::ParentTakeChildRequest ToWire(fidl::AnyArena& arena, ::test_protocolrequest::ParentTakeChildRequest src);
};

template <>
struct NaturalTypeForWireType<::test_protocolrequest::wire::ParentTakeChildRequest> {
  using type = ::test_protocolrequest::ParentTakeChildRequest;
};
template <>
struct WireTypeForNaturalType<::test_protocolrequest::ParentTakeChildRequest> {
  using type = ::test_protocolrequest::wire::ParentTakeChildRequest;
};

#endif  // __Fuchsia__

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<::test_protocolrequest::wire::ParentTakeChildRequestRequest, ::test_protocolrequest::ParentTakeChildRequestRequest> {
  static ::test_protocolrequest::ParentTakeChildRequestRequest ToNatural(::test_protocolrequest::wire::ParentTakeChildRequestRequest src);
  static ::test_protocolrequest::wire::ParentTakeChildRequestRequest ToWire(fidl::AnyArena& arena, ::test_protocolrequest::ParentTakeChildRequestRequest src);
};

template <>
struct NaturalTypeForWireType<::test_protocolrequest::wire::ParentTakeChildRequestRequest> {
  using type = ::test_protocolrequest::ParentTakeChildRequestRequest;
};
template <>
struct WireTypeForNaturalType<::test_protocolrequest::ParentTakeChildRequestRequest> {
  using type = ::test_protocolrequest::wire::ParentTakeChildRequestRequest;
};

#endif  // __Fuchsia__

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<::fidl::WireResponse<::test_protocolrequest::Parent::GetChild>, ::fidl::Response<::test_protocolrequest::Parent::GetChild>> {
  static ::fidl::Response<::test_protocolrequest::Parent::GetChild> ToNatural(::fidl::WireResponse<::test_protocolrequest::Parent::GetChild> src);
  static ::fidl::WireResponse<::test_protocolrequest::Parent::GetChild> ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_protocolrequest::Parent::GetChild> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<::test_protocolrequest::Parent::GetChild>> {
  using type = ::fidl::Response<::test_protocolrequest::Parent::GetChild>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<::test_protocolrequest::Parent::GetChild>> {
  using type = ::fidl::WireResponse<::test_protocolrequest::Parent::GetChild>;
};

template <>
struct WireNaturalConversionTraits<::fidl::WireResponse<::test_protocolrequest::Parent::GetChildRequest>, ::fidl::Response<::test_protocolrequest::Parent::GetChildRequest>> {
  static ::fidl::Response<::test_protocolrequest::Parent::GetChildRequest> ToNatural(::fidl::WireResponse<::test_protocolrequest::Parent::GetChildRequest> src);
  static ::fidl::WireResponse<::test_protocolrequest::Parent::GetChildRequest> ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_protocolrequest::Parent::GetChildRequest> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<::test_protocolrequest::Parent::GetChildRequest>> {
  using type = ::fidl::Response<::test_protocolrequest::Parent::GetChildRequest>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<::test_protocolrequest::Parent::GetChildRequest>> {
  using type = ::fidl::WireResponse<::test_protocolrequest::Parent::GetChildRequest>;
};

#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
