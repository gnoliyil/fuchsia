// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = allow_overflowing
// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions
// fidl_experiment = zx_select_case_sensitivity

#include <fidl/test.largemessages/cpp/type_conversions.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

namespace fidl {
namespace internal {

::test_largemessages::BoundedKnownToBeSmall WireNaturalConversionTraits<::test_largemessages::wire::BoundedKnownToBeSmall, ::test_largemessages::BoundedKnownToBeSmall>::ToNatural(::test_largemessages::wire::BoundedKnownToBeSmall src) {
  return ::test_largemessages::BoundedKnownToBeSmall(WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToNatural(std::move(src.bytes)));
}
::test_largemessages::wire::BoundedKnownToBeSmall WireNaturalConversionTraits<::test_largemessages::wire::BoundedKnownToBeSmall, ::test_largemessages::BoundedKnownToBeSmall>::ToWire(fidl::AnyArena& arena, ::test_largemessages::BoundedKnownToBeSmall src) {
  return ::test_largemessages::wire::BoundedKnownToBeSmall{
      .bytes = WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToWire(arena, std::move(src.bytes())),
  };
}

::test_largemessages::BoundedMaybeLarge WireNaturalConversionTraits<::test_largemessages::wire::BoundedMaybeLarge, ::test_largemessages::BoundedMaybeLarge>::ToNatural(::test_largemessages::wire::BoundedMaybeLarge src) {
  return ::test_largemessages::BoundedMaybeLarge(WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToNatural(std::move(src.bytes)));
}
::test_largemessages::wire::BoundedMaybeLarge WireNaturalConversionTraits<::test_largemessages::wire::BoundedMaybeLarge, ::test_largemessages::BoundedMaybeLarge>::ToWire(fidl::AnyArena& arena, ::test_largemessages::BoundedMaybeLarge src) {
  return ::test_largemessages::wire::BoundedMaybeLarge{
      .bytes = WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToWire(arena, std::move(src.bytes())),
  };
}

::test_largemessages::UnboundedMaybeLargeValue WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeValue, ::test_largemessages::UnboundedMaybeLargeValue>::ToNatural(::test_largemessages::wire::UnboundedMaybeLargeValue src) {
  return ::test_largemessages::UnboundedMaybeLargeValue(WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToNatural(std::move(src.bytes)));
}
::test_largemessages::wire::UnboundedMaybeLargeValue WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeValue, ::test_largemessages::UnboundedMaybeLargeValue>::ToWire(fidl::AnyArena& arena, ::test_largemessages::UnboundedMaybeLargeValue src) {
  return ::test_largemessages::wire::UnboundedMaybeLargeValue{
      .bytes = WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToWire(arena, std::move(src.bytes())),
  };
}

#ifdef __Fuchsia__

::test_largemessages::Elements WireNaturalConversionTraits<::test_largemessages::wire::Elements, ::test_largemessages::Elements>::ToNatural(::test_largemessages::wire::Elements src) {
  return ::test_largemessages::Elements{{
      .handle = WireNaturalConversionTraits<::zx::handle, ::zx::handle>::ToNatural(std::move(src.handle)),
      .bytes = WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToNatural(std::move(src.bytes)),
  }};
}
::test_largemessages::wire::Elements WireNaturalConversionTraits<::test_largemessages::wire::Elements, ::test_largemessages::Elements>::ToWire(fidl::AnyArena& arena, ::test_largemessages::Elements src) {
  return ::test_largemessages::wire::Elements{
      .handle = WireNaturalConversionTraits<::zx::handle, ::zx::handle>::ToWire(arena, std::move(src.handle())),
      .bytes = WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToWire(arena, std::move(src.bytes())),
  };
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__

::test_largemessages::UnboundedMaybeLargeResource WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeResource, ::test_largemessages::UnboundedMaybeLargeResource>::ToNatural(::test_largemessages::wire::UnboundedMaybeLargeResource src) {
  return ::test_largemessages::UnboundedMaybeLargeResource(WireNaturalConversionTraits<::fidl::Array<::test_largemessages::wire::Elements, 64>, ::std::array<::test_largemessages::Elements, 64>>::ToNatural(std::move(src.elements)));
}
::test_largemessages::wire::UnboundedMaybeLargeResource WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeResource, ::test_largemessages::UnboundedMaybeLargeResource>::ToWire(fidl::AnyArena& arena, ::test_largemessages::UnboundedMaybeLargeResource src) {
  return ::test_largemessages::wire::UnboundedMaybeLargeResource{
      .elements = WireNaturalConversionTraits<::fidl::Array<::test_largemessages::wire::Elements, 64>, ::std::array<::test_largemessages::Elements, 64>>::ToWire(arena, std::move(src.elements())),
  };
}

#endif  // __Fuchsia__

::test_largemessages::SemiBoundedBelievedToBeSmall WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedBelievedToBeSmall, ::test_largemessages::SemiBoundedBelievedToBeSmall>::ToNatural(::test_largemessages::wire::SemiBoundedBelievedToBeSmall src) {
  switch (src.Which()) {
    case ::test_largemessages::wire::SemiBoundedBelievedToBeSmall::Tag::kBytes:
      return ::test_largemessages::SemiBoundedBelievedToBeSmall::WithBytes(
          WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToNatural(std::move(src.bytes())));
    default:
      return ::test_largemessages::SemiBoundedBelievedToBeSmall(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{});
  }
}
::test_largemessages::wire::SemiBoundedBelievedToBeSmall WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedBelievedToBeSmall, ::test_largemessages::SemiBoundedBelievedToBeSmall>::ToWire(fidl::AnyArena& arena, ::test_largemessages::SemiBoundedBelievedToBeSmall src) {
  switch (src.Which()) {
    case ::test_largemessages::SemiBoundedBelievedToBeSmall::Tag::kBytes:
      return ::test_largemessages::wire::SemiBoundedBelievedToBeSmall::WithBytes(arena,
                                                                                 WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToWire(arena, std::move(src.bytes().value())));
    default:
      return ::test_largemessages::wire::SemiBoundedBelievedToBeSmall();
  }
}

::test_largemessages::SemiBoundedMaybeLarge WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedMaybeLarge, ::test_largemessages::SemiBoundedMaybeLarge>::ToNatural(::test_largemessages::wire::SemiBoundedMaybeLarge src) {
  switch (src.Which()) {
    case ::test_largemessages::wire::SemiBoundedMaybeLarge::Tag::kBytes:
      return ::test_largemessages::SemiBoundedMaybeLarge::WithBytes(
          WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToNatural(std::move(src.bytes())));
    default:
      return ::test_largemessages::SemiBoundedMaybeLarge(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{});
  }
}
::test_largemessages::wire::SemiBoundedMaybeLarge WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedMaybeLarge, ::test_largemessages::SemiBoundedMaybeLarge>::ToWire(fidl::AnyArena& arena, ::test_largemessages::SemiBoundedMaybeLarge src) {
  switch (src.Which()) {
    case ::test_largemessages::SemiBoundedMaybeLarge::Tag::kBytes:
      return ::test_largemessages::wire::SemiBoundedMaybeLarge::WithBytes(arena,
                                                                          WireNaturalConversionTraits<::fidl::VectorView<uint8_t>, ::std::vector<uint8_t>>::ToWire(arena, std::move(src.bytes().value())));
    default:
      return ::test_largemessages::wire::SemiBoundedMaybeLarge();
  }
}

#ifdef __Fuchsia__

::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall>, ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall>>::ToNatural(::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall> src) {
  return ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall>(
      WireNaturalConversionTraits<::test_largemessages::wire::BoundedKnownToBeSmall, ::test_largemessages::BoundedKnownToBeSmall>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall>, ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall> src) {
  return ::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedKnownToBeSmall>(
      WireNaturalConversionTraits<::test_largemessages::wire::BoundedKnownToBeSmall, ::test_largemessages::BoundedKnownToBeSmall>::ToWire(arena, std::move(src)));
}

::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge>, ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge>>::ToNatural(::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge> src) {
  return ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge>(
      WireNaturalConversionTraits<::test_largemessages::wire::BoundedMaybeLarge, ::test_largemessages::BoundedMaybeLarge>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge>, ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge> src) {
  return ::fidl::WireResponse<::test_largemessages::Overflowing::EncodeBoundedMaybeLarge>(
      WireNaturalConversionTraits<::test_largemessages::wire::BoundedMaybeLarge, ::test_largemessages::BoundedMaybeLarge>::ToWire(arena, std::move(src)));
}

::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall>, ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall>>::ToNatural(::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall> src) {
  return ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall>(
      WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedBelievedToBeSmall, ::test_largemessages::SemiBoundedBelievedToBeSmall>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall>, ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall> src) {
  return ::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedBelievedToBeSmall>(
      WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedBelievedToBeSmall, ::test_largemessages::SemiBoundedBelievedToBeSmall>::ToWire(arena, std::move(src)));
}

::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge>, ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge>>::ToNatural(::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge> src) {
  return ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge>(
      WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedMaybeLarge, ::test_largemessages::SemiBoundedMaybeLarge>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge>, ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge> src) {
  return ::fidl::WireResponse<::test_largemessages::Overflowing::EncodeSemiBoundedMaybeLarge>(
      WireNaturalConversionTraits<::test_largemessages::wire::SemiBoundedMaybeLarge, ::test_largemessages::SemiBoundedMaybeLarge>::ToWire(arena, std::move(src)));
}

::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue>, ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue>>::ToNatural(::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue> src) {
  return ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue>(
      WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeValue, ::test_largemessages::UnboundedMaybeLargeValue>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue>, ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue> src) {
  return ::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeValue>(
      WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeValue, ::test_largemessages::UnboundedMaybeLargeValue>::ToWire(arena, std::move(src)));
}

::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource>, ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource>>::ToNatural(::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource> src) {
  return ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource>(
      WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeResource, ::test_largemessages::UnboundedMaybeLargeResource>::ToNatural(std::move(src)));
}
::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource> WireNaturalConversionTraits<::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource>, ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource>>::ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource> src) {
  return ::fidl::WireResponse<::test_largemessages::Overflowing::EncodeUnboundedMaybeLargeResource>(
      WireNaturalConversionTraits<::test_largemessages::wire::UnboundedMaybeLargeResource, ::test_largemessages::UnboundedMaybeLargeResource>::ToWire(arena, std::move(src)));
}

#endif  // __Fuchsia__
#pragma clang diagnostic pop

}  // namespace internal
}  // namespace fidl
