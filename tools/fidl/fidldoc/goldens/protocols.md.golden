<link rel="stylesheet" href="../style.css" />

[TOC]
# test.protocols



## **PROTOCOLS**

## AnotherDiscoverableProtocol {#AnotherDiscoverableProtocol}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=105)*


## ChannelProtocol {#ChannelProtocol}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=47)*


### EventA {#ChannelProtocol.EventA}





#### Response {#ChannelProtocol.EventA_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>a</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
        <tr>
            <td><code>b</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>

### MethodA {#ChannelProtocol.MethodA}




#### Request {#ChannelProtocol.MethodA_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>a</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
        <tr>
            <td><code>b</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>


### MethodB {#ChannelProtocol.MethodB}




#### Request {#ChannelProtocol.MethodB_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>a</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
        <tr>
            <td><code>b</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>


#### Response {#ChannelProtocol.MethodB_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>result</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>

### MutateSocket {#ChannelProtocol.MutateSocket}




#### Request {#ChannelProtocol.MutateSocket_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>a</code></td>
            <td>
                <code>handle&lt;socket&gt;</code>
            </td>
        </tr>
</table>


#### Response {#ChannelProtocol.MutateSocket_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>b</code></td>
            <td>
                <code>handle&lt;socket&gt;</code>
            </td>
        </tr>
</table>

### TakeHandle {#ChannelProtocol.TakeHandle}




#### Request {#ChannelProtocol.TakeHandle_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>h</code></td>
            <td>
                <code>handle&lt;handle&gt;</code>
            </td>
        </tr>
</table>


#### Response {#ChannelProtocol.TakeHandle_Response}

&lt;EMPTY&gt;

## DiscoverableProtocol {#DiscoverableProtocol}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=100)*


### Method {#DiscoverableProtocol.Method}




#### Request {#DiscoverableProtocol.Method_Request}

&lt;EMPTY&gt;


## HandleRightsProtocol {#HandleRightsProtocol}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=107)*


### AnEvent {#HandleRightsProtocol.AnEvent}





#### Response {#HandleRightsProtocol.AnEvent_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>h</code></td>
            <td>
                <code>handle&lt;socket&gt;</code>
            </td>
        </tr>
</table>

### NoResponseMethod {#HandleRightsProtocol.NoResponseMethod}




#### Request {#HandleRightsProtocol.NoResponseMethod_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>h</code></td>
            <td>
                <code>handle&lt;socket&gt;</code>
            </td>
        </tr>
</table>


### ResponseMethod {#HandleRightsProtocol.ResponseMethod}




#### Request {#HandleRightsProtocol.ResponseMethod_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>h</code></td>
            <td>
                <code>handle&lt;socket&gt;</code>
            </td>
        </tr>
</table>


#### Response {#HandleRightsProtocol.ResponseMethod_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>h</code></td>
            <td>
                <code>handle&lt;socket&gt;</code>
            </td>
        </tr>
</table>

## ManyParameters {#ManyParameters}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=146)*


### Fifteen {#ManyParameters.Fifteen}




#### Request {#ManyParameters.Fifteen_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>p1</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p2</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p3</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p4</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p5</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p6</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p7</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p8</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p9</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p10</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p11</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p12</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p13</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p14</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
        <tr>
            <td><code>p15</code></td>
            <td>
                <code>bool</code>
            </td>
        </tr>
</table>


## MethodWithUnion {#MethodWithUnion}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=170)*


### UnionMethod {#MethodWithUnion.UnionMethod}




#### Request {#MethodWithUnion.UnionMethod_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>u</code></td>
            <td>
                <code><a class='link' href='#TheUnion'>TheUnion</a></code>
            </td>
        </tr>
</table>


#### Response {#MethodWithUnion.UnionMethod_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>u</code></td>
            <td>
                <code><a class='link' href='#TheUnion'>TheUnion</a>?</code>
            </td>
        </tr>
</table>

## SyscallProtocol {#SyscallProtocol}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=73)*


### MethodC {#SyscallProtocol.MethodC}




#### Request {#SyscallProtocol.MethodC_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>a</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
        <tr>
            <td><code>b</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>


## Transitional {#Transitional}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=80)*


### Event {#Transitional.Event}





#### Response {#Transitional.Event_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>x</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>

### OneWay {#Transitional.OneWay}




#### Request {#Transitional.OneWay_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>x</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>


### Request {#Transitional.Request}




#### Request {#Transitional.Request_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>x</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>


#### Response {#Transitional.Request_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>y</code></td>
            <td>
                <code>int64</code>
            </td>
        </tr>
</table>

## WithAndWithoutRequestResponse {#WithAndWithoutRequestResponse}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=5)*


### NoRequestEmptyResponse {#WithAndWithoutRequestResponse.NoRequestEmptyResponse}




#### Request {#WithAndWithoutRequestResponse.NoRequestEmptyResponse_Request}

&lt;EMPTY&gt;


#### Response {#WithAndWithoutRequestResponse.NoRequestEmptyResponse_Response}

&lt;EMPTY&gt;

### NoRequestNoResponse {#WithAndWithoutRequestResponse.NoRequestNoResponse}




#### Request {#WithAndWithoutRequestResponse.NoRequestNoResponse_Request}

&lt;EMPTY&gt;


### NoRequestWithResponse {#WithAndWithoutRequestResponse.NoRequestWithResponse}




#### Request {#WithAndWithoutRequestResponse.NoRequestWithResponse_Request}

&lt;EMPTY&gt;


#### Response {#WithAndWithoutRequestResponse.NoRequestWithResponse_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>ret</code></td>
            <td>
                <code>string</code>
            </td>
        </tr>
</table>

### OnEmptyResponse {#WithAndWithoutRequestResponse.OnEmptyResponse}





#### Response {#WithAndWithoutRequestResponse.OnEmptyResponse_Response}

&lt;EMPTY&gt;

### OnWithResponse {#WithAndWithoutRequestResponse.OnWithResponse}





#### Response {#WithAndWithoutRequestResponse.OnWithResponse_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>ret</code></td>
            <td>
                <code>string</code>
            </td>
        </tr>
</table>

### WithRequestEmptyResponse {#WithAndWithoutRequestResponse.WithRequestEmptyResponse}




#### Request {#WithAndWithoutRequestResponse.WithRequestEmptyResponse_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>arg</code></td>
            <td>
                <code>string</code>
            </td>
        </tr>
</table>


#### Response {#WithAndWithoutRequestResponse.WithRequestEmptyResponse_Response}

&lt;EMPTY&gt;

### WithRequestNoResponse {#WithAndWithoutRequestResponse.WithRequestNoResponse}




#### Request {#WithAndWithoutRequestResponse.WithRequestNoResponse_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>arg</code></td>
            <td>
                <code>string</code>
            </td>
        </tr>
</table>


### WithRequestWithResponse {#WithAndWithoutRequestResponse.WithRequestWithResponse}




#### Request {#WithAndWithoutRequestResponse.WithRequestWithResponse_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>arg</code></td>
            <td>
                <code>string</code>
            </td>
        </tr>
</table>


#### Response {#WithAndWithoutRequestResponse.WithRequestWithResponse_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>ret</code></td>
            <td>
                <code>string</code>
            </td>
        </tr>
</table>

## WithErrorSyntax {#WithErrorSyntax}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=33)*


### ErrorAsEnum {#WithErrorSyntax.ErrorAsEnum}




#### Request {#WithErrorSyntax.ErrorAsEnum_Request}

&lt;EMPTY&gt;


#### Response {#WithErrorSyntax.ErrorAsEnum_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>result</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_ErrorAsEnum_Result'>WithErrorSyntax_ErrorAsEnum_Result</a></code>
            </td>
        </tr>
</table>

### ErrorAsPrimitive {#WithErrorSyntax.ErrorAsPrimitive}




#### Request {#WithErrorSyntax.ErrorAsPrimitive_Request}

&lt;EMPTY&gt;


#### Response {#WithErrorSyntax.ErrorAsPrimitive_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>result</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_ErrorAsPrimitive_Result'>WithErrorSyntax_ErrorAsPrimitive_Result</a></code>
            </td>
        </tr>
</table>

### HandleInResult {#WithErrorSyntax.HandleInResult}




#### Request {#WithErrorSyntax.HandleInResult_Request}

&lt;EMPTY&gt;


#### Response {#WithErrorSyntax.HandleInResult_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>result</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_HandleInResult_Result'>WithErrorSyntax_HandleInResult_Result</a></code>
            </td>
        </tr>
</table>

### ResponseAsStruct {#WithErrorSyntax.ResponseAsStruct}




#### Request {#WithErrorSyntax.ResponseAsStruct_Request}

&lt;EMPTY&gt;


#### Response {#WithErrorSyntax.ResponseAsStruct_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>result</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_ResponseAsStruct_Result'>WithErrorSyntax_ResponseAsStruct_Result</a></code>
            </td>
        </tr>
</table>

## WithProtocolEnds {#WithProtocolEnds}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=128)*


### ClientEnds {#WithProtocolEnds.ClientEnds}




#### Request {#WithProtocolEnds.ClientEnds_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>in</code></td>
            <td>
                <code><a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a></code>
            </td>
        </tr>
</table>


#### Response {#WithProtocolEnds.ClientEnds_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>out</code></td>
            <td>
                <code><a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a>?</code>
            </td>
        </tr>
</table>

### ServerEnds {#WithProtocolEnds.ServerEnds}




#### Request {#WithProtocolEnds.ServerEnds_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>in</code></td>
            <td>
                <code>server_end&lt;<a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a>&gt;?</code>
            </td>
        </tr>
</table>


#### Response {#WithProtocolEnds.ServerEnds_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>out</code></td>
            <td>
                <code>server_end&lt;<a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a>&gt;</code>
            </td>
        </tr>
</table>

### StructContainingEnds {#WithProtocolEnds.StructContainingEnds}




#### Request {#WithProtocolEnds.StructContainingEnds_Request}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>in</code></td>
            <td>
                <code><a class='link' href='#ProtocolEnds'>ProtocolEnds</a></code>
            </td>
        </tr>
</table>


#### Response {#WithProtocolEnds.StructContainingEnds_Response}

<table>
    <tr><th>Name</th><th>Type</th></tr>
        <tr>
            <td><code>out</code></td>
            <td>
                <code><a class='link' href='#ProtocolEnds'>ProtocolEnds</a></code>
            </td>
        </tr>
</table>


## **STRUCTS**

### ProtocolEnds [resource](/fuchsia-src/reference/fidl/language/language.md#value-vs-resource){:.fidl-attribute} {#ProtocolEnds data-text="ProtocolEnds"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=121)*

<table>
    <tr><th>Field</th><th>Type</th><th>Description</th><th>Default</th></tr>
        <tr id="ProtocolEnds.client">
            <td><code>client</code></td>
            <td>
                <code><a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a></code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
        <tr id="ProtocolEnds.server">
            <td><code>server</code></td>
            <td>
                <code>server_end&lt;<a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a>&gt;</code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
        <tr id="ProtocolEnds.client_opt">
            <td><code>client_opt</code></td>
            <td>
                <code><a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a>?</code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
        <tr id="ProtocolEnds.server_opt">
            <td><code>server_opt</code></td>
            <td>
                <code>server_end&lt;<a class='link' href='#DiscoverableProtocol'>DiscoverableProtocol</a>&gt;?</code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
</table>

### WithErrorSyntax_ErrorAsEnum_Response  {#WithErrorSyntax_ErrorAsEnum_Response data-text="WithErrorSyntax_ErrorAsEnum_Response"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=40)*

&lt;EMPTY&gt;

### WithErrorSyntax_ErrorAsPrimitive_Response  {#WithErrorSyntax_ErrorAsPrimitive_Response data-text="WithErrorSyntax_ErrorAsPrimitive_Response"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=39)*

&lt;EMPTY&gt;

### WithErrorSyntax_HandleInResult_Response [resource](/fuchsia-src/reference/fidl/language/language.md#value-vs-resource){:.fidl-attribute} {#WithErrorSyntax_HandleInResult_Response data-text="WithErrorSyntax_HandleInResult_Response"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=41)*

<table>
    <tr><th>Field</th><th>Type</th><th>Description</th><th>Default</th></tr>
        <tr id="WithErrorSyntax_HandleInResult_Response.h">
            <td><code>h</code></td>
            <td>
                <code>handle&lt;handle&gt;</code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
</table>

### WithErrorSyntax_ResponseAsStruct_Response  {#WithErrorSyntax_ResponseAsStruct_Response data-text="WithErrorSyntax_ResponseAsStruct_Response"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=34)*

<table>
    <tr><th>Field</th><th>Type</th><th>Description</th><th>Default</th></tr>
        <tr id="WithErrorSyntax_ResponseAsStruct_Response.a">
            <td><code>a</code></td>
            <td>
                <code>int64</code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
        <tr id="WithErrorSyntax_ResponseAsStruct_Response.b">
            <td><code>b</code></td>
            <td>
                <code>int64</code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
        <tr id="WithErrorSyntax_ResponseAsStruct_Response.c">
            <td><code>c</code></td>
            <td>
                <code>int64</code>
            </td>
            <td></td>
            <td>No default</td>
        </tr>
</table>


## **ENUMS**

### ErrorEnum [strict](/fuchsia-src/reference/fidl/language/language.md#strict-vs-flexible){:.fidl-attribute} {#ErrorEnum data-text="ErrorEnum"}
Type: <code>uint32</code>

*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=28)*

<table>
    <tr><th>Name</th><th>Value</th><th>Description</th></tr>
        <tr id="ErrorEnum.ERR_FOO">
<td><h3 id="ErrorEnum.ERR_FOO" class="add-link hide-from-toc">ERR_FOO</h3></td>
            <td><code>1</code></td>
            <td></td>
        </tr>
        <tr id="ErrorEnum.ERR_BAR">
<td><h3 id="ErrorEnum.ERR_BAR" class="add-link hide-from-toc">ERR_BAR</h3></td>
            <td><code>2</code></td>
            <td></td>
        </tr>
</table>



## **UNIONS**

### TheUnion [flexible](/fuchsia-src/reference/fidl/language/language.md#strict-vs-flexible){:.fidl-attribute}  {#TheUnion data-text="TheUnion"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=166)*
<table>
    <tr><th>Ordinal</th><th>Variant</th><th>Type</th><th>Description</th></tr>
        <tr id="TheUnion.v">
<td><h3 id="TheUnion.v" class="add-link hide-from-toc">1</h3></td>
            <td><code>v</code></td>
            <td>
                <code>uint32</code>
            </td>
            <td></td>
        </tr>
</table>

### WithErrorSyntax_ErrorAsEnum_Result [strict](/fuchsia-src/reference/fidl/language/language.md#strict-vs-flexible){:.fidl-attribute}  {#WithErrorSyntax_ErrorAsEnum_Result data-text="WithErrorSyntax_ErrorAsEnum_Result"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=40)*
<table>
    <tr><th>Ordinal</th><th>Variant</th><th>Type</th><th>Description</th></tr>
        <tr id="WithErrorSyntax_ErrorAsEnum_Result.response">
<td><h3 id="WithErrorSyntax_ErrorAsEnum_Result.response" class="add-link hide-from-toc">1</h3></td>
            <td><code>response</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_ErrorAsEnum_Response'>WithErrorSyntax_ErrorAsEnum_Response</a></code>
            </td>
            <td></td>
        </tr>
        <tr id="WithErrorSyntax_ErrorAsEnum_Result.err">
<td><h3 id="WithErrorSyntax_ErrorAsEnum_Result.err" class="add-link hide-from-toc">2</h3></td>
            <td><code>err</code></td>
            <td>
                <code><a class='link' href='#ErrorEnum'>ErrorEnum</a></code>
            </td>
            <td></td>
        </tr>
</table>

### WithErrorSyntax_ErrorAsPrimitive_Result [strict](/fuchsia-src/reference/fidl/language/language.md#strict-vs-flexible){:.fidl-attribute}  {#WithErrorSyntax_ErrorAsPrimitive_Result data-text="WithErrorSyntax_ErrorAsPrimitive_Result"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=39)*
<table>
    <tr><th>Ordinal</th><th>Variant</th><th>Type</th><th>Description</th></tr>
        <tr id="WithErrorSyntax_ErrorAsPrimitive_Result.response">
<td><h3 id="WithErrorSyntax_ErrorAsPrimitive_Result.response" class="add-link hide-from-toc">1</h3></td>
            <td><code>response</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_ErrorAsPrimitive_Response'>WithErrorSyntax_ErrorAsPrimitive_Response</a></code>
            </td>
            <td></td>
        </tr>
        <tr id="WithErrorSyntax_ErrorAsPrimitive_Result.err">
<td><h3 id="WithErrorSyntax_ErrorAsPrimitive_Result.err" class="add-link hide-from-toc">2</h3></td>
            <td><code>err</code></td>
            <td>
                <code>uint32</code>
            </td>
            <td></td>
        </tr>
</table>

### WithErrorSyntax_HandleInResult_Result [strict](/fuchsia-src/reference/fidl/language/language.md#strict-vs-flexible){:.fidl-attribute} [resource](/fuchsia-src/reference/fidl/language/language.md#value-vs-resource){:.fidl-attribute} {#WithErrorSyntax_HandleInResult_Result data-text="WithErrorSyntax_HandleInResult_Result"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=41)*
<table>
    <tr><th>Ordinal</th><th>Variant</th><th>Type</th><th>Description</th></tr>
        <tr id="WithErrorSyntax_HandleInResult_Result.response">
<td><h3 id="WithErrorSyntax_HandleInResult_Result.response" class="add-link hide-from-toc">1</h3></td>
            <td><code>response</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_HandleInResult_Response'>WithErrorSyntax_HandleInResult_Response</a></code>
            </td>
            <td></td>
        </tr>
        <tr id="WithErrorSyntax_HandleInResult_Result.err">
<td><h3 id="WithErrorSyntax_HandleInResult_Result.err" class="add-link hide-from-toc">2</h3></td>
            <td><code>err</code></td>
            <td>
                <code>uint32</code>
            </td>
            <td></td>
        </tr>
</table>

### WithErrorSyntax_ResponseAsStruct_Result [strict](/fuchsia-src/reference/fidl/language/language.md#strict-vs-flexible){:.fidl-attribute}  {#WithErrorSyntax_ResponseAsStruct_Result data-text="WithErrorSyntax_ResponseAsStruct_Result"}
*Defined in [test.protocols/protocols.test.fidl](https://cs.opensource.google/fuchsia/fuchsia/+/main:tools/fidl/fidlc/testdata/protocols.test.fidl;l=34)*
<table>
    <tr><th>Ordinal</th><th>Variant</th><th>Type</th><th>Description</th></tr>
        <tr id="WithErrorSyntax_ResponseAsStruct_Result.response">
<td><h3 id="WithErrorSyntax_ResponseAsStruct_Result.response" class="add-link hide-from-toc">1</h3></td>
            <td><code>response</code></td>
            <td>
                <code><a class='link' href='#WithErrorSyntax_ResponseAsStruct_Response'>WithErrorSyntax_ResponseAsStruct_Response</a></code>
            </td>
            <td></td>
        </tr>
        <tr id="WithErrorSyntax_ResponseAsStruct_Result.err">
<td><h3 id="WithErrorSyntax_ResponseAsStruct_Result.err" class="add-link hide-from-toc">2</h3></td>
            <td><code>err</code></td>
            <td>
                <code>uint32</code>
            </td>
            <td></td>
        </tr>
</table>



