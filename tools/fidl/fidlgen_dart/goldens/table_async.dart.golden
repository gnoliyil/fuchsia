// WARNING: This file is machine generated by fidlgen.
// @dart = 2.12

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions

library fidl_test_table_async;

import 'dart:async' as $async;
import 'dart:core' hide Set;
import 'dart:developer';
import 'dart:typed_data';

import 'package:fidl/fidl.dart' as $fidl;
import 'package:meta/meta.dart';
import 'package:zircon/zircon.dart' as $zircon;

// ignore_for_file: always_specify_types
// ignore_for_file: avoid_positional_boolean_parameters
// ignore_for_file: avoid_returning_null
// ignore_for_file: cascade_invocations
// ignore_for_file: constant_identifier_names
// ignore_for_file: directives_ordering
// ignore_for_file: one_member_abstracts
// ignore_for_file: prefer_constructors_over_static_methods
// ignore_for_file: prefer_single_quotes
// ignore_for_file: public_member_api_docs
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: library_prefixes
// ignore_for_file: prefer_typing_uninitialized_variables
// ignore_for_file: avoid_js_rounded_ints
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: prefer_generic_function_type_aliases
// ignore_for_file: prefer_equal_for_default_values
// ignore_for_file: avoid_catches_without_on_clauses
// ignore_for_file: unused_shown_name
// ignore_for_file: unnecessary_lambdas
// ignore_for_file: comment_references
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: prefer_interpolation_to_compose_strings
// ignore_for_file: override_on_non_overriding_member

class EmptyTable extends $fidl.Table {
  const EmptyTable({
    this.$unknownData,
  });

  EmptyTable._(Map<int, dynamic> argv, this.$unknownData);

  EmptyTable $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return EmptyTable();
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;

  @override
  dynamic $field(int index) {
    switch (index) {
      
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {};
  }

  static EmptyTable _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      EmptyTable._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<EmptyTable> kEmptyTable_Type =
    $fidl.TableType<EmptyTable>(
  inlineSize: 16,
  members: [],
  ctor: EmptyTable._ctor,
  resource: false,
);

class ExtensionTable extends $fidl.Table {
  const ExtensionTable({
    this.$unknownData,
  });

  ExtensionTable._(Map<int, dynamic> argv, this.$unknownData);

  ExtensionTable $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return ExtensionTable();
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;

  @override
  dynamic $field(int index) {
    switch (index) {
      
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {};
  }

  static ExtensionTable _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      ExtensionTable._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<ExtensionTable> kExtensionTable_Type =
    $fidl.TableType<ExtensionTable>(
  inlineSize: 16,
  members: [],
  ctor: ExtensionTable._ctor,
  resource: false,
);

class NewerSimpleTable extends $fidl.Table {
  const NewerSimpleTable({
    this.$unknownData,
    this.x,
    this.y,
    this.z,
  });

  NewerSimpleTable._(Map<int, dynamic> argv, this.$unknownData)
      : x = argv[1],
        y = argv[5],
        z = argv[6];

  NewerSimpleTable $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> x = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> y = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> z = const $fidl.OptionalNullable.undefined(),
  }) {
    return NewerSimpleTable(
      x: x.or(this.x),
      y: y.or(this.y),
      z: z.or(this.z),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? x;
  final int? y;
  final int? z;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return x;
      case 4:
        return y;
      case 5:
        return z;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: x,
      5: y,
      6: z,
    };
  }

  static NewerSimpleTable _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      NewerSimpleTable._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<NewerSimpleTable> kNewerSimpleTable_Type =
    $fidl.TableType<NewerSimpleTable>(
  inlineSize: 16,
  members: [
    $fidl.Int64Type(),
    null,
    null,
    null,
    $fidl.Int64Type(),
    $fidl.Int64Type(),
  ],
  ctor: NewerSimpleTable._ctor,
  resource: false,
);

class OlderSimpleTable extends $fidl.Table {
  const OlderSimpleTable({
    this.$unknownData,
    this.x,
  });

  OlderSimpleTable._(Map<int, dynamic> argv, this.$unknownData) : x = argv[1];

  OlderSimpleTable $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> x = const $fidl.OptionalNullable.undefined(),
  }) {
    return OlderSimpleTable(
      x: x.or(this.x),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? x;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return x;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: x,
    };
  }

  static OlderSimpleTable _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      OlderSimpleTable._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<OlderSimpleTable> kOlderSimpleTable_Type =
    $fidl.TableType<OlderSimpleTable>(
  inlineSize: 16,
  members: [
    $fidl.Int64Type(),
  ],
  ctor: OlderSimpleTable._ctor,
  resource: false,
);

class ReverseOrdinalTable extends $fidl.Table {
  const ReverseOrdinalTable({
    this.$unknownData,
    this.z,
    this.y,
    this.x,
  });

  ReverseOrdinalTable._(Map<int, dynamic> argv, this.$unknownData)
      : z = argv[1],
        y = argv[2],
        x = argv[3];

  ReverseOrdinalTable $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> z = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> y = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> x = const $fidl.OptionalNullable.undefined(),
  }) {
    return ReverseOrdinalTable(
      z: z.or(this.z),
      y: y.or(this.y),
      x: x.or(this.x),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? z;
  final int? y;
  final int? x;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return z;
      case 1:
        return y;
      case 2:
        return x;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: z,
      2: y,
      3: x,
    };
  }

  static ReverseOrdinalTable _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      ReverseOrdinalTable._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<ReverseOrdinalTable> kReverseOrdinalTable_Type =
    $fidl.TableType<ReverseOrdinalTable>(
  inlineSize: 16,
  members: [
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
  ],
  ctor: ReverseOrdinalTable._ctor,
  resource: false,
);

class SimpleTable extends $fidl.Table {
  const SimpleTable({
    this.$unknownData,
    this.x,
    this.y,
  });

  SimpleTable._(Map<int, dynamic> argv, this.$unknownData)
      : x = argv[1],
        y = argv[5];

  SimpleTable $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> x = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> y = const $fidl.OptionalNullable.undefined(),
  }) {
    return SimpleTable(
      x: x.or(this.x),
      y: y.or(this.y),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? x;
  final int? y;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return x;
      case 4:
        return y;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: x,
      5: y,
    };
  }

  static SimpleTable _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      SimpleTable._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<SimpleTable> kSimpleTable_Type =
    $fidl.TableType<SimpleTable>(
  inlineSize: 16,
  members: [
    $fidl.Int64Type(),
    null,
    null,
    null,
    $fidl.Int64Type(),
  ],
  ctor: SimpleTable._ctor,
  resource: false,
);

class SixtyFourOrdinalTable extends $fidl.Table {
  const SixtyFourOrdinalTable({
    this.$unknownData,
    this.v1,
    this.v2,
    this.v3,
    this.v4,
    this.v5,
    this.v6,
    this.v7,
    this.v8,
    this.v9,
    this.v10,
    this.v11,
    this.v12,
    this.v13,
    this.v14,
    this.v15,
    this.v16,
    this.v17,
    this.v18,
    this.v19,
    this.v20,
    this.v21,
    this.v22,
    this.v23,
    this.v24,
    this.v25,
    this.v26,
    this.v27,
    this.v28,
    this.v29,
    this.v30,
    this.v31,
    this.v32,
    this.v33,
    this.v34,
    this.v35,
    this.v36,
    this.v37,
    this.v38,
    this.v39,
    this.v40,
    this.v41,
    this.v42,
    this.v43,
    this.v44,
    this.v45,
    this.v46,
    this.v47,
    this.v48,
    this.v49,
    this.v50,
    this.v51,
    this.v52,
    this.v53,
    this.v54,
    this.v55,
    this.v56,
    this.v57,
    this.v58,
    this.v59,
    this.v60,
    this.v61,
    this.v62,
    this.v63,
    this.v64,
  });

  SixtyFourOrdinalTable._(Map<int, dynamic> argv, this.$unknownData)
      : v1 = argv[1],
        v2 = argv[2],
        v3 = argv[3],
        v4 = argv[4],
        v5 = argv[5],
        v6 = argv[6],
        v7 = argv[7],
        v8 = argv[8],
        v9 = argv[9],
        v10 = argv[10],
        v11 = argv[11],
        v12 = argv[12],
        v13 = argv[13],
        v14 = argv[14],
        v15 = argv[15],
        v16 = argv[16],
        v17 = argv[17],
        v18 = argv[18],
        v19 = argv[19],
        v20 = argv[20],
        v21 = argv[21],
        v22 = argv[22],
        v23 = argv[23],
        v24 = argv[24],
        v25 = argv[25],
        v26 = argv[26],
        v27 = argv[27],
        v28 = argv[28],
        v29 = argv[29],
        v30 = argv[30],
        v31 = argv[31],
        v32 = argv[32],
        v33 = argv[33],
        v34 = argv[34],
        v35 = argv[35],
        v36 = argv[36],
        v37 = argv[37],
        v38 = argv[38],
        v39 = argv[39],
        v40 = argv[40],
        v41 = argv[41],
        v42 = argv[42],
        v43 = argv[43],
        v44 = argv[44],
        v45 = argv[45],
        v46 = argv[46],
        v47 = argv[47],
        v48 = argv[48],
        v49 = argv[49],
        v50 = argv[50],
        v51 = argv[51],
        v52 = argv[52],
        v53 = argv[53],
        v54 = argv[54],
        v55 = argv[55],
        v56 = argv[56],
        v57 = argv[57],
        v58 = argv[58],
        v59 = argv[59],
        v60 = argv[60],
        v61 = argv[61],
        v62 = argv[62],
        v63 = argv[63],
        v64 = argv[64];

  SixtyFourOrdinalTable $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v1 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v2 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v3 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v4 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v5 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v6 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v7 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v8 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v9 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v10 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v11 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v12 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v13 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v14 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v15 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v16 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v17 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v18 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v19 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v20 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v21 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v22 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v23 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v24 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v25 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v26 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v27 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v28 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v29 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v30 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v31 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v32 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v33 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v34 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v35 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v36 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v37 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v38 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v39 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v40 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v41 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v42 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v43 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v44 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v45 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v46 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v47 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v48 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v49 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v50 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v51 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v52 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v53 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v54 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v55 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v56 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v57 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v58 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v59 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v60 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v61 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v62 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> v63 = const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<ExtensionTable> v64 =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return SixtyFourOrdinalTable(
      v1: v1.or(this.v1),
      v2: v2.or(this.v2),
      v3: v3.or(this.v3),
      v4: v4.or(this.v4),
      v5: v5.or(this.v5),
      v6: v6.or(this.v6),
      v7: v7.or(this.v7),
      v8: v8.or(this.v8),
      v9: v9.or(this.v9),
      v10: v10.or(this.v10),
      v11: v11.or(this.v11),
      v12: v12.or(this.v12),
      v13: v13.or(this.v13),
      v14: v14.or(this.v14),
      v15: v15.or(this.v15),
      v16: v16.or(this.v16),
      v17: v17.or(this.v17),
      v18: v18.or(this.v18),
      v19: v19.or(this.v19),
      v20: v20.or(this.v20),
      v21: v21.or(this.v21),
      v22: v22.or(this.v22),
      v23: v23.or(this.v23),
      v24: v24.or(this.v24),
      v25: v25.or(this.v25),
      v26: v26.or(this.v26),
      v27: v27.or(this.v27),
      v28: v28.or(this.v28),
      v29: v29.or(this.v29),
      v30: v30.or(this.v30),
      v31: v31.or(this.v31),
      v32: v32.or(this.v32),
      v33: v33.or(this.v33),
      v34: v34.or(this.v34),
      v35: v35.or(this.v35),
      v36: v36.or(this.v36),
      v37: v37.or(this.v37),
      v38: v38.or(this.v38),
      v39: v39.or(this.v39),
      v40: v40.or(this.v40),
      v41: v41.or(this.v41),
      v42: v42.or(this.v42),
      v43: v43.or(this.v43),
      v44: v44.or(this.v44),
      v45: v45.or(this.v45),
      v46: v46.or(this.v46),
      v47: v47.or(this.v47),
      v48: v48.or(this.v48),
      v49: v49.or(this.v49),
      v50: v50.or(this.v50),
      v51: v51.or(this.v51),
      v52: v52.or(this.v52),
      v53: v53.or(this.v53),
      v54: v54.or(this.v54),
      v55: v55.or(this.v55),
      v56: v56.or(this.v56),
      v57: v57.or(this.v57),
      v58: v58.or(this.v58),
      v59: v59.or(this.v59),
      v60: v60.or(this.v60),
      v61: v61.or(this.v61),
      v62: v62.or(this.v62),
      v63: v63.or(this.v63),
      v64: v64.or(this.v64),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? v1;
  final int? v2;
  final int? v3;
  final int? v4;
  final int? v5;
  final int? v6;
  final int? v7;
  final int? v8;
  final int? v9;
  final int? v10;
  final int? v11;
  final int? v12;
  final int? v13;
  final int? v14;
  final int? v15;
  final int? v16;
  final int? v17;
  final int? v18;
  final int? v19;
  final int? v20;
  final int? v21;
  final int? v22;
  final int? v23;
  final int? v24;
  final int? v25;
  final int? v26;
  final int? v27;
  final int? v28;
  final int? v29;
  final int? v30;
  final int? v31;
  final int? v32;
  final int? v33;
  final int? v34;
  final int? v35;
  final int? v36;
  final int? v37;
  final int? v38;
  final int? v39;
  final int? v40;
  final int? v41;
  final int? v42;
  final int? v43;
  final int? v44;
  final int? v45;
  final int? v46;
  final int? v47;
  final int? v48;
  final int? v49;
  final int? v50;
  final int? v51;
  final int? v52;
  final int? v53;
  final int? v54;
  final int? v55;
  final int? v56;
  final int? v57;
  final int? v58;
  final int? v59;
  final int? v60;
  final int? v61;
  final int? v62;
  final int? v63;
  final ExtensionTable? v64;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return v1;
      case 1:
        return v2;
      case 2:
        return v3;
      case 3:
        return v4;
      case 4:
        return v5;
      case 5:
        return v6;
      case 6:
        return v7;
      case 7:
        return v8;
      case 8:
        return v9;
      case 9:
        return v10;
      case 10:
        return v11;
      case 11:
        return v12;
      case 12:
        return v13;
      case 13:
        return v14;
      case 14:
        return v15;
      case 15:
        return v16;
      case 16:
        return v17;
      case 17:
        return v18;
      case 18:
        return v19;
      case 19:
        return v20;
      case 20:
        return v21;
      case 21:
        return v22;
      case 22:
        return v23;
      case 23:
        return v24;
      case 24:
        return v25;
      case 25:
        return v26;
      case 26:
        return v27;
      case 27:
        return v28;
      case 28:
        return v29;
      case 29:
        return v30;
      case 30:
        return v31;
      case 31:
        return v32;
      case 32:
        return v33;
      case 33:
        return v34;
      case 34:
        return v35;
      case 35:
        return v36;
      case 36:
        return v37;
      case 37:
        return v38;
      case 38:
        return v39;
      case 39:
        return v40;
      case 40:
        return v41;
      case 41:
        return v42;
      case 42:
        return v43;
      case 43:
        return v44;
      case 44:
        return v45;
      case 45:
        return v46;
      case 46:
        return v47;
      case 47:
        return v48;
      case 48:
        return v49;
      case 49:
        return v50;
      case 50:
        return v51;
      case 51:
        return v52;
      case 52:
        return v53;
      case 53:
        return v54;
      case 54:
        return v55;
      case 55:
        return v56;
      case 56:
        return v57;
      case 57:
        return v58;
      case 58:
        return v59;
      case 59:
        return v60;
      case 60:
        return v61;
      case 61:
        return v62;
      case 62:
        return v63;
      case 63:
        return v64;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: v1,
      2: v2,
      3: v3,
      4: v4,
      5: v5,
      6: v6,
      7: v7,
      8: v8,
      9: v9,
      10: v10,
      11: v11,
      12: v12,
      13: v13,
      14: v14,
      15: v15,
      16: v16,
      17: v17,
      18: v18,
      19: v19,
      20: v20,
      21: v21,
      22: v22,
      23: v23,
      24: v24,
      25: v25,
      26: v26,
      27: v27,
      28: v28,
      29: v29,
      30: v30,
      31: v31,
      32: v32,
      33: v33,
      34: v34,
      35: v35,
      36: v36,
      37: v37,
      38: v38,
      39: v39,
      40: v40,
      41: v41,
      42: v42,
      43: v43,
      44: v44,
      45: v45,
      46: v46,
      47: v47,
      48: v48,
      49: v49,
      50: v50,
      51: v51,
      52: v52,
      53: v53,
      54: v54,
      55: v55,
      56: v56,
      57: v57,
      58: v58,
      59: v59,
      60: v60,
      61: v61,
      62: v62,
      63: v63,
      64: v64,
    };
  }

  static SixtyFourOrdinalTable _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      SixtyFourOrdinalTable._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<SixtyFourOrdinalTable> kSixtyFourOrdinalTable_Type =
    $fidl.TableType<SixtyFourOrdinalTable>(
  inlineSize: 16,
  members: [
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    $fidl.Int64Type(),
    kExtensionTable_Type,
  ],
  ctor: SixtyFourOrdinalTable._ctor,
  resource: false,
);

class TableWithAttributes extends $fidl.Table {
  const TableWithAttributes({
    this.$unknownData,
    this.x,
  });

  TableWithAttributes._(Map<int, dynamic> argv, this.$unknownData)
      : x = argv[1];

  TableWithAttributes $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> x = const $fidl.OptionalNullable.undefined(),
  }) {
    return TableWithAttributes(
      x: x.or(this.x),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? x;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return x;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: x,
    };
  }

  static TableWithAttributes _ctor(Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      TableWithAttributes._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<TableWithAttributes> kTableWithAttributes_Type =
    $fidl.TableType<TableWithAttributes>(
  inlineSize: 16,
  members: [
    $fidl.Int64Type(),
  ],
  ctor: TableWithAttributes._ctor,
  resource: false,
);
