// WARNING: This file is machine generated by fidlgen.
// @dart = 2.12

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions
// fidl_experiment = zx_select_case_sensitivity

library fidl_test_errorsyntax_test;

import 'dart:async' as $async;
import 'dart:core' hide Error, Future, Match, Set, Stream, Type;
import 'dart:typed_data';

import 'package:fidl/fidl.dart' as $fidl;
import 'package:meta/meta.dart';
import 'package:zircon/zircon.dart' as $zircon;

import 'package:fidl_test_errorsyntax_parent/fidl_async.dart'
    as lib$test_errorsyntax_parent;
import './fidl_async.dart';

// ignore_for_file: always_specify_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: directives_ordering
// ignore_for_file: one_member_abstracts
// ignore_for_file: public_member_api_docs
// ignore_for_file: unused_import
// ignore_for_file: library_prefixes
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides

class ExampleUseOfErrorSyntax$TestBase extends ExampleUseOfErrorSyntax {
  @override
  $async.Future<int> composedCallWhichMayFail(String s) {
    return $async.Future.error(
        UnimplementedError(
            r'composedCallWhichMayFail not implemented on ExampleUseOfErrorSyntax test base. Please implement.'),
        StackTrace.current);
  }

  @override
  $async.Future<int> callWhichMayFail(String s) {
    return $async.Future.error(
        UnimplementedError(
            r'callWhichMayFail not implemented on ExampleUseOfErrorSyntax test base. Please implement.'),
        StackTrace.current);
  }
}
