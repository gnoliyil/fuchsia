// WARNING: This file is machine generated by fidlgen_dart.
// @dart = 2.12

library fidl_test_unknowninteractions_async;

import 'dart:async' as $async;
import 'dart:core' hide Set;
import 'dart:developer';
import 'dart:typed_data';

import 'package:fidl/fidl.dart' as $fidl;
import 'package:meta/meta.dart';
import 'package:zircon/zircon.dart' as $zircon;

// ignore_for_file: always_specify_types
// ignore_for_file: avoid_positional_boolean_parameters
// ignore_for_file: avoid_returning_null
// ignore_for_file: cascade_invocations
// ignore_for_file: constant_identifier_names
// ignore_for_file: directives_ordering
// ignore_for_file: one_member_abstracts
// ignore_for_file: prefer_constructors_over_static_methods
// ignore_for_file: prefer_single_quotes
// ignore_for_file: public_member_api_docs
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: library_prefixes
// ignore_for_file: prefer_typing_uninitialized_variables
// ignore_for_file: avoid_js_rounded_ints
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: prefer_generic_function_type_aliases
// ignore_for_file: prefer_equal_for_default_values
// ignore_for_file: avoid_catches_without_on_clauses
// ignore_for_file: unused_shown_name
// ignore_for_file: unnecessary_lambdas
// ignore_for_file: comment_references
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: prefer_interpolation_to_compose_strings
// ignore_for_file: override_on_non_overriding_member

enum UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int,
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTag>
    _UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTag
      .someField,
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse
    extends $fidl.Union {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTag_map[
          _ordinal] ??
      UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponseTag
          .$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse_Type =
    $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResultTag>
    _UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResultTag_map = {
  1: UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResultTag.response,
  2: UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResultTag.err,
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult.withResponse(
      UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResultTag get $tag =>
      _UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int,
        UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResultTag>
    _UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResultTag_map = {
  1: UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResultTag
      .response,
  2: UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResultTag.err,
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int,
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResultTag>
    _UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResultTag_map = {
  1: UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResultTag
      .response,
  2: UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResultTag.err,
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult.withResponse(
      UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int,
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponseTag>
    _UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponseTag_map =
    {
  1: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponseTag
      .someField,
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponseTag
          .$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse
      _ctor(int ordinal, Object data) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int,
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResultTag>
    _UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResultTag_map = {
  1: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResultTag
      .response,
  2: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResultTag.err,
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult.withResponse(
      UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarDriverProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTag>
    _UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTag_map = {
  1: UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTag.someField,
};

class UnknownInteractionsAjarProtocolFlexibleEventUnionRequest
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTag get $tag =>
      _UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTag_map[
          _ordinal] ??
      UnknownInteractionsAjarProtocolFlexibleEventUnionRequestTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolFlexibleEventUnionRequest _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionRequest._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>
    kUnknownInteractionsAjarProtocolFlexibleEventUnionRequest_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>
    kUnknownInteractionsAjarProtocolFlexibleEventUnionRequest_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictEventUnionRequestTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsAjarProtocolStrictEventUnionRequestTag>
    _UnknownInteractionsAjarProtocolStrictEventUnionRequestTag_map = {
  1: UnknownInteractionsAjarProtocolStrictEventUnionRequestTag.someField,
};

class UnknownInteractionsAjarProtocolStrictEventUnionRequest
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictEventUnionRequest.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarProtocolStrictEventUnionRequest.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarProtocolStrictEventUnionRequest._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictEventUnionRequestTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictEventUnionRequestTag_map[
          _ordinal] ??
      UnknownInteractionsAjarProtocolStrictEventUnionRequestTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictEventUnionRequest _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictEventUnionRequest._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventUnionRequest>
    kUnknownInteractionsAjarProtocolStrictEventUnionRequest_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventUnionRequest>
    kUnknownInteractionsAjarProtocolStrictEventUnionRequest_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTag>
    _UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTag.someField,
};

class UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTag_map[
          _ordinal] ??
      UnknownInteractionsAjarProtocolStrictTwoWayUnionResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsAjarProtocolStrictTwoWayUnionResponse_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsAjarProtocolStrictTwoWayUnionResponse_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarProtocolFlexibleEventErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolFlexibleEventErrResultTag>
    _UnknownInteractionsAjarProtocolFlexibleEventErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolFlexibleEventErrResultTag.response,
  2: UnknownInteractionsAjarProtocolFlexibleEventErrResultTag.err,
};

class UnknownInteractionsAjarProtocolFlexibleEventErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolFlexibleEventErrResult.withResponse(
      UnknownInteractionsAjarProtocolFlexibleEventErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolFlexibleEventErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolFlexibleEventErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolFlexibleEventErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolFlexibleEventErrResultTag_map[_ordinal]!;

  UnknownInteractionsAjarProtocolFlexibleEventErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolFlexibleEventErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolFlexibleEventErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolFlexibleEventErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolFlexibleEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag>
    _UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag.response,
  2: UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag.err,
};

class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult.withResponse(
      UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Result_Type = $fidl
        .UnionType<UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag>
    _UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag.response,
  2: UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag.err,
};

class UnknownInteractionsAjarProtocolFlexibleEventTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult.withResponse(
      UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolFlexibleEventTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolFlexibleEventTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponseTag>
    _UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponseTag_map = {
  1: UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponseTag.someField,
};

class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponseTag get $tag =>
      _UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>
    kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>
    kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag>
    _UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag.response,
  2: UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag.err,
};

class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult.withResponse(
      UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>
    kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictEventErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictEventErrResultTag>
    _UnknownInteractionsAjarProtocolStrictEventErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictEventErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictEventErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictEventErrResult extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictEventErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictEventErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictEventErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictEventErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictEventErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictEventErrResultTag_map[_ordinal]!;

  UnknownInteractionsAjarProtocolStrictEventErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictEventErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictEventErrResult._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsAjarProtocolStrictEventErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventErr_Result_OptType = $fidl
        .NullableUnionType<UnknownInteractionsAjarProtocolStrictEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag>
    _UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictEventFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictEventFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictEventFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictEventTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictEventTableErrResultTag>
    _UnknownInteractionsAjarProtocolStrictEventTableErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictEventTableErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictEventTableErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictEventTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictEventTableErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictEventTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictEventTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictEventTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictEventTableErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictEventTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolStrictEventTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictEventTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictEventTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventTableErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventTableErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictEventUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsAjarProtocolStrictEventUnionErrResponseTag>
    _UnknownInteractionsAjarProtocolStrictEventUnionErrResponseTag_map = {
  1: UnknownInteractionsAjarProtocolStrictEventUnionErrResponseTag.someField,
};

class UnknownInteractionsAjarProtocolStrictEventUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictEventUnionErrResponseTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictEventUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsAjarProtocolStrictEventUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictEventUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictEventUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>
    kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Response_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>
    kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag>
    _UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictEventUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictEventUnionErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictEventUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictEventUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictEventUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictEventUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictEventUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventUnionErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventUnionErrResult>
    kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag>
    _UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictTwoWayErrResult extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictTwoWayErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictTwoWayErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictTwoWayErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag_map[_ordinal]!;

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictTwoWayErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsAjarProtocolStrictTwoWayErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag>
    _UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag>
    _UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponseTag>
    _UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponseTag_map = {
  1: UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponseTag.someField,
};

class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Response_Type = $fidl
        .UnionType<UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag>
    _UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag_map = {
  1: UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag.response,
  2: UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag.err,
};

class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult.withResponse(
      UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int,
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTag>
    _UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTag
      .someField,
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse
    extends $fidl.Union {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTag_map[
          _ordinal] ??
      UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponseTag
          .$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResultTag>
    _UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResultTag_map = {
  1: UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResultTag.response,
  2: UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResultTag.err,
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult.withResponse(
      UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResultTag get $tag =>
      _UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int,
        UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResultTag>
    _UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResultTag_map =
    {
  1: UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResultTag
      .response,
  2: UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResultTag.err,
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
          value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult
      _ctor(int ordinal, Object data) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor:
      UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor:
      UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int,
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResultTag>
    _UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResultTag_map =
    {
  1: UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResultTag
      .response,
  2: UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResultTag.err,
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult.withResponse(
      UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult
      _ctor(int ordinal, Object data) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int,
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponseTag>
    _UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponseTag_map =
    {
  1: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponseTag
      .someField,
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponseTag
          .$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse
      _ctor(int ordinal, Object data) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse
        ._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor:
      UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor:
      UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int,
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResultTag>
    _UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResultTag_map =
    {
  1: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResultTag
      .response,
  2: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResultTag.err,
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult.withResponse(
      UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult
      _ctor(int ordinal, Object data) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedDriverProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictEventUnionRequestTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsClosedProtocolStrictEventUnionRequestTag>
    _UnknownInteractionsClosedProtocolStrictEventUnionRequestTag_map = {
  1: UnknownInteractionsClosedProtocolStrictEventUnionRequestTag.someField,
};

class UnknownInteractionsClosedProtocolStrictEventUnionRequest
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictEventUnionRequest.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsClosedProtocolStrictEventUnionRequest.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsClosedProtocolStrictEventUnionRequest._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictEventUnionRequestTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictEventUnionRequestTag_map[
          _ordinal] ??
      UnknownInteractionsClosedProtocolStrictEventUnionRequestTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictEventUnionRequest _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictEventUnionRequest._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsClosedProtocolStrictEventUnionRequest>
    kUnknownInteractionsClosedProtocolStrictEventUnionRequest_Type =
    $fidl.UnionType<UnknownInteractionsClosedProtocolStrictEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventUnionRequest>
    kUnknownInteractionsClosedProtocolStrictEventUnionRequest_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTag>
    _UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTag.someField,
};

class UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTag_map[
          _ordinal] ??
      UnknownInteractionsClosedProtocolStrictTwoWayUnionResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsClosedProtocolStrictTwoWayUnionResponse_Type =
    $fidl.UnionType<UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsClosedProtocolStrictTwoWayUnionResponse_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictEventErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictEventErrResultTag>
    _UnknownInteractionsClosedProtocolStrictEventErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictEventErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictEventErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictEventErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictEventErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictEventErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictEventErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictEventErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictEventErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictEventErrResultTag_map[_ordinal]!;

  UnknownInteractionsClosedProtocolStrictEventErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictEventErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictEventErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsClosedProtocolStrictEventErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsClosedProtocolStrictEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag>
    _UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictEventFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictEventFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictEventFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Result_Type = $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictEventTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictEventTableErrResultTag>
    _UnknownInteractionsClosedProtocolStrictEventTableErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictEventTableErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictEventTableErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictEventTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictEventTableErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictEventTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictEventTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictEventTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictEventTableErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictEventTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedProtocolStrictEventTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictEventTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictEventTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictEventTableErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsClosedProtocolStrictEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventTableErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictEventUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsClosedProtocolStrictEventUnionErrResponseTag>
    _UnknownInteractionsClosedProtocolStrictEventUnionErrResponseTag_map = {
  1: UnknownInteractionsClosedProtocolStrictEventUnionErrResponseTag.someField,
};

class UnknownInteractionsClosedProtocolStrictEventUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictEventUnionErrResponseTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictEventUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsClosedProtocolStrictEventUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictEventUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictEventUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>
    kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>
    kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag>
    _UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictEventUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictEventUnionErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictEventUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictEventUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictEventUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictEventUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictEventUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictEventUnionErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsClosedProtocolStrictEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventUnionErrResult>
    kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag>
    _UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictTwoWayErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictTwoWayErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictTwoWayErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictTwoWayErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag_map[_ordinal]!;

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictTwoWayErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsClosedProtocolStrictTwoWayErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsClosedProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag>
    _UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag>
    _UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Result_Type = $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponseTag>
    _UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponseTag_map = {
  1: UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponseTag.someField,
};

class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag>
    _UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag_map = {
  1: UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag.response,
  2: UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag.err,
};

class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult.withResponse(
      UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Result_Type = $fidl
        .UnionType<UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTag>
    _UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTag.someField,
};

class UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTag_map[
          _ordinal] ??
      UnknownInteractionsDriverProtocolStrictTwoWayUnionResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsDriverProtocolStrictTwoWayUnionResponse_Type =
    $fidl.UnionType<UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsDriverProtocolStrictTwoWayUnionResponse_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag.response,
  2: UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag.err,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag.transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int,
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag.response,
  2: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag.err,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag
      .transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResultTag.response,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResultTag
      .transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayFields_Result_Type = $fidl
        .UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayFields_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayFields_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayFields_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag.response,
  2: UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag.err,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag
      .transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayTableResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayTableResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayTableResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayTableResultTag.response,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayTableResultTag.transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayTableResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayTable_Result_Type =
    $fidl.UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayTable_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayTable_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayTable_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int,
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponseTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponseTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponseTag
      .someField,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponseTag
          .$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag.response,
  2: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag.err,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag
      .transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse?
      get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponseTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponseTag.someField,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponseTag_map[
          _ordinal] ??
      UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResultTag.response,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResultTag.transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_Result_Type =
    $fidl.UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWayUnion_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolFlexibleTwoWayResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsDriverProtocolFlexibleTwoWayResultTag>
    _UnknownInteractionsDriverProtocolFlexibleTwoWayResultTag_map = {
  1: UnknownInteractionsDriverProtocolFlexibleTwoWayResultTag.response,
  3: UnknownInteractionsDriverProtocolFlexibleTwoWayResultTag.transportErr,
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayResult.withResponse(
      UnknownInteractionsDriverProtocolFlexibleTwoWayResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolFlexibleTwoWayResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsDriverProtocolFlexibleTwoWayResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolFlexibleTwoWayResultTag get $tag =>
      _UnknownInteractionsDriverProtocolFlexibleTwoWayResultTag_map[_ordinal]!;

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolFlexibleTwoWayResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWay_Result_Type =
    $fidl.UnionType<UnknownInteractionsDriverProtocolFlexibleTwoWayResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWay_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayResult>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWay_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_FlexibleTwoWay_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolStrictTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsDriverProtocolStrictTwoWayErrResultTag>
    _UnknownInteractionsDriverProtocolStrictTwoWayErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolStrictTwoWayErrResultTag.response,
  2: UnknownInteractionsDriverProtocolStrictTwoWayErrResultTag.err,
};

class UnknownInteractionsDriverProtocolStrictTwoWayErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolStrictTwoWayErrResult.withResponse(
      UnknownInteractionsDriverProtocolStrictTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolStrictTwoWayErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsDriverProtocolStrictTwoWayErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolStrictTwoWayErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolStrictTwoWayErrResultTag_map[_ordinal]!;

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolStrictTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolStrictTwoWayErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsDriverProtocolStrictTwoWayErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsDriverProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResultTag>
    _UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResultTag.response,
  2: UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResultTag.err,
};

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolStrictTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsDriverProtocolStrictTwoWayTableErrResultTag>
    _UnknownInteractionsDriverProtocolStrictTwoWayTableErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolStrictTwoWayTableErrResultTag.response,
  2: UnknownInteractionsDriverProtocolStrictTwoWayTableErrResultTag.err,
};

class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult.withResponse(
      UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolStrictTwoWayTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayTableErr_Result_Type = $fidl
        .UnionType<UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponseTag>
    _UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponseTag_map = {
  1: UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponseTag.someField,
};

class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_Response_Type =
    $fidl.UnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResultTag>
    _UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResultTag_map = {
  1: UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResultTag.response,
  2: UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResultTag.err,
};

class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult.withResponse(
      UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .UnionType<UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_Result_Type = $fidl
        .UnionType<UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsDriverProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleEventUnionRequestTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolFlexibleEventUnionRequestTag>
    _UnknownInteractionsProtocolFlexibleEventUnionRequestTag_map = {
  1: UnknownInteractionsProtocolFlexibleEventUnionRequestTag.someField,
};

class UnknownInteractionsProtocolFlexibleEventUnionRequest extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleEventUnionRequest.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolFlexibleEventUnionRequest.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolFlexibleEventUnionRequest._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleEventUnionRequestTag get $tag =>
      _UnknownInteractionsProtocolFlexibleEventUnionRequestTag_map[_ordinal] ??
      UnknownInteractionsProtocolFlexibleEventUnionRequestTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleEventUnionRequest _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleEventUnionRequest._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventUnionRequest>
    kUnknownInteractionsProtocolFlexibleEventUnionRequest_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolFlexibleEventUnionRequest>
    kUnknownInteractionsProtocolFlexibleEventUnionRequest_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolStrictEventUnionRequestTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolStrictEventUnionRequestTag>
    _UnknownInteractionsProtocolStrictEventUnionRequestTag_map = {
  1: UnknownInteractionsProtocolStrictEventUnionRequestTag.someField,
};

class UnknownInteractionsProtocolStrictEventUnionRequest extends $fidl.Union {
  const UnknownInteractionsProtocolStrictEventUnionRequest.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolStrictEventUnionRequest.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolStrictEventUnionRequest._(int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictEventUnionRequestTag get $tag =>
      _UnknownInteractionsProtocolStrictEventUnionRequestTag_map[_ordinal] ??
      UnknownInteractionsProtocolStrictEventUnionRequestTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictEventUnionRequest _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictEventUnionRequest._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictEventUnionRequest>
    kUnknownInteractionsProtocolStrictEventUnionRequest_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolStrictEventUnionRequest>
    kUnknownInteractionsProtocolStrictEventUnionRequest_OptType =
    $fidl.NullableUnionType<UnknownInteractionsProtocolStrictEventUnionRequest>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventUnionRequest._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolStrictTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolStrictTwoWayUnionResponseTag>
    _UnknownInteractionsProtocolStrictTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsProtocolStrictTwoWayUnionResponseTag.someField,
};

class UnknownInteractionsProtocolStrictTwoWayUnionResponse extends $fidl.Union {
  const UnknownInteractionsProtocolStrictTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolStrictTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolStrictTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsProtocolStrictTwoWayUnionResponseTag_map[_ordinal] ??
      UnknownInteractionsProtocolStrictTwoWayUnionResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsProtocolStrictTwoWayUnionResponse_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolStrictTwoWayUnionResponse>
    kUnknownInteractionsProtocolStrictTwoWayUnionResponse_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleEventErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolFlexibleEventErrResultTag>
    _UnknownInteractionsProtocolFlexibleEventErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleEventErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleEventErrResultTag.err,
};

class UnknownInteractionsProtocolFlexibleEventErrResult extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleEventErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleEventErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleEventErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolFlexibleEventErrResult._(int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleEventErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleEventErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleEventErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleEventErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleEventErrResult._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventErrResult>
    kUnknownInteractionsProtocol_FlexibleEventErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<UnknownInteractionsProtocolFlexibleEventErrResult>
    kUnknownInteractionsProtocol_FlexibleEventErr_Result_OptType =
    $fidl.NullableUnionType<UnknownInteractionsProtocolFlexibleEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag>
    _UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag.err,
};

class UnknownInteractionsProtocolFlexibleEventFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleEventFieldsErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleEventFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleEventFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolFlexibleEventFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleEventFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleEventFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventFieldsErrResult>
    kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventFieldsErrResult>
    kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleEventTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolFlexibleEventTableErrResultTag>
    _UnknownInteractionsProtocolFlexibleEventTableErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleEventTableErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleEventTableErrResultTag.err,
};

class UnknownInteractionsProtocolFlexibleEventTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleEventTableErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleEventTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleEventTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolFlexibleEventTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleEventTableErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleEventTableErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleEventTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleEventTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleEventTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventTableErrResult>
    kUnknownInteractionsProtocol_FlexibleEventTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventTableErrResult>
    kUnknownInteractionsProtocol_FlexibleEventTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleEventUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolFlexibleEventUnionErrResponseTag>
    _UnknownInteractionsProtocolFlexibleEventUnionErrResponseTag_map = {
  1: UnknownInteractionsProtocolFlexibleEventUnionErrResponseTag.someField,
};

class UnknownInteractionsProtocolFlexibleEventUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleEventUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolFlexibleEventUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolFlexibleEventUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleEventUnionErrResponseTag get $tag =>
      _UnknownInteractionsProtocolFlexibleEventUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsProtocolFlexibleEventUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleEventUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleEventUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventUnionErrResponse>
    kUnknownInteractionsProtocol_FlexibleEventUnionErr_Response_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventUnionErrResponse>
    kUnknownInteractionsProtocol_FlexibleEventUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleEventUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolFlexibleEventUnionErrResultTag>
    _UnknownInteractionsProtocolFlexibleEventUnionErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleEventUnionErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleEventUnionErrResultTag.err,
};

class UnknownInteractionsProtocolFlexibleEventUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleEventUnionErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleEventUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleEventUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolFlexibleEventUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleEventUnionErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleEventUnionErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleEventUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleEventUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleEventUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventUnionErrResult>
    kUnknownInteractionsProtocol_FlexibleEventUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventUnionErrResult>
    kUnknownInteractionsProtocol_FlexibleEventUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayErrResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleTwoWayErrResultTag.err,
  3: UnknownInteractionsProtocolFlexibleTwoWayErrResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayErrResult extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayErrResult._(int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayErrResult._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolFlexibleTwoWayErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<UnknownInteractionsProtocolFlexibleTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag.err,
  3: UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag.response,
  3: UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayFieldsResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayFieldsResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayFields_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayFields_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayFieldsResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayFields_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayFields_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayFieldsResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag.err,
  3: UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayTableResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayTableResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayTableResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayTableResultTag.response,
  3: UnknownInteractionsProtocolFlexibleTwoWayTableResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayTableResult extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayTableResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayTableResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayTableResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayTableResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayTableResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayTableResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayTableResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayTableResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayTableResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayTableResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayTable_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayTableResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayTable_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayTableResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolFlexibleTwoWayTableResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayTable_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayTableResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayTable_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayTableResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponseTag>
    _UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponseTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponseTag.someField,
};

class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Response_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag.response,
  2: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag.err,
  3: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag_map[
          _ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayUnionResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayUnionResponseTag>
    _UnknownInteractionsProtocolFlexibleTwoWayUnionResponseTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayUnionResponseTag.someField,
};

class UnknownInteractionsProtocolFlexibleTwoWayUnionResponse
    extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponseTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayUnionResponseTag_map[
          _ordinal] ??
      UnknownInteractionsProtocolFlexibleTwoWayUnionResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayUnionResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Response_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag.response,
  3: UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayUnionResult extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayUnionResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayUnionResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayUnionResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayUnionResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayUnionResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolFlexibleTwoWayUnionResult>
    kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolFlexibleTwoWayUnionResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayUnionResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolFlexibleTwoWayResultTag {
  response, // 0x1
  transportErr, // 0x3
}

const Map<int, UnknownInteractionsProtocolFlexibleTwoWayResultTag>
    _UnknownInteractionsProtocolFlexibleTwoWayResultTag_map = {
  1: UnknownInteractionsProtocolFlexibleTwoWayResultTag.response,
  3: UnknownInteractionsProtocolFlexibleTwoWayResultTag.transportErr,
};

class UnknownInteractionsProtocolFlexibleTwoWayResult extends $fidl.Union {
  const UnknownInteractionsProtocolFlexibleTwoWayResult.withResponse(
      UnknownInteractionsProtocolFlexibleTwoWayResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolFlexibleTwoWayResult.withTransportErr(
      $fidl.TransportErr value)
      : _ordinal = 3,
        _data = value;

  UnknownInteractionsProtocolFlexibleTwoWayResult._(int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolFlexibleTwoWayResultTag get $tag =>
      _UnknownInteractionsProtocolFlexibleTwoWayResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolFlexibleTwoWayResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.TransportErr? get transportErr {
    if (_ordinal != 3) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 3:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolFlexibleTwoWayResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolFlexibleTwoWayResult._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayResult>
    kUnknownInteractionsProtocol_FlexibleTwoWay_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolFlexibleTwoWayResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWay_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<UnknownInteractionsProtocolFlexibleTwoWayResult>
    kUnknownInteractionsProtocol_FlexibleTwoWay_Result_OptType =
    $fidl.NullableUnionType<UnknownInteractionsProtocolFlexibleTwoWayResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_FlexibleTwoWay_Response_Type,
    3: $fidl.TransportErrType(),
  },
  ctor: UnknownInteractionsProtocolFlexibleTwoWayResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictEventErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictEventErrResultTag>
    _UnknownInteractionsProtocolStrictEventErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictEventErrResultTag.response,
  2: UnknownInteractionsProtocolStrictEventErrResultTag.err,
};

class UnknownInteractionsProtocolStrictEventErrResult extends $fidl.Union {
  const UnknownInteractionsProtocolStrictEventErrResult.withResponse(
      UnknownInteractionsProtocolStrictEventErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictEventErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictEventErrResult._(int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictEventErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictEventErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictEventErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictEventErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictEventErrResult._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictEventErrResult>
    kUnknownInteractionsProtocol_StrictEventErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<UnknownInteractionsProtocolStrictEventErrResult>
    kUnknownInteractionsProtocol_StrictEventErr_Result_OptType =
    $fidl.NullableUnionType<UnknownInteractionsProtocolStrictEventErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictEventFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictEventFieldsErrResultTag>
    _UnknownInteractionsProtocolStrictEventFieldsErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictEventFieldsErrResultTag.response,
  2: UnknownInteractionsProtocolStrictEventFieldsErrResultTag.err,
};

class UnknownInteractionsProtocolStrictEventFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolStrictEventFieldsErrResult.withResponse(
      UnknownInteractionsProtocolStrictEventFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictEventFieldsErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictEventFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictEventFieldsErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictEventFieldsErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictEventFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictEventFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictEventFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictEventFieldsErrResult>
    kUnknownInteractionsProtocol_StrictEventFieldsErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictEventFieldsErrResult>
    kUnknownInteractionsProtocol_StrictEventFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictEventFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictEventTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictEventTableErrResultTag>
    _UnknownInteractionsProtocolStrictEventTableErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictEventTableErrResultTag.response,
  2: UnknownInteractionsProtocolStrictEventTableErrResultTag.err,
};

class UnknownInteractionsProtocolStrictEventTableErrResult extends $fidl.Union {
  const UnknownInteractionsProtocolStrictEventTableErrResult.withResponse(
      UnknownInteractionsProtocolStrictEventTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictEventTableErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictEventTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictEventTableErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictEventTableErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictEventTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictEventTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictEventTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictEventTableErrResult>
    kUnknownInteractionsProtocol_StrictEventTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolStrictEventTableErrResult>
    kUnknownInteractionsProtocol_StrictEventTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictEventTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictEventUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolStrictEventUnionErrResponseTag>
    _UnknownInteractionsProtocolStrictEventUnionErrResponseTag_map = {
  1: UnknownInteractionsProtocolStrictEventUnionErrResponseTag.someField,
};

class UnknownInteractionsProtocolStrictEventUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsProtocolStrictEventUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolStrictEventUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolStrictEventUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictEventUnionErrResponseTag get $tag =>
      _UnknownInteractionsProtocolStrictEventUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsProtocolStrictEventUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictEventUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictEventUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictEventUnionErrResponse>
    kUnknownInteractionsProtocol_StrictEventUnionErr_Response_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictEventUnionErrResponse>
    kUnknownInteractionsProtocol_StrictEventUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictEventUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolStrictEventUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictEventUnionErrResultTag>
    _UnknownInteractionsProtocolStrictEventUnionErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictEventUnionErrResultTag.response,
  2: UnknownInteractionsProtocolStrictEventUnionErrResultTag.err,
};

class UnknownInteractionsProtocolStrictEventUnionErrResult extends $fidl.Union {
  const UnknownInteractionsProtocolStrictEventUnionErrResult.withResponse(
      UnknownInteractionsProtocolStrictEventUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictEventUnionErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictEventUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictEventUnionErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictEventUnionErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictEventUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictEventUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictEventUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictEventUnionErrResult>
    kUnknownInteractionsProtocol_StrictEventUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .NullableUnionType<UnknownInteractionsProtocolStrictEventUnionErrResult>
    kUnknownInteractionsProtocol_StrictEventUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictEventUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictEventUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictEventUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictTwoWayErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictTwoWayErrResultTag>
    _UnknownInteractionsProtocolStrictTwoWayErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictTwoWayErrResultTag.response,
  2: UnknownInteractionsProtocolStrictTwoWayErrResultTag.err,
};

class UnknownInteractionsProtocolStrictTwoWayErrResult extends $fidl.Union {
  const UnknownInteractionsProtocolStrictTwoWayErrResult.withResponse(
      UnknownInteractionsProtocolStrictTwoWayErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictTwoWayErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictTwoWayErrResult._(int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictTwoWayErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictTwoWayErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictTwoWayErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictTwoWayErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictTwoWayErrResult._(ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<UnknownInteractionsProtocolStrictTwoWayErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayErr_Result_OptType =
    $fidl.NullableUnionType<UnknownInteractionsProtocolStrictTwoWayErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag>
    _UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag.response,
  2: UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag.err,
};

class UnknownInteractionsProtocolStrictTwoWayFieldsErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult.withResponse(
      UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult.withErr(
      int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictTwoWayFieldsErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayFieldsErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictTwoWayTableErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictTwoWayTableErrResultTag>
    _UnknownInteractionsProtocolStrictTwoWayTableErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictTwoWayTableErrResultTag.response,
  2: UnknownInteractionsProtocolStrictTwoWayTableErrResultTag.err,
};

class UnknownInteractionsProtocolStrictTwoWayTableErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolStrictTwoWayTableErrResult.withResponse(
      UnknownInteractionsProtocolStrictTwoWayTableErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictTwoWayTableErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictTwoWayTableErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictTwoWayTableErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictTwoWayTableErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictTwoWayTableErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictTwoWayTableErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictTwoWayTableErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayTableErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayTableErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayTableErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayTableErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayTableErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayTableErrResult._ctor,
  flexible: false,
  resource: false,
);

enum UnknownInteractionsProtocolStrictTwoWayUnionErrResponseTag {
  $unknown,
  someField, // 0x1
}

const Map<int, UnknownInteractionsProtocolStrictTwoWayUnionErrResponseTag>
    _UnknownInteractionsProtocolStrictTwoWayUnionErrResponseTag_map = {
  1: UnknownInteractionsProtocolStrictTwoWayUnionErrResponseTag.someField,
};

class UnknownInteractionsProtocolStrictTwoWayUnionErrResponse
    extends $fidl.Union {
  const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse.withSomeField(
      int value)
      : _ordinal = 1,
        _data = value;
  const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse.with$UnknownData(
      this._ordinal, $fidl.UnknownRawData data)
      : _data = data;

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponseTag get $tag =>
      _UnknownInteractionsProtocolStrictTwoWayUnionErrResponseTag_map[
          _ordinal] ??
      UnknownInteractionsProtocolStrictTwoWayUnionErrResponseTag.$unknown;

  int? get someField {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictTwoWayUnionErrResponse _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictTwoWayUnionErrResponse._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Response_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>
    kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Response_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>(
  members: <int, $fidl.FidlType>{
    1: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayUnionErrResponse._ctor,
  flexible: true,
  resource: false,
);

enum UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag {
  response, // 0x1
  err, // 0x2
}

const Map<int, UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag>
    _UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag_map = {
  1: UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag.response,
  2: UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag.err,
};

class UnknownInteractionsProtocolStrictTwoWayUnionErrResult
    extends $fidl.Union {
  const UnknownInteractionsProtocolStrictTwoWayUnionErrResult.withResponse(
      UnknownInteractionsProtocolStrictTwoWayUnionErrResponse value)
      : _ordinal = 1,
        _data = value;

  const UnknownInteractionsProtocolStrictTwoWayUnionErrResult.withErr(int value)
      : _ordinal = 2,
        _data = value;

  UnknownInteractionsProtocolStrictTwoWayUnionErrResult._(
      int ordinal, Object data)
      : _ordinal = ordinal,
        _data = data;

  final int _ordinal;
  final _data;

  UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag get $tag =>
      _UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag_map[_ordinal]!;

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse? get response {
    if (_ordinal != 1) {
      return null;
    }
    return _data;
  }

  int? get err {
    if (_ordinal != 2) {
      return null;
    }
    return _data;
  }

  $fidl.UnknownRawData? get $unknownData {
    switch (_ordinal) {
      case 1:
      case 2:
        return null;
      default:
        return _data;
    }
  }

  @override
  int get $ordinal => _ordinal;

  @override
  Object get $data => _data;

  static UnknownInteractionsProtocolStrictTwoWayUnionErrResult _ctor(
      int ordinal, Object data) {
    return UnknownInteractionsProtocolStrictTwoWayUnionErrResult._(
        ordinal, data);
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Result_Type =
    $fidl.UnionType<UnknownInteractionsProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);
// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayUnionErrResult>
    kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Result_OptType =
    $fidl.NullableUnionType<
        UnknownInteractionsProtocolStrictTwoWayUnionErrResult>(
  members: <int, $fidl.FidlType>{
    1: kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Response_Type,
    2: $fidl.Int32Type(),
  },
  ctor: UnknownInteractionsProtocolStrictTwoWayUnionErrResult._ctor,
  flexible: false,
  resource: false,
);

class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse.clone(
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse>(
        inlineSize: 1,
        structDecode:
            UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse
                ._structDecode);

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse.clone(
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse
      $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse
                ._structDecode);

class UnknownInteractionsAjarProtocolFlexibleEventErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarProtocolFlexibleEventErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsAjarProtocolFlexibleEventErrResponse.clone(
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsAjarProtocolFlexibleEventErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsAjarProtocolFlexibleEventErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarProtocolFlexibleEventErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsAjarProtocolFlexibleEventErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsAjarProtocolFlexibleEventErrResponse>
    kUnknownInteractionsAjarProtocol_FlexibleEventErr_Response_Type =
    $fidl.StructType<UnknownInteractionsAjarProtocolFlexibleEventErrResponse>(
        inlineSize: 1,
        structDecode: UnknownInteractionsAjarProtocolFlexibleEventErrResponse
            ._structDecode);

class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse.clone(
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse>
    kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse
                ._structDecode);

class UnknownInteractionsAjarProtocolStrictEventErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarProtocolStrictEventErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsAjarProtocolStrictEventErrResponse.clone(
    UnknownInteractionsAjarProtocolStrictEventErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsAjarProtocolStrictEventErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsAjarProtocolStrictEventErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarProtocolStrictEventErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsAjarProtocolStrictEventErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsAjarProtocolStrictEventErrResponse>
    kUnknownInteractionsAjarProtocol_StrictEventErr_Response_Type =
    $fidl.StructType<UnknownInteractionsAjarProtocolStrictEventErrResponse>(
        inlineSize: 1,
        structDecode: UnknownInteractionsAjarProtocolStrictEventErrResponse
            ._structDecode);

class UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse.clone(
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .StructType<UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse>
    kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse
                ._structDecode);

class UnknownInteractionsAjarProtocolStrictTwoWayErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse.clone(
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarProtocolStrictTwoWayErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsAjarProtocolStrictTwoWayErrResponse>
    kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Response_Type =
    $fidl.StructType<UnknownInteractionsAjarProtocolStrictTwoWayErrResponse>(
        inlineSize: 1,
        structDecode: UnknownInteractionsAjarProtocolStrictTwoWayErrResponse
            ._structDecode);

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse.clone(
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse>
    kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse
                ._structDecode);

class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse.clone(
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse>(
        inlineSize: 1,
        structDecode:
            UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse
                ._structDecode);

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse.clone(
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
        $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
      $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
                ._structDecode);

class UnknownInteractionsClosedProtocolStrictEventErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsClosedProtocolStrictEventErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsClosedProtocolStrictEventErrResponse.clone(
    UnknownInteractionsClosedProtocolStrictEventErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsClosedProtocolStrictEventErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsClosedProtocolStrictEventErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsClosedProtocolStrictEventErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsClosedProtocolStrictEventErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsClosedProtocolStrictEventErrResponse>
    kUnknownInteractionsClosedProtocol_StrictEventErr_Response_Type =
    $fidl.StructType<UnknownInteractionsClosedProtocolStrictEventErrResponse>(
        inlineSize: 1,
        structDecode: UnknownInteractionsClosedProtocolStrictEventErrResponse
            ._structDecode);

class UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse.clone(
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse>
    kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse
                ._structDecode);

class UnknownInteractionsClosedProtocolStrictTwoWayErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse.clone(
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsClosedProtocolStrictTwoWayErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsClosedProtocolStrictTwoWayErrResponse>
    kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Response_Type =
    $fidl.StructType<UnknownInteractionsClosedProtocolStrictTwoWayErrResponse>(
        inlineSize: 1,
        structDecode: UnknownInteractionsClosedProtocolStrictTwoWayErrResponse
            ._structDecode);

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse.clone(
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse>
    kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse
                ._structDecode);

class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse.clone(
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .StructType<UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayErr_Response_Type = $fidl
        .StructType<UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse>(
            inlineSize: 1,
            structDecode:
                UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse
                    ._structDecode);

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse.clone(
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse
                ._structDecode);

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse
    extends $fidl.Struct {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse({
    required this.someField,
  });
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse.clone(
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayFields_Response_Type =
    $fidl.StructType<
            UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse
                ._structDecode);

class UnknownInteractionsDriverProtocolFlexibleTwoWayResponse
    extends $fidl.Struct {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse.clone(
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsDriverProtocolFlexibleTwoWayResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsDriverProtocolFlexibleTwoWayResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWay_Response_Type =
    $fidl.StructType<UnknownInteractionsDriverProtocolFlexibleTwoWayResponse>(
        inlineSize: 1,
        structDecode: UnknownInteractionsDriverProtocolFlexibleTwoWayResponse
            ._structDecode);

class UnknownInteractionsDriverProtocolStrictTwoWayErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse.clone(
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsDriverProtocolStrictTwoWayErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsDriverProtocolStrictTwoWayErrResponse>
    kUnknownInteractionsDriverProtocol_StrictTwoWayErr_Response_Type =
    $fidl.StructType<UnknownInteractionsDriverProtocolStrictTwoWayErrResponse>(
        inlineSize: 1,
        structDecode: UnknownInteractionsDriverProtocolStrictTwoWayErrResponse
            ._structDecode);

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse.clone(
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<
        UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse>
    kUnknownInteractionsDriverProtocol_StrictTwoWayFieldsErr_Response_Type =
    $fidl.StructType<
            UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse>(
        inlineSize: 4,
        structDecode:
            UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse
                ._structDecode);

class UnknownInteractionsProtocolFlexibleEventErrResponse extends $fidl.Struct {
  const UnknownInteractionsProtocolFlexibleEventErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsProtocolFlexibleEventErrResponse.clone(
    UnknownInteractionsProtocolFlexibleEventErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsProtocolFlexibleEventErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsProtocolFlexibleEventErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolFlexibleEventErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsProtocolFlexibleEventErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolFlexibleEventErrResponse>
    kUnknownInteractionsProtocol_FlexibleEventErr_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolFlexibleEventErrResponse>(
        inlineSize: 1,
        structDecode:
            UnknownInteractionsProtocolFlexibleEventErrResponse._structDecode);

class UnknownInteractionsProtocolFlexibleEventFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse.clone(
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolFlexibleEventFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .StructType<UnknownInteractionsProtocolFlexibleEventFieldsErrResponse>
    kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolFlexibleEventFieldsErrResponse>(
        inlineSize: 4,
        structDecode: UnknownInteractionsProtocolFlexibleEventFieldsErrResponse
            ._structDecode);

class UnknownInteractionsProtocolFlexibleTwoWayErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsProtocolFlexibleTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse.clone(
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsProtocolFlexibleTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolFlexibleTwoWayErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsProtocolFlexibleTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolFlexibleTwoWayErrResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayErr_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolFlexibleTwoWayErrResponse>(
        inlineSize: 1,
        structDecode:
            UnknownInteractionsProtocolFlexibleTwoWayErrResponse._structDecode);

class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse.clone(
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse
      _structDecode($fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .StructType<UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Response_Type = $fidl
        .StructType<UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse>(
            inlineSize: 4,
            structDecode:
                UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse
                    ._structDecode);

class UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse
    extends $fidl.Struct {
  const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse({
    required this.someField,
  });
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse.clone(
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayFields_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse>(
        inlineSize: 4,
        structDecode: UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse
            ._structDecode);

class UnknownInteractionsProtocolFlexibleTwoWayResponse extends $fidl.Struct {
  const UnknownInteractionsProtocolFlexibleTwoWayResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsProtocolFlexibleTwoWayResponse.clone(
    UnknownInteractionsProtocolFlexibleTwoWayResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsProtocolFlexibleTwoWayResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsProtocolFlexibleTwoWayResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolFlexibleTwoWayResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsProtocolFlexibleTwoWayResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolFlexibleTwoWayResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWay_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolFlexibleTwoWayResponse>(
        inlineSize: 1,
        structDecode:
            UnknownInteractionsProtocolFlexibleTwoWayResponse._structDecode);

class UnknownInteractionsProtocolStrictEventErrResponse extends $fidl.Struct {
  const UnknownInteractionsProtocolStrictEventErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsProtocolStrictEventErrResponse.clone(
    UnknownInteractionsProtocolStrictEventErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsProtocolStrictEventErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsProtocolStrictEventErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolStrictEventErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsProtocolStrictEventErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolStrictEventErrResponse>
    kUnknownInteractionsProtocol_StrictEventErr_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolStrictEventErrResponse>(
        inlineSize: 1,
        structDecode:
            UnknownInteractionsProtocolStrictEventErrResponse._structDecode);

class UnknownInteractionsProtocolStrictEventFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsProtocolStrictEventFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsProtocolStrictEventFieldsErrResponse.clone(
    UnknownInteractionsProtocolStrictEventFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsProtocolStrictEventFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsProtocolStrictEventFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolStrictEventFieldsErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsProtocolStrictEventFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolStrictEventFieldsErrResponse>
    kUnknownInteractionsProtocol_StrictEventFieldsErr_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolStrictEventFieldsErrResponse>(
        inlineSize: 4,
        structDecode: UnknownInteractionsProtocolStrictEventFieldsErrResponse
            ._structDecode);

class UnknownInteractionsProtocolStrictTwoWayErrResponse extends $fidl.Struct {
  const UnknownInteractionsProtocolStrictTwoWayErrResponse({
    this.reserved = 0x0,
  });
  UnknownInteractionsProtocolStrictTwoWayErrResponse.clone(
    UnknownInteractionsProtocolStrictTwoWayErrResponse $orig, {
    int? reserved,
  }) : this(
          reserved: reserved ?? $orig.reserved,
        );

  UnknownInteractionsProtocolStrictTwoWayErrResponse $cloneWith({
    int? reserved,
  }) {
    return UnknownInteractionsProtocolStrictTwoWayErrResponse(
      reserved: reserved ?? this.reserved,
    );
  }

  final int reserved;

  @override
  List<Object?> get $fields {
    return <Object?>[
      reserved,
    ];
  }

  static const $fieldType0 = $fidl.Uint8Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, reserved, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolStrictTwoWayErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        $decoder.checkPadding($offset + 0, 1);
        return UnknownInteractionsProtocolStrictTwoWayErrResponse(
            reserved: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolStrictTwoWayErrResponse>
    kUnknownInteractionsProtocol_StrictTwoWayErr_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolStrictTwoWayErrResponse>(
        inlineSize: 1,
        structDecode:
            UnknownInteractionsProtocolStrictTwoWayErrResponse._structDecode);

class UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse
    extends $fidl.Struct {
  const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse({
    required this.someField,
  });
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse.clone(
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse $orig, {
    int? someField,
  }) : this(
          someField: someField ?? $orig.someField,
        );

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse $cloneWith({
    int? someField,
  }) {
    return UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(
      someField: someField ?? this.someField,
    );
  }

  final int someField;

  @override
  List<Object?> get $fields {
    return <Object?>[
      someField,
    ];
  }

  static const $fieldType0 = $fidl.Int32Type();

  @override
  void $encode($fidl.Encoder $encoder, int $offset, int $depth) {
    $fieldType0.encode($encoder, someField, $offset + 0, $depth);
  }

  static UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse _structDecode(
      $fidl.Decoder $decoder, int $offset, int $depth) {
    switch ($decoder.wireFormat) {
      case $fidl.WireFormat.v2:
        return UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(
            someField: $fieldType0.decode($decoder, $offset + 0, $depth));
    }
  }
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.StructType<UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse>
    kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Response_Type =
    $fidl.StructType<UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse>(
        inlineSize: 4,
        structDecode: UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse
            ._structDecode);

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse
    extends $fidl.Table {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>
    kUnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse_Type =
    $fidl.TableType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse
      _ctor(Map<int, dynamic> argv,
              [Map<int, $fidl.UnknownRawData>? unknownData]) =>
          UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse._(
              argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>
    kUnknownInteractionsAjarDriverProtocol_StrictTwoWayTableErr_Response_Type =
    $fidl.TableType<
        UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsAjarProtocolFlexibleEventTableRequest
    extends $fidl.Table {
  const UnknownInteractionsAjarProtocolFlexibleEventTableRequest({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarProtocolFlexibleEventTableRequest._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarProtocolFlexibleEventTableRequest $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarProtocolFlexibleEventTableRequest(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarProtocolFlexibleEventTableRequest _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsAjarProtocolFlexibleEventTableRequest._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsAjarProtocolFlexibleEventTableRequest>
    kUnknownInteractionsAjarProtocolFlexibleEventTableRequest_Type =
    $fidl.TableType<UnknownInteractionsAjarProtocolFlexibleEventTableRequest>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarProtocolFlexibleEventTableRequest._ctor,
  resource: false,
);

class UnknownInteractionsAjarProtocolStrictEventTableRequest
    extends $fidl.Table {
  const UnknownInteractionsAjarProtocolStrictEventTableRequest({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarProtocolStrictEventTableRequest._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarProtocolStrictEventTableRequest $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarProtocolStrictEventTableRequest(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarProtocolStrictEventTableRequest _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsAjarProtocolStrictEventTableRequest._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsAjarProtocolStrictEventTableRequest>
    kUnknownInteractionsAjarProtocolStrictEventTableRequest_Type =
    $fidl.TableType<UnknownInteractionsAjarProtocolStrictEventTableRequest>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarProtocolStrictEventTableRequest._ctor,
  resource: false,
);

class UnknownInteractionsAjarProtocolStrictTwoWayTableResponse
    extends $fidl.Table {
  const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarProtocolStrictTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsAjarProtocolStrictTwoWayTableResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>
    kUnknownInteractionsAjarProtocolStrictTwoWayTableResponse_Type =
    $fidl.TableType<UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .TableType<UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>
    kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Response_Type =
    $fidl.TableType<
        UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsAjarProtocolStrictEventTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsAjarProtocolStrictEventTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarProtocolStrictEventTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarProtocolStrictEventTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarProtocolStrictEventTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarProtocolStrictEventTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsAjarProtocolStrictEventTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .TableType<UnknownInteractionsAjarProtocolStrictEventTableErrResponse>
    kUnknownInteractionsAjarProtocol_StrictEventTableErr_Response_Type =
    $fidl.TableType<UnknownInteractionsAjarProtocolStrictEventTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarProtocolStrictEventTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .TableType<UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>
    kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Response_Type = $fidl
        .TableType<UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse
    extends $fidl.Table {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>
    kUnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse_Type =
    $fidl.TableType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse
      $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse
      _ctor(Map<int, dynamic> argv,
              [Map<int, $fidl.UnknownRawData>? unknownData]) =>
          UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse._(
              argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>
    kUnknownInteractionsClosedDriverProtocol_StrictTwoWayTableErr_Response_Type =
    $fidl.TableType<
        UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor:
      UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsClosedProtocolStrictEventTableRequest
    extends $fidl.Table {
  const UnknownInteractionsClosedProtocolStrictEventTableRequest({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsClosedProtocolStrictEventTableRequest._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsClosedProtocolStrictEventTableRequest $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsClosedProtocolStrictEventTableRequest(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsClosedProtocolStrictEventTableRequest _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsClosedProtocolStrictEventTableRequest._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsClosedProtocolStrictEventTableRequest>
    kUnknownInteractionsClosedProtocolStrictEventTableRequest_Type =
    $fidl.TableType<UnknownInteractionsClosedProtocolStrictEventTableRequest>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsClosedProtocolStrictEventTableRequest._ctor,
  resource: false,
);

class UnknownInteractionsClosedProtocolStrictTwoWayTableResponse
    extends $fidl.Table {
  const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsClosedProtocolStrictTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsClosedProtocolStrictTwoWayTableResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .TableType<UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>
    kUnknownInteractionsClosedProtocolStrictTwoWayTableResponse_Type =
    $fidl.TableType<UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsClosedProtocolStrictEventTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsClosedProtocolStrictEventTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsClosedProtocolStrictEventTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsClosedProtocolStrictEventTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsClosedProtocolStrictEventTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsClosedProtocolStrictEventTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsClosedProtocolStrictEventTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .TableType<UnknownInteractionsClosedProtocolStrictEventTableErrResponse>
    kUnknownInteractionsClosedProtocol_StrictEventTableErr_Response_Type =
    $fidl.TableType<
        UnknownInteractionsClosedProtocolStrictEventTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsClosedProtocolStrictEventTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<
        UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>
    kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Response_Type =
    $fidl.TableType<
        UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsDriverProtocolStrictTwoWayTableResponse
    extends $fidl.Table {
  const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsDriverProtocolStrictTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsDriverProtocolStrictTwoWayTableResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .TableType<UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>
    kUnknownInteractionsDriverProtocolStrictTwoWayTableResponse_Type =
    $fidl.TableType<UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayTableErr_Response_Type =
    $fidl.TableType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse
    extends $fidl.Table {
  const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl
        .TableType<UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>
    kUnknownInteractionsDriverProtocol_FlexibleTwoWayTable_Response_Type =
    $fidl.TableType<
        UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<
        UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>
    kUnknownInteractionsDriverProtocol_StrictTwoWayTableErr_Response_Type =
    $fidl.TableType<
        UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsProtocolFlexibleEventTableRequest extends $fidl.Table {
  const UnknownInteractionsProtocolFlexibleEventTableRequest({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolFlexibleEventTableRequest._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolFlexibleEventTableRequest $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolFlexibleEventTableRequest(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolFlexibleEventTableRequest _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolFlexibleEventTableRequest._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolFlexibleEventTableRequest>
    kUnknownInteractionsProtocolFlexibleEventTableRequest_Type =
    $fidl.TableType<UnknownInteractionsProtocolFlexibleEventTableRequest>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolFlexibleEventTableRequest._ctor,
  resource: false,
);

class UnknownInteractionsProtocolStrictEventTableRequest extends $fidl.Table {
  const UnknownInteractionsProtocolStrictEventTableRequest({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolStrictEventTableRequest._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolStrictEventTableRequest $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolStrictEventTableRequest(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolStrictEventTableRequest _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolStrictEventTableRequest._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolStrictEventTableRequest>
    kUnknownInteractionsProtocolStrictEventTableRequest_Type =
    $fidl.TableType<UnknownInteractionsProtocolStrictEventTableRequest>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolStrictEventTableRequest._ctor,
  resource: false,
);

class UnknownInteractionsProtocolStrictTwoWayTableResponse extends $fidl.Table {
  const UnknownInteractionsProtocolStrictTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolStrictTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolStrictTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolStrictTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolStrictTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolStrictTwoWayTableResponse._(argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolStrictTwoWayTableResponse>
    kUnknownInteractionsProtocolStrictTwoWayTableResponse_Type =
    $fidl.TableType<UnknownInteractionsProtocolStrictTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolStrictTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsProtocolFlexibleEventTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsProtocolFlexibleEventTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolFlexibleEventTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolFlexibleEventTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolFlexibleEventTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolFlexibleEventTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolFlexibleEventTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolFlexibleEventTableErrResponse>
    kUnknownInteractionsProtocol_FlexibleEventTableErr_Response_Type =
    $fidl.TableType<UnknownInteractionsProtocolFlexibleEventTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolFlexibleEventTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Response_Type =
    $fidl.TableType<UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsProtocolFlexibleTwoWayTableResponse
    extends $fidl.Table {
  const UnknownInteractionsProtocolFlexibleTwoWayTableResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolFlexibleTwoWayTableResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolFlexibleTwoWayTableResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolFlexibleTwoWayTableResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolFlexibleTwoWayTableResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolFlexibleTwoWayTableResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolFlexibleTwoWayTableResponse>
    kUnknownInteractionsProtocol_FlexibleTwoWayTable_Response_Type =
    $fidl.TableType<UnknownInteractionsProtocolFlexibleTwoWayTableResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolFlexibleTwoWayTableResponse._ctor,
  resource: false,
);

class UnknownInteractionsProtocolStrictEventTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsProtocolStrictEventTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolStrictEventTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolStrictEventTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolStrictEventTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolStrictEventTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolStrictEventTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolStrictEventTableErrResponse>
    kUnknownInteractionsProtocol_StrictEventTableErr_Response_Type =
    $fidl.TableType<UnknownInteractionsProtocolStrictEventTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolStrictEventTableErrResponse._ctor,
  resource: false,
);

class UnknownInteractionsProtocolStrictTwoWayTableErrResponse
    extends $fidl.Table {
  const UnknownInteractionsProtocolStrictTwoWayTableErrResponse({
    this.$unknownData,
    this.someField,
  });

  UnknownInteractionsProtocolStrictTwoWayTableErrResponse._(
      Map<int, dynamic> argv, this.$unknownData)
      : someField = argv[1];

  UnknownInteractionsProtocolStrictTwoWayTableErrResponse $cloneWith({
    $fidl.OptionalNullable<Map<int, $fidl.UnknownRawData>> $unknownData =
        const $fidl.OptionalNullable.undefined(),
    $fidl.OptionalNullable<int> someField =
        const $fidl.OptionalNullable.undefined(),
  }) {
    return UnknownInteractionsProtocolStrictTwoWayTableErrResponse(
      someField: someField.or(this.someField),
    );
  }

  @override
  final Map<int, $fidl.UnknownRawData>? $unknownData;
  final int? someField;

  @override
  dynamic $field(int index) {
    switch (index) {
      case 0:
        return someField;
    }
    return null;
  }

  @override
  Map<int, dynamic> get $fields {
    return {
      1: someField,
    };
  }

  static UnknownInteractionsProtocolStrictTwoWayTableErrResponse _ctor(
          Map<int, dynamic> argv,
          [Map<int, $fidl.UnknownRawData>? unknownData]) =>
      UnknownInteractionsProtocolStrictTwoWayTableErrResponse._(
          argv, unknownData);
}

// See fxbug.dev/7644:
// ignore: recursive_compile_time_constant
const $fidl.TableType<UnknownInteractionsProtocolStrictTwoWayTableErrResponse>
    kUnknownInteractionsProtocol_StrictTwoWayTableErr_Response_Type =
    $fidl.TableType<UnknownInteractionsProtocolStrictTwoWayTableErrResponse>(
  inlineSize: 16,
  members: [
    $fidl.Int32Type(),
  ],
  ctor: UnknownInteractionsProtocolStrictTwoWayTableErrResponse._ctor,
  resource: false,
);

// strictOneWay: ()
const int _kUnknownInteractionsAjarProtocol_StrictOneWay_Ordinal =
    0xd4663d6b2b5048b;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_StrictOneWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsAjarProtocol.StrictOneWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// flexibleOneWay: ()
const int _kUnknownInteractionsAjarProtocol_FlexibleOneWay_Ordinal =
    0x2275b8171ae4834f;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_FlexibleOneWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsAjarProtocol.FlexibleOneWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictTwoWay: () -> ()
const int _kUnknownInteractionsAjarProtocol_StrictTwoWay_Ordinal =
    0x50e66d328336038;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_StrictTwoWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictTwoWayFields: () -> (int someField)
const int _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Ordinal =
    0x1947e36d61e4493a;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWayFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// strictTwoWayUnion: () -> (UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse payload)
const int _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Ordinal =
    0x5177371967e0e6d1;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type = $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>(
        type: kUnknownInteractionsAjarProtocolStrictTwoWayUnionResponse_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWayUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayTable: () -> (UnknownInteractionsAjarProtocolStrictTwoWayTableResponse payload)
const int _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Ordinal =
    0x6f8f9343b34e2ed4;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type = $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>(
        type: kUnknownInteractionsAjarProtocolStrictTwoWayTableResponse_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWayTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayErr: () -> ()
const int _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Ordinal =
    0x5b47637577c69006;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictTwoWayErrResult>(
        type: kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWayErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayFieldsErr: () -> (int someField)
const int _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Ordinal =
    0x844ff7bb3f186d9;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>(
        type:
            kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWayFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayUnionErr: () -> (UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse payload)
const int _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Ordinal =
    0x2cbfd5a859d4ac95;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>(
        type: kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWayUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayTableErr: () -> (UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse payload)
const int _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Ordinal =
    0x30c9e1b3da57dc37;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>(
        type: kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictTwoWayTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEvent:  -> ()
const int _kUnknownInteractionsAjarProtocol_StrictEvent_Ordinal =
    0x6022ae999e9dc2b0;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_StrictEvent_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsAjarProtocol.StrictEvent",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictEventFields:  -> (int someField)
const int _kUnknownInteractionsAjarProtocol_StrictEventFields_Ordinal =
    0x510586752445c769;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictEventFields_Type = $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictEventFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// strictEventUnion:  -> (UnknownInteractionsAjarProtocolStrictEventUnionRequest payload)
const int _kUnknownInteractionsAjarProtocol_StrictEventUnion_Ordinal =
    0x57794b4cc91f816f;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_StrictEventUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictEventUnionRequest>(
        type: kUnknownInteractionsAjarProtocolStrictEventUnionRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictEventUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventTable:  -> (UnknownInteractionsAjarProtocolStrictEventTableRequest payload)
const int _kUnknownInteractionsAjarProtocol_StrictEventTable_Ordinal =
    0x92639249201f89d;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_StrictEventTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictEventTableRequest>(
        type: kUnknownInteractionsAjarProtocolStrictEventTableRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictEventTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventErr:  -> ()
const int _kUnknownInteractionsAjarProtocol_StrictEventErr_Ordinal =
    0x715bfcab27f735ed;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_StrictEventErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictEventErrResult>(
        type: kUnknownInteractionsAjarProtocol_StrictEventErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictEventErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventFieldsErr:  -> (int someField)
const int _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Ordinal =
    0x3ae22659224effb9;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>(
        type: kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictEventFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventUnionErr:  -> (UnknownInteractionsAjarProtocolStrictEventUnionErrResponse payload)
const int _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Ordinal =
    0xab5b2d1199942b;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictEventUnionErrResult>(
        type: kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictEventUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventTableErr:  -> (UnknownInteractionsAjarProtocolStrictEventTableErrResponse payload)
const int _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Ordinal =
    0x6c6abc426c7c8406;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolStrictEventTableErrResult>(
        type: kUnknownInteractionsAjarProtocol_StrictEventTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.StrictEventTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEvent:  -> ()
const int _kUnknownInteractionsAjarProtocol_FlexibleEvent_Ordinal =
    0x11c9ba570ce71df3;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_FlexibleEvent_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEvent",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// flexibleEventFields:  -> (int someField)
const int _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Ordinal =
    0x3ba8fd32bf87d862;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEventFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// flexibleEventUnion:  -> (UnknownInteractionsAjarProtocolFlexibleEventUnionRequest payload)
const int _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Ordinal =
    0x7c3823f47ce0fcad;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>(
        type: kUnknownInteractionsAjarProtocolFlexibleEventUnionRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEventUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventTable:  -> (UnknownInteractionsAjarProtocolFlexibleEventTableRequest payload)
const int _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Ordinal =
    0x9ca944d1d6436b0;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolFlexibleEventTableRequest>(
        type: kUnknownInteractionsAjarProtocolFlexibleEventTableRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEventTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventErr:  -> ()
const int _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Ordinal =
    0x4fbe0d51e074e5bc;
const $fidl.MethodType _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsAjarProtocolFlexibleEventErrResult>(
        type: kUnknownInteractionsAjarProtocol_FlexibleEventErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEventErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventFieldsErr:  -> (int someField)
const int _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Ordinal =
    0x22a3e45e944031c4;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>(
        type:
            kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEventFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventUnionErr:  -> (UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse payload)
const int _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Ordinal =
    0xc1637e7694d6680;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>(
        type:
            kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEventUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventTableErr:  -> (UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse payload)
const int _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Ordinal =
    0x6e69d4c524bf3a27;
const $fidl.MethodType
    _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>(
        type:
            kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsAjarProtocol.FlexibleEventTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);

abstract class UnknownInteractionsAjarProtocol {
  $fidl.ServiceData? get $serviceData => UnknownInteractionsAjarProtocolData();
  $async.Future<void> strictOneWay();
  $async.Future<void> flexibleOneWay();
  $async.Future<void> strictTwoWay();
  $async.Future<int> strictTwoWayFields();
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>
      strictTwoWayUnion();
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>
      strictTwoWayTable();
  $async.Future<void> strictTwoWayErr();
  $async.Future<int> strictTwoWayFieldsErr();
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>
      strictTwoWayUnionErr();
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>
      strictTwoWayTableErr();
  $async.Stream<void>? get strictEvent;
  $async.Stream<int>? get strictEventFields;
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventUnionRequest>?
      get strictEventUnion;
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventTableRequest>?
      get strictEventTable;
  $async.Stream<void>? get strictEventErr;
  $async.Stream<int>? get strictEventFieldsErr;
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>?
      get strictEventUnionErr;
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventTableErrResponse>?
      get strictEventTableErr;
  $async.Stream<void>? get flexibleEvent;
  $async.Stream<int>? get flexibleEventFields;
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>?
      get flexibleEventUnion;
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventTableRequest>?
      get flexibleEventTable;
  $async.Stream<void>? get flexibleEventErr;
  $async.Stream<int>? get flexibleEventFieldsErr;
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>?
      get flexibleEventUnionErr;
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>?
      get flexibleEventTableErr;
}

abstract class UnknownInteractionsAjarProtocolServer
    extends UnknownInteractionsAjarProtocol {
  $async.Future<void> $unknownMethod($fidl.UnknownMethodMetadata metadata);
}

// TODO: Remove ServiceData for non-service
class UnknownInteractionsAjarProtocolData
    implements $fidl.ServiceData<UnknownInteractionsAjarProtocol> {
  const UnknownInteractionsAjarProtocolData();

  @override
  String getName() {
    return "";
  }

  @override
  $fidl.AsyncBinding getBinding() {
    return UnknownInteractionsAjarProtocolBinding();
  }
}

class UnknownInteractionsAjarProtocolProxy
    extends $fidl.AsyncProxy<UnknownInteractionsAjarProtocol>
    implements UnknownInteractionsAjarProtocol {
  UnknownInteractionsAjarProtocolProxy()
      : super($fidl.AsyncProxyController<UnknownInteractionsAjarProtocol>(
            $interfaceName: r'UnknownInteractionsAjarProtocol')) {
    ctrl.onResponse = _handleResponse;
    ctrl.whenClosed.then((_) {
      _strictEventEventStreamController.close();
      _strictEventFieldsEventStreamController.close();
      _strictEventUnionEventStreamController.close();
      _strictEventTableEventStreamController.close();
      _strictEventErrEventStreamController.close();
      _strictEventFieldsErrEventStreamController.close();
      _strictEventUnionErrEventStreamController.close();
      _strictEventTableErrEventStreamController.close();
      _flexibleEventEventStreamController.close();
      _flexibleEventFieldsEventStreamController.close();
      _flexibleEventUnionEventStreamController.close();
      _flexibleEventTableEventStreamController.close();
      _flexibleEventErrEventStreamController.close();
      _flexibleEventFieldsErrEventStreamController.close();
      _flexibleEventUnionErrEventStreamController.close();
      _flexibleEventTableErrEventStreamController.close();
      _$unknownEventStreamController.close();
    }, onError: (_) {});
  }
  @override
  Null get $serviceData => null;

  void _handleEvent($fidl.IncomingMessage $message) {
    switch ($message.ordinal) {
      case _kUnknownInteractionsAjarProtocol_StrictEvent_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEvent_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _strictEventEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEvent_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          _strictEventEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictEventFields_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEventFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventFieldsEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEventFields_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_StrictEventFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventFieldsEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictEventUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEventUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventUnionEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEventUnion_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_StrictEventUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventUnionEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictEventTable_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEventTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventTableEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEventTable_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_StrictEventTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventTableEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictEventErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEventErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _strictEventErrEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEventErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictEventErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictEventErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictEventErrResultTag.response) {
            _strictEventErrEventStreamController.add(null);
          } else {
            _strictEventErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventFieldsErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictEventFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictEventFieldsErrResultTag
                  .response) {
            _strictEventFieldsErrEventStreamController
                .add($response.response!.someField);
          } else {
            _strictEventFieldsErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventUnionErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictEventUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictEventUnionErrResultTag
                  .response) {
            _strictEventUnionErrEventStreamController.add($response.response!);
          } else {
            _strictEventUnionErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventTableErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictEventTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictEventTableErrResultTag
                  .response) {
            _strictEventTableErrEventStreamController.add($response.response!);
          } else {
            _strictEventTableErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEvent_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEvent_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _flexibleEventEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEvent_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          _flexibleEventEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventFieldsEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _flexibleEventFieldsEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventUnionEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _flexibleEventUnionEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventTableEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _flexibleEventTableEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolFlexibleEventErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolFlexibleEventErrResultTag
                  .response) {
            _flexibleEventErrEventStreamController.add(null);
          } else {
            _flexibleEventErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventFieldsErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResultTag
                  .response) {
            _flexibleEventFieldsErrEventStreamController
                .add($response.response!.someField);
          } else {
            _flexibleEventFieldsErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventUnionErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolFlexibleEventUnionErrResultTag
                  .response) {
            _flexibleEventUnionErrEventStreamController
                .add($response.response!);
          } else {
            _flexibleEventUnionErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventTableErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolFlexibleEventTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolFlexibleEventTableErrResultTag
                  .response) {
            _flexibleEventTableErrEventStreamController
                .add($response.response!);
          } else {
            _flexibleEventTableErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      default:
        $message.closeHandles();
        switch ($message.strictness) {
          case $fidl.CallStrictness.flexible:
            const String _name =
                "UnknownInteractionsAjarProtocol [UnknownEvent]";
            $fidl.performCtrlWithExceptionHandling(
                _name, ctrl, 'event', _$unknownEventStreamController.addError,
                () {
              _$unknownEventStreamController
                  .add($fidl.UnknownEvent($message.ordinal));
            });
            break;
          case $fidl.CallStrictness.strict:
            ctrl.proxyError($fidl.FidlError(
                'Unexpected message ordinal: ${$message.ordinal}'));
            break;
        }
        break;
    }
  }

  void _handleResponse($fidl.IncomingMessage $message) {
    final int $txid = $message.txid;
    if ($txid == 0) {
      _handleEvent($message);
      return;
    }
    final $async.Completer? $completer = ctrl.getCompleter($txid);
    if ($completer == null) {
      $message.closeHandles();
      return;
    }
    switch ($message.ordinal) {
      case _kUnknownInteractionsAjarProtocol_StrictTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWay_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWay_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictTwoWayErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictTwoWayErrResultTag
                  .response) {
            $completer.complete(null);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResultTag
                  .response) {
            $completer.complete($response.response!.someField);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsAjarProtocolStrictTwoWayTableErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      default:
        ctrl.proxyError(
            $fidl.FidlError('Unexpected message ordinal: ${$message.ordinal}'));
        break;
    }
  }

  @override
  $async.Future<void> strictOneWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictOneWay_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    return $async.Future.sync(() {
      ctrl.sendMessage($encoder.message);
    });
  }

  @override
  $async.Future<void> flexibleOneWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_FlexibleOneWay_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    return $async.Future.sync(() {
      ctrl.sendMessage($encoder.message);
    });
  }

  @override
  $async.Future<void> strictTwoWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWay_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> strictTwoWayFields() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>
      strictTwoWayUnion() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>
      strictTwoWayTable() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<void> strictTwoWayErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> strictTwoWayFieldsErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>
      strictTwoWayUnionErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>
      strictTwoWayTableErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  final _strictEventEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get strictEvent =>
      _strictEventEventStreamController.stream;

  final _strictEventFieldsEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get strictEventFields =>
      _strictEventFieldsEventStreamController.stream;

  final _strictEventUnionEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolStrictEventUnionRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventUnionRequest>
      get strictEventUnion => _strictEventUnionEventStreamController.stream;

  final _strictEventTableEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolStrictEventTableRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventTableRequest>
      get strictEventTable => _strictEventTableEventStreamController.stream;

  final _strictEventErrEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get strictEventErr =>
      _strictEventErrEventStreamController.stream;

  final _strictEventFieldsErrEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get strictEventFieldsErr =>
      _strictEventFieldsErrEventStreamController.stream;

  final _strictEventUnionErrEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>
      get strictEventUnionErr =>
          _strictEventUnionErrEventStreamController.stream;

  final _strictEventTableErrEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolStrictEventTableErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolStrictEventTableErrResponse>
      get strictEventTableErr =>
          _strictEventTableErrEventStreamController.stream;

  final _flexibleEventEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get flexibleEvent =>
      _flexibleEventEventStreamController.stream;

  final _flexibleEventFieldsEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get flexibleEventFields =>
      _flexibleEventFieldsEventStreamController.stream;

  final _flexibleEventUnionEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>
      get flexibleEventUnion => _flexibleEventUnionEventStreamController.stream;

  final _flexibleEventTableEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolFlexibleEventTableRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventTableRequest>
      get flexibleEventTable => _flexibleEventTableEventStreamController.stream;

  final _flexibleEventErrEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get flexibleEventErr =>
      _flexibleEventErrEventStreamController.stream;

  final _flexibleEventFieldsErrEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get flexibleEventFieldsErr =>
      _flexibleEventFieldsErrEventStreamController.stream;

  final _flexibleEventUnionErrEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>
      get flexibleEventUnionErr =>
          _flexibleEventUnionErrEventStreamController.stream;

  final _flexibleEventTableErrEventStreamController = $async.StreamController<
      UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>
      get flexibleEventTableErr =>
          _flexibleEventTableErrEventStreamController.stream;

  final _$unknownEventStreamController =
      $async.StreamController<$fidl.UnknownEvent>.broadcast();
  @override
  $async.Stream<$fidl.UnknownEvent> get $unknownEvents =>
      _$unknownEventStreamController.stream;
}

class UnknownInteractionsAjarProtocolBinding
    extends $fidl.AsyncBinding<UnknownInteractionsAjarProtocolServer> {
  UnknownInteractionsAjarProtocolBinding()
      : super(r"UnknownInteractionsAjarProtocol") {
    final List<$async.StreamSubscription<dynamic>> $subscriptions = [];
    void $unsubscribe() {
      for (final $sub in $subscriptions) {
        $sub.cancel();
      }
      $subscriptions.clear();
    }

    whenBound.then((_) {
      final impl = this.impl;
      if (impl != null) {
        final _strictEvent_stream = impl.strictEvent;
        if (_strictEvent_stream != null) {
          $subscriptions.add(_strictEvent_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEvent_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEvent_Type.response!;

            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEvent_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventFields_stream = impl.strictEventFields;
        if (_strictEventFields_stream != null) {
          $subscriptions.add(_strictEventFields_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEventFields_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEventFields_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictEventFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEventFields_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventUnion_stream = impl.strictEventUnion;
        if (_strictEventUnion_stream != null) {
          $subscriptions.add(_strictEventUnion_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEventUnion_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEventUnion_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictEventUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEventUnion_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventTable_stream = impl.strictEventTable;
        if (_strictEventTable_stream != null) {
          $subscriptions.add(_strictEventTable_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEventTable_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEventTable_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictEventTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEventTable_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventErr_stream = impl.strictEventErr;
        if (_strictEventErr_stream != null) {
          $subscriptions.add(_strictEventErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (void
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolStrictEventErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsAjarProtocolStrictEventErrResult
                .withResponse(
                    UnknownInteractionsAjarProtocolStrictEventErrResponse()));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolStrictEventErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsAjarProtocolStrictEventErrResult.withErr(
                      $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEventErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEventErr_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictEventErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEventErr_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventFieldsErr_stream = impl.strictEventFieldsErr;
        if (_strictEventFieldsErr_stream != null) {
          $subscriptions.add(_strictEventFieldsErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (int
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsAjarProtocolStrictEventFieldsErrResult
                .withResponse(
                    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(
                        someField: $responseValue)));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult
                      .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEventFieldsErr_Type
                    .name,
                _e,
                close);
          }));
        }
        final _strictEventUnionErr_stream = impl.strictEventUnionErr;
        if (_strictEventUnionErr_stream != null) {
          $subscriptions.add(_strictEventUnionErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsAjarProtocolStrictEventUnionErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsAjarProtocolStrictEventUnionErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsAjarProtocolStrictEventUnionErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolStrictEventUnionErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(UnknownInteractionsAjarProtocolStrictEventUnionErrResult
                  .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEventUnionErr_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventTableErr_stream = impl.strictEventTableErr;
        if (_strictEventTableErr_stream != null) {
          $subscriptions.add(_strictEventTableErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsAjarProtocolStrictEventTableErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsAjarProtocolStrictEventTableErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsAjarProtocolStrictEventTableErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolStrictEventTableErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(UnknownInteractionsAjarProtocolStrictEventTableErrResult
                  .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_StrictEventTableErr_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEvent_stream = impl.flexibleEvent;
        if (_flexibleEvent_stream != null) {
          $subscriptions.add(_flexibleEvent_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEvent_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEvent_Type.response!;

            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEvent_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventFields_stream = impl.flexibleEventFields;
        if (_flexibleEventFields_stream != null) {
          $subscriptions.add(_flexibleEventFields_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEventFields_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventUnion_stream = impl.flexibleEventUnion;
        if (_flexibleEventUnion_stream != null) {
          $subscriptions.add(_flexibleEventUnion_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnion_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventTable_stream = impl.flexibleEventTable;
        if (_flexibleEventTable_stream != null) {
          $subscriptions.add(_flexibleEventTable_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEventTable_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventErr_stream = impl.flexibleEventErr;
        if (_flexibleEventErr_stream != null) {
          $subscriptions.add(_flexibleEventErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (void
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolFlexibleEventErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsAjarProtocolFlexibleEventErrResult
                .withResponse(
                    UnknownInteractionsAjarProtocolFlexibleEventErrResponse()));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolFlexibleEventErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsAjarProtocolFlexibleEventErrResult.withErr(
                      $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEventErr_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventFieldsErr_stream = impl.flexibleEventFieldsErr;
        if (_flexibleEventFieldsErr_stream != null) {
          $subscriptions.add(_flexibleEventFieldsErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (int
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult
                .withResponse(
                    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(
                        someField: $responseValue)));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult
                      .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEventFieldsErr_Type
                    .name,
                _e,
                close);
          }));
        }
        final _flexibleEventUnionErr_stream = impl.flexibleEventUnionErr;
        if (_flexibleEventUnionErr_stream != null) {
          $subscriptions.add(_flexibleEventUnionErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult
                      .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEventUnionErr_Type
                    .name,
                _e,
                close);
          }));
        }
        final _flexibleEventTableErr_stream = impl.flexibleEventTableErr;
        if (_flexibleEventTableErr_stream != null) {
          $subscriptions.add(_flexibleEventTableErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsAjarProtocolFlexibleEventTableErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult
                      .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsAjarProtocol_FlexibleEventTableErr_Type
                    .name,
                _e,
                close);
          }));
        }
      }
    });
    whenClosed.then((_) => $unsubscribe());
  }

  @override
  void handleMessage(
      $fidl.IncomingMessage $message, $fidl.OutgoingMessageSink $respond) {
    final $wireFormat = $message.parseWireFormat();
    switch ($message.ordinal) {
      case _kUnknownInteractionsAjarProtocol_StrictOneWay_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictOneWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictOneWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictOneWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictOneWay();
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_FlexibleOneWay_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_FlexibleOneWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_FlexibleOneWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_FlexibleOneWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleOneWay();
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWay();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWay_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayFields();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictTwoWayFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayUnion();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictTwoWayUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayTable();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictTwoWayTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsAjarProtocolStrictTwoWayErrResult
                .withResponse(
                    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse());
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsAjarProtocolStrictTwoWayErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictTwoWayErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayFieldsErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult
                .withResponse(
                    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(
                        someField: $responseValue));
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictTwoWayFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayUnionErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictTwoWayUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>>(
                  $message,
                  _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayTableErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsAjarProtocol_StrictTwoWayTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      default:
        $message.closeHandles();
        switch ($message.strictness) {
          case $fidl.CallStrictness.flexible:
            if ($message.txid == 0) {
              final $fidl.UnknownMethodMetadata $metadata =
                  $fidl.UnknownMethodMetadata(
                      $message.ordinal, $fidl.UnknownMethodType.oneWay);
              impl!.$unknownMethod($metadata).catchError((_e) {
                $fidl.handleException("unknown one-way", _e, close);
              });
              break;
            } else {
              continue $flexibleTwoWay;
            }
          $flexibleTwoWay:
          case $fidl.CallStrictness.strict:
            throw $fidl.FidlError(
                r'Unexpected message name for UnknownInteractionsAjarProtocolBinding');
        }
        break;
    }
  }
}

// strictOneWay: ()
const int _kUnknownInteractionsClosedProtocol_StrictOneWay_Ordinal =
    0x59282385962da24;
const $fidl.MethodType _kUnknownInteractionsClosedProtocol_StrictOneWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsClosedProtocol.StrictOneWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictTwoWay: () -> ()
const int _kUnknownInteractionsClosedProtocol_StrictTwoWay_Ordinal =
    0x5eda305d6b22f1f7;
const $fidl.MethodType _kUnknownInteractionsClosedProtocol_StrictTwoWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictTwoWayFields: () -> (int someField)
const int _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Ordinal =
    0x1323afa3e0541253;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWayFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// strictTwoWayUnion: () -> (UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse payload)
const int _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Ordinal =
    0x68b32554eb0f6fa7;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>(
        type: kUnknownInteractionsClosedProtocolStrictTwoWayUnionResponse_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWayUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayTable: () -> (UnknownInteractionsClosedProtocolStrictTwoWayTableResponse payload)
const int _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Ordinal =
    0x6e4a94d44b69e785;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>(
        type: kUnknownInteractionsClosedProtocolStrictTwoWayTableResponse_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWayTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayErr: () -> ()
const int _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Ordinal =
    0x4fa35d5433db4d3a;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type = $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsClosedProtocolStrictTwoWayErrResult>(
        type: kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWayErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayFieldsErr: () -> (int someField)
const int _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Ordinal =
    0xb22aebf23bb58fd;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>(
        type:
            kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWayFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayUnionErr: () -> (UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse payload)
const int _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Ordinal =
    0xcd65d4d29a43c80;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>(
        type:
            kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWayUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayTableErr: () -> (UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse payload)
const int _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Ordinal =
    0x117dde20b92f7b90;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>(
        type:
            kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictTwoWayTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEvent:  -> ()
const int _kUnknownInteractionsClosedProtocol_StrictEvent_Ordinal =
    0xa8ee6ee302f693b;
const $fidl.MethodType _kUnknownInteractionsClosedProtocol_StrictEvent_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsClosedProtocol.StrictEvent",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictEventFields:  -> (int someField)
const int _kUnknownInteractionsClosedProtocol_StrictEventFields_Ordinal =
    0x5d7c57b62e9c3a74;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictEventFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictEventFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// strictEventUnion:  -> (UnknownInteractionsClosedProtocolStrictEventUnionRequest payload)
const int _kUnknownInteractionsClosedProtocol_StrictEventUnion_Ordinal =
    0x3b8475deeb4a9d64;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictEventUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsClosedProtocolStrictEventUnionRequest>(
        type: kUnknownInteractionsClosedProtocolStrictEventUnionRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictEventUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventTable:  -> (UnknownInteractionsClosedProtocolStrictEventTableRequest payload)
const int _kUnknownInteractionsClosedProtocol_StrictEventTable_Ordinal =
    0x27da43fc85a7f5be;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictEventTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsClosedProtocolStrictEventTableRequest>(
        type: kUnknownInteractionsClosedProtocolStrictEventTableRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictEventTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventErr:  -> ()
const int _kUnknownInteractionsClosedProtocol_StrictEventErr_Ordinal =
    0x12b105b1430a1201;
const $fidl.MethodType _kUnknownInteractionsClosedProtocol_StrictEventErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsClosedProtocolStrictEventErrResult>(
        type: kUnknownInteractionsClosedProtocol_StrictEventErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictEventErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventFieldsErr:  -> (int someField)
const int _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Ordinal =
    0x2d16399d2e8a5c96;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>(
        type:
            kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictEventFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventUnionErr:  -> (UnknownInteractionsClosedProtocolStrictEventUnionErrResponse payload)
const int _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Ordinal =
    0x6dcf67f2a1d16034;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictEventUnionErrResult>(
        type:
            kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictEventUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventTableErr:  -> (UnknownInteractionsClosedProtocolStrictEventTableErrResponse payload)
const int _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Ordinal =
    0x4e90e92eafa9eefa;
const $fidl.MethodType
    _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<
            UnknownInteractionsClosedProtocolStrictEventTableErrResult>(
        type:
            kUnknownInteractionsClosedProtocol_StrictEventTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsClosedProtocol.StrictEventTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);

abstract class UnknownInteractionsClosedProtocol {
  $fidl.ServiceData? get $serviceData =>
      UnknownInteractionsClosedProtocolData();
  $async.Future<void> strictOneWay();
  $async.Future<void> strictTwoWay();
  $async.Future<int> strictTwoWayFields();
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>
      strictTwoWayUnion();
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>
      strictTwoWayTable();
  $async.Future<void> strictTwoWayErr();
  $async.Future<int> strictTwoWayFieldsErr();
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>
      strictTwoWayUnionErr();
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>
      strictTwoWayTableErr();
  $async.Stream<void>? get strictEvent;
  $async.Stream<int>? get strictEventFields;
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventUnionRequest>?
      get strictEventUnion;
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventTableRequest>?
      get strictEventTable;
  $async.Stream<void>? get strictEventErr;
  $async.Stream<int>? get strictEventFieldsErr;
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>?
      get strictEventUnionErr;
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventTableErrResponse>?
      get strictEventTableErr;
} // TODO: Remove ServiceData for non-service

class UnknownInteractionsClosedProtocolData
    implements $fidl.ServiceData<UnknownInteractionsClosedProtocol> {
  const UnknownInteractionsClosedProtocolData();

  @override
  String getName() {
    return "";
  }

  @override
  $fidl.AsyncBinding getBinding() {
    return UnknownInteractionsClosedProtocolBinding();
  }
}

class UnknownInteractionsClosedProtocolProxy
    extends $fidl.AsyncProxy<UnknownInteractionsClosedProtocol>
    implements UnknownInteractionsClosedProtocol {
  UnknownInteractionsClosedProtocolProxy()
      : super($fidl.AsyncProxyController<UnknownInteractionsClosedProtocol>(
            $interfaceName: r'UnknownInteractionsClosedProtocol')) {
    ctrl.onResponse = _handleResponse;
    ctrl.whenClosed.then((_) {
      _strictEventEventStreamController.close();
      _strictEventFieldsEventStreamController.close();
      _strictEventUnionEventStreamController.close();
      _strictEventTableEventStreamController.close();
      _strictEventErrEventStreamController.close();
      _strictEventFieldsErrEventStreamController.close();
      _strictEventUnionErrEventStreamController.close();
      _strictEventTableErrEventStreamController.close();
    }, onError: (_) {});
  }
  @override
  Null get $serviceData => null;

  void _handleEvent($fidl.IncomingMessage $message) {
    switch ($message.ordinal) {
      case _kUnknownInteractionsClosedProtocol_StrictEvent_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEvent_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _strictEventEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEvent_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          _strictEventEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictEventFields_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEventFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventFieldsEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEventFields_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsClosedProtocol_StrictEventFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventFieldsEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictEventUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEventUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventUnionEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEventUnion_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsClosedProtocol_StrictEventUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventUnionEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictEventTable_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEventTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventTableEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEventTable_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsClosedProtocol_StrictEventTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventTableEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictEventErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEventErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _strictEventErrEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEventErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictEventErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictEventErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictEventErrResultTag
                  .response) {
            _strictEventErrEventStreamController.add(null);
          } else {
            _strictEventErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventFieldsErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictEventFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictEventFieldsErrResultTag
                  .response) {
            _strictEventFieldsErrEventStreamController
                .add($response.response!.someField);
          } else {
            _strictEventFieldsErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventUnionErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictEventUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictEventUnionErrResultTag
                  .response) {
            _strictEventUnionErrEventStreamController.add($response.response!);
          } else {
            _strictEventUnionErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventTableErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictEventTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictEventTableErrResultTag
                  .response) {
            _strictEventTableErrEventStreamController.add($response.response!);
          } else {
            _strictEventTableErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      default:
        $message.closeHandles();
        ctrl.proxyError(
            $fidl.FidlError('Unexpected message ordinal: ${$message.ordinal}'));
        break;
    }
  }

  void _handleResponse($fidl.IncomingMessage $message) {
    final int $txid = $message.txid;
    if ($txid == 0) {
      _handleEvent($message);
      return;
    }
    final $async.Completer? $completer = ctrl.getCompleter($txid);
    if ($completer == null) {
      $message.closeHandles();
      return;
    }
    switch ($message.ordinal) {
      case _kUnknownInteractionsClosedProtocol_StrictTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWay_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWay_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictTwoWayErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictTwoWayErrResultTag
                  .response) {
            $completer.complete(null);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResultTag
                  .response) {
            $completer.complete($response.response!.someField);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsClosedProtocolStrictTwoWayTableErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      default:
        ctrl.proxyError(
            $fidl.FidlError('Unexpected message ordinal: ${$message.ordinal}'));
        break;
    }
  }

  @override
  $async.Future<void> strictOneWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictOneWay_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    return $async.Future.sync(() {
      ctrl.sendMessage($encoder.message);
    });
  }

  @override
  $async.Future<void> strictTwoWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWay_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> strictTwoWayFields() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>
      strictTwoWayUnion() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>
      strictTwoWayTable() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<void> strictTwoWayErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> strictTwoWayFieldsErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>
      strictTwoWayUnionErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>
      strictTwoWayTableErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  final _strictEventEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get strictEvent =>
      _strictEventEventStreamController.stream;

  final _strictEventFieldsEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get strictEventFields =>
      _strictEventFieldsEventStreamController.stream;

  final _strictEventUnionEventStreamController = $async.StreamController<
      UnknownInteractionsClosedProtocolStrictEventUnionRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventUnionRequest>
      get strictEventUnion => _strictEventUnionEventStreamController.stream;

  final _strictEventTableEventStreamController = $async.StreamController<
      UnknownInteractionsClosedProtocolStrictEventTableRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventTableRequest>
      get strictEventTable => _strictEventTableEventStreamController.stream;

  final _strictEventErrEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get strictEventErr =>
      _strictEventErrEventStreamController.stream;

  final _strictEventFieldsErrEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get strictEventFieldsErr =>
      _strictEventFieldsErrEventStreamController.stream;

  final _strictEventUnionErrEventStreamController = $async.StreamController<
      UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>
      get strictEventUnionErr =>
          _strictEventUnionErrEventStreamController.stream;

  final _strictEventTableErrEventStreamController = $async.StreamController<
      UnknownInteractionsClosedProtocolStrictEventTableErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsClosedProtocolStrictEventTableErrResponse>
      get strictEventTableErr =>
          _strictEventTableErrEventStreamController.stream;
}

class UnknownInteractionsClosedProtocolBinding
    extends $fidl.AsyncBinding<UnknownInteractionsClosedProtocol> {
  UnknownInteractionsClosedProtocolBinding()
      : super(r"UnknownInteractionsClosedProtocol") {
    final List<$async.StreamSubscription<dynamic>> $subscriptions = [];
    void $unsubscribe() {
      for (final $sub in $subscriptions) {
        $sub.cancel();
      }
      $subscriptions.clear();
    }

    whenBound.then((_) {
      final impl = this.impl;
      if (impl != null) {
        final _strictEvent_stream = impl.strictEvent;
        if (_strictEvent_stream != null) {
          $subscriptions.add(_strictEvent_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEvent_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEvent_Type.response!;

            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEvent_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventFields_stream = impl.strictEventFields;
        if (_strictEventFields_stream != null) {
          $subscriptions.add(_strictEventFields_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEventFields_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEventFields_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictEventFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEventFields_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventUnion_stream = impl.strictEventUnion;
        if (_strictEventUnion_stream != null) {
          $subscriptions.add(_strictEventUnion_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEventUnion_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEventUnion_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictEventUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEventUnion_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventTable_stream = impl.strictEventTable;
        if (_strictEventTable_stream != null) {
          $subscriptions.add(_strictEventTable_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEventTable_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEventTable_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictEventTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEventTable_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventErr_stream = impl.strictEventErr;
        if (_strictEventErr_stream != null) {
          $subscriptions.add(_strictEventErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (void
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsClosedProtocolStrictEventErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsClosedProtocolStrictEventErrResult
                .withResponse(
                    UnknownInteractionsClosedProtocolStrictEventErrResponse()));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsClosedProtocolStrictEventErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsClosedProtocolStrictEventErrResult.withErr(
                      $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEventErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEventErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictEventErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEventErr_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventFieldsErr_stream = impl.strictEventFieldsErr;
        if (_strictEventFieldsErr_stream != null) {
          $subscriptions.add(_strictEventFieldsErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (int
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsClosedProtocolStrictEventFieldsErrResult
                .withResponse(
                    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(
                        someField: $responseValue)));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult
                      .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEventFieldsErr_Type
                    .name,
                _e,
                close);
          }));
        }
        final _strictEventUnionErr_stream = impl.strictEventUnionErr;
        if (_strictEventUnionErr_stream != null) {
          $subscriptions.add(_strictEventUnionErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsClosedProtocolStrictEventUnionErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsClosedProtocolStrictEventUnionErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsClosedProtocolStrictEventUnionErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsClosedProtocolStrictEventUnionErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsClosedProtocolStrictEventUnionErrResult
                      .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEventUnionErr_Type
                    .name,
                _e,
                close);
          }));
        }
        final _strictEventTableErr_stream = impl.strictEventTableErr;
        if (_strictEventTableErr_stream != null) {
          $subscriptions.add(_strictEventTableErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsClosedProtocolStrictEventTableErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsClosedProtocolStrictEventTableErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsClosedProtocolStrictEventTableErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsClosedProtocolStrictEventTableErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsClosedProtocolStrictEventTableErrResult
                      .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsClosedProtocol_StrictEventTableErr_Type
                    .name,
                _e,
                close);
          }));
        }
      }
    });
    whenClosed.then((_) => $unsubscribe());
  }

  @override
  void handleMessage(
      $fidl.IncomingMessage $message, $fidl.OutgoingMessageSink $respond) {
    final $wireFormat = $message.parseWireFormat();
    switch ($message.ordinal) {
      case _kUnknownInteractionsClosedProtocol_StrictOneWay_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictOneWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictOneWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictOneWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictOneWay();
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWay();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWay_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayFields();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictTwoWayFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayUnion();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictTwoWayUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayTable();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictTwoWayTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsClosedProtocolStrictTwoWayErrResult
                .withResponse(
                    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse());
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsClosedProtocolStrictTwoWayErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictTwoWayErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayFieldsErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult
                .withResponse(
                    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(
                        someField: $responseValue));
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictTwoWayFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayUnionErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictTwoWayUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>>(
                  $message,
                  _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayTableErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsClosedProtocol_StrictTwoWayTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      default:
        $message.closeHandles();
        throw $fidl.FidlError(
            r'Unexpected message name for UnknownInteractionsClosedProtocolBinding');
    }
  }
}

// strictOneWay: ()
const int _kUnknownInteractionsProtocol_StrictOneWay_Ordinal =
    0x4e7273b964d117a6;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictOneWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsProtocol.StrictOneWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// flexibleOneWay: ()
const int _kUnknownInteractionsProtocol_FlexibleOneWay_Ordinal =
    0x818bb3a7a910446;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleOneWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsProtocol.FlexibleOneWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictTwoWay: () -> ()
const int _kUnknownInteractionsProtocol_StrictTwoWay_Ordinal =
    0x734c996b0f37b942;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictTwoWay_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsProtocol.StrictTwoWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictTwoWayFields: () -> (int someField)
const int _kUnknownInteractionsProtocol_StrictTwoWayFields_Ordinal =
    0x334f4e7fff460ae3;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictTwoWayFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictTwoWayFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// strictTwoWayUnion: () -> (UnknownInteractionsProtocolStrictTwoWayUnionResponse payload)
const int _kUnknownInteractionsProtocol_StrictTwoWayUnion_Ordinal =
    0x2212805eca592cad;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictTwoWayUnionResponse>(
        type: kUnknownInteractionsProtocolStrictTwoWayUnionResponse_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictTwoWayUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayTable: () -> (UnknownInteractionsProtocolStrictTwoWayTableResponse payload)
const int _kUnknownInteractionsProtocol_StrictTwoWayTable_Ordinal =
    0x746ebf8659ff23b7;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictTwoWayTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictTwoWayTableResponse>(
        type: kUnknownInteractionsProtocolStrictTwoWayTableResponse_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictTwoWayTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayErr: () -> ()
const int _kUnknownInteractionsProtocol_StrictTwoWayErr_Ordinal =
    0x6d1c6002c51bb967;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictTwoWayErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictTwoWayErrResult>(
        type: kUnknownInteractionsProtocol_StrictTwoWayErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictTwoWayErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayFieldsErr: () -> (int someField)
const int _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Ordinal =
    0x2182a49480e5bd2b;
const $fidl.MethodType
    _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type = $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>(
        type: kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictTwoWayFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayUnionErr: () -> (UnknownInteractionsProtocolStrictTwoWayUnionErrResponse payload)
const int _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Ordinal =
    0x453af745d38b20ca;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictTwoWayUnionErrResult>(
        type: kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictTwoWayUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictTwoWayTableErr: () -> (UnknownInteractionsProtocolStrictTwoWayTableErrResponse payload)
const int _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Ordinal =
    0x4c26c7ab89cb68d8;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictTwoWayTableErrResult>(
        type: kUnknownInteractionsProtocol_StrictTwoWayTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictTwoWayTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWay: () -> ()
const int _kUnknownInteractionsProtocol_FlexibleTwoWay_Ordinal =
    0x4a5bb3397008b7c;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleTwoWay_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWay_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWay",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWayFields: () -> (int someField)
const int _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Ordinal =
    0x3b13f82f44813a32;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWayFields_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWayFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWayUnion: () -> (UnknownInteractionsProtocolFlexibleTwoWayUnionResponse payload)
const int _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Ordinal =
    0x44301e4e8d514fb6;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayUnionResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWayUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWayTable: () -> (UnknownInteractionsProtocolFlexibleTwoWayTableResponse payload)
const int _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Ordinal =
    0x7f492934b6c76187;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayTableResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWayTable_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWayTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWayErr: () -> ()
const int _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Ordinal =
    0x61240f878cc37c07;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWayErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWayErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWayFieldsErr: () -> (int someField)
const int _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Ordinal =
    0xf2b9611a9089b05;
const $fidl.MethodType
    _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWayFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWayUnionErr: () -> (UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse payload)
const int _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Ordinal =
    0x2172940a75f107d7;
const $fidl.MethodType
    _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWayUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleTwoWayTableErr: () -> (UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse payload)
const int _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Ordinal =
    0x6d8aab48e1693bf2;
const $fidl.MethodType
    _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleTwoWayTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEvent:  -> ()
const int _kUnknownInteractionsProtocol_StrictEvent_Ordinal = 0x9842669255c4fc1;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEvent_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsProtocol.StrictEvent",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// strictEventFields:  -> (int someField)
const int _kUnknownInteractionsProtocol_StrictEventFields_Ordinal =
    0x7b75ae46520ee732;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEventFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictEventFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// strictEventUnion:  -> (UnknownInteractionsProtocolStrictEventUnionRequest payload)
const int _kUnknownInteractionsProtocol_StrictEventUnion_Ordinal =
    0x3663b5197598cbda;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEventUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictEventUnionRequest>(
        type: kUnknownInteractionsProtocolStrictEventUnionRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictEventUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventTable:  -> (UnknownInteractionsProtocolStrictEventTableRequest payload)
const int _kUnknownInteractionsProtocol_StrictEventTable_Ordinal =
    0x25a10039a9f96910;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEventTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictEventTableRequest>(
        type: kUnknownInteractionsProtocolStrictEventTableRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictEventTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventErr:  -> ()
const int _kUnknownInteractionsProtocol_StrictEventErr_Ordinal =
    0x3d956048f723bc6d;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEventErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictEventErrResult>(
        type: kUnknownInteractionsProtocol_StrictEventErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictEventErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventFieldsErr:  -> (int someField)
const int _kUnknownInteractionsProtocol_StrictEventFieldsErr_Ordinal =
    0x72c0566865e53c8b;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEventFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictEventFieldsErrResult>(
        type: kUnknownInteractionsProtocol_StrictEventFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictEventFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventUnionErr:  -> (UnknownInteractionsProtocolStrictEventUnionErrResponse payload)
const int _kUnknownInteractionsProtocol_StrictEventUnionErr_Ordinal =
    0x40f96851e6f82abb;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEventUnionErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictEventUnionErrResult>(
        type: kUnknownInteractionsProtocol_StrictEventUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictEventUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// strictEventTableErr:  -> (UnknownInteractionsProtocolStrictEventTableErrResponse payload)
const int _kUnknownInteractionsProtocol_StrictEventTableErr_Ordinal =
    0x6ca24cbed7b2784a;
const $fidl.MethodType _kUnknownInteractionsProtocol_StrictEventTableErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolStrictEventTableErrResult>(
        type: kUnknownInteractionsProtocol_StrictEventTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.StrictEventTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEvent:  -> ()
const int _kUnknownInteractionsProtocol_FlexibleEvent_Ordinal =
    0x61bb1fab7d767866;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleEvent_Type =
    $fidl.MethodType(
  request: [],
  response: [],
  name: r"UnknownInteractionsProtocol.FlexibleEvent",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 0,
);
// flexibleEventFields:  -> (int someField)
const int _kUnknownInteractionsProtocol_FlexibleEventFields_Ordinal =
    0x3226dff9b0c1d801;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleEventFields_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<int>(type: $fidl.Int32Type(), offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleEventFields",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 4,
);
// flexibleEventUnion:  -> (UnknownInteractionsProtocolFlexibleEventUnionRequest payload)
const int _kUnknownInteractionsProtocol_FlexibleEventUnion_Ordinal =
    0x22afd161ca71e467;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleEventUnion_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleEventUnionRequest>(
        type: kUnknownInteractionsProtocolFlexibleEventUnionRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleEventUnion",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventTable:  -> (UnknownInteractionsProtocolFlexibleEventTableRequest payload)
const int _kUnknownInteractionsProtocol_FlexibleEventTable_Ordinal =
    0x4f72dd46888b89e0;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleEventTable_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleEventTableRequest>(
        type: kUnknownInteractionsProtocolFlexibleEventTableRequest_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleEventTable",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventErr:  -> ()
const int _kUnknownInteractionsProtocol_FlexibleEventErr_Ordinal =
    0x4bda3e6fb22bb5a9;
const $fidl.MethodType _kUnknownInteractionsProtocol_FlexibleEventErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleEventErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleEventErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleEventErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventFieldsErr:  -> (int someField)
const int _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Ordinal =
    0xf370ade2f7c7a4a;
const $fidl.MethodType
    _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Type =
    $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleEventFieldsErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleEventFieldsErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventUnionErr:  -> (UnknownInteractionsProtocolFlexibleEventUnionErrResponse payload)
const int _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Ordinal =
    0xc94989e5f6707ec;
const $fidl.MethodType
    _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Type = $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleEventUnionErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleEventUnionErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleEventUnionErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);
// flexibleEventTableErr:  -> (UnknownInteractionsProtocolFlexibleEventTableErrResponse payload)
const int _kUnknownInteractionsProtocol_FlexibleEventTableErr_Ordinal =
    0x4dca02085aeb2d43;
const $fidl.MethodType
    _kUnknownInteractionsProtocol_FlexibleEventTableErr_Type = $fidl.MethodType(
  request: [],
  response: <$fidl.MemberType>[
    $fidl.MemberType<UnknownInteractionsProtocolFlexibleEventTableErrResult>(
        type: kUnknownInteractionsProtocol_FlexibleEventTableErr_Result_Type,
        offset: 0),
  ],
  name: r"UnknownInteractionsProtocol.FlexibleEventTableErr",
  requestInlineSizeV2: 0,
  responseInlineSizeV2: 16,
);

abstract class UnknownInteractionsProtocol {
  $fidl.ServiceData? get $serviceData => UnknownInteractionsProtocolData();
  $async.Future<void> strictOneWay();
  $async.Future<void> flexibleOneWay();
  $async.Future<void> strictTwoWay();
  $async.Future<int> strictTwoWayFields();
  $async.Future<UnknownInteractionsProtocolStrictTwoWayUnionResponse>
      strictTwoWayUnion();
  $async.Future<UnknownInteractionsProtocolStrictTwoWayTableResponse>
      strictTwoWayTable();
  $async.Future<void> strictTwoWayErr();
  $async.Future<int> strictTwoWayFieldsErr();
  $async.Future<UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>
      strictTwoWayUnionErr();
  $async.Future<UnknownInteractionsProtocolStrictTwoWayTableErrResponse>
      strictTwoWayTableErr();
  $async.Future<void> flexibleTwoWay();
  $async.Future<int> flexibleTwoWayFields();
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>
      flexibleTwoWayUnion();
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayTableResponse>
      flexibleTwoWayTable();
  $async.Future<void> flexibleTwoWayErr();
  $async.Future<int> flexibleTwoWayFieldsErr();
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>
      flexibleTwoWayUnionErr();
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>
      flexibleTwoWayTableErr();
  $async.Stream<void>? get strictEvent;
  $async.Stream<int>? get strictEventFields;
  $async.Stream<UnknownInteractionsProtocolStrictEventUnionRequest>?
      get strictEventUnion;
  $async.Stream<UnknownInteractionsProtocolStrictEventTableRequest>?
      get strictEventTable;
  $async.Stream<void>? get strictEventErr;
  $async.Stream<int>? get strictEventFieldsErr;
  $async.Stream<UnknownInteractionsProtocolStrictEventUnionErrResponse>?
      get strictEventUnionErr;
  $async.Stream<UnknownInteractionsProtocolStrictEventTableErrResponse>?
      get strictEventTableErr;
  $async.Stream<void>? get flexibleEvent;
  $async.Stream<int>? get flexibleEventFields;
  $async.Stream<UnknownInteractionsProtocolFlexibleEventUnionRequest>?
      get flexibleEventUnion;
  $async.Stream<UnknownInteractionsProtocolFlexibleEventTableRequest>?
      get flexibleEventTable;
  $async.Stream<void>? get flexibleEventErr;
  $async.Stream<int>? get flexibleEventFieldsErr;
  $async.Stream<UnknownInteractionsProtocolFlexibleEventUnionErrResponse>?
      get flexibleEventUnionErr;
  $async.Stream<UnknownInteractionsProtocolFlexibleEventTableErrResponse>?
      get flexibleEventTableErr;
}

abstract class UnknownInteractionsProtocolServer
    extends UnknownInteractionsProtocol {
  $async.Future<void> $unknownMethod($fidl.UnknownMethodMetadata metadata);
}

// TODO: Remove ServiceData for non-service
class UnknownInteractionsProtocolData
    implements $fidl.ServiceData<UnknownInteractionsProtocol> {
  const UnknownInteractionsProtocolData();

  @override
  String getName() {
    return "";
  }

  @override
  $fidl.AsyncBinding getBinding() {
    return UnknownInteractionsProtocolBinding();
  }
}

class UnknownInteractionsProtocolProxy
    extends $fidl.AsyncProxy<UnknownInteractionsProtocol>
    implements UnknownInteractionsProtocol {
  UnknownInteractionsProtocolProxy()
      : super($fidl.AsyncProxyController<UnknownInteractionsProtocol>(
            $interfaceName: r'UnknownInteractionsProtocol')) {
    ctrl.onResponse = _handleResponse;
    ctrl.whenClosed.then((_) {
      _strictEventEventStreamController.close();
      _strictEventFieldsEventStreamController.close();
      _strictEventUnionEventStreamController.close();
      _strictEventTableEventStreamController.close();
      _strictEventErrEventStreamController.close();
      _strictEventFieldsErrEventStreamController.close();
      _strictEventUnionErrEventStreamController.close();
      _strictEventTableErrEventStreamController.close();
      _flexibleEventEventStreamController.close();
      _flexibleEventFieldsEventStreamController.close();
      _flexibleEventUnionEventStreamController.close();
      _flexibleEventTableEventStreamController.close();
      _flexibleEventErrEventStreamController.close();
      _flexibleEventFieldsErrEventStreamController.close();
      _flexibleEventUnionErrEventStreamController.close();
      _flexibleEventTableErrEventStreamController.close();
      _$unknownEventStreamController.close();
    }, onError: (_) {});
  }
  @override
  Null get $serviceData => null;

  void _handleEvent($fidl.IncomingMessage $message) {
    switch ($message.ordinal) {
      case _kUnknownInteractionsProtocol_StrictEvent_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEvent_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _strictEventEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEvent_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          _strictEventEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictEventFields_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEventFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventFieldsEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEventFields_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_StrictEventFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventFieldsEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictEventUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEventUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventUnionEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEventUnion_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_StrictEventUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventUnionEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictEventTable_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEventTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventTableEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEventTable_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_StrictEventTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _strictEventTableEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictEventErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEventErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _strictEventErrEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEventErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictEventErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictEventErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictEventErrResultTag.response) {
            _strictEventErrEventStreamController.add(null);
          } else {
            _strictEventErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_StrictEventFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEventFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventFieldsErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEventFieldsErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictEventFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictEventFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictEventFieldsErrResultTag
                  .response) {
            _strictEventFieldsErrEventStreamController
                .add($response.response!.someField);
          } else {
            _strictEventFieldsErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_StrictEventUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEventUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventUnionErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEventUnionErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictEventUnionErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictEventUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictEventUnionErrResultTag
                  .response) {
            _strictEventUnionErrEventStreamController.add($response.response!);
          } else {
            _strictEventUnionErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_StrictEventTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictEventTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _strictEventTableErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictEventTableErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictEventTableErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictEventTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictEventTableErrResultTag
                  .response) {
            _strictEventTableErrEventStreamController.add($response.response!);
          } else {
            _strictEventTableErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEvent_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEvent_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'event', _flexibleEventEventStreamController.addError,
            () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEvent_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          _flexibleEventEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEventFields_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEventFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventFieldsEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEventFields_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_FlexibleEventFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _flexibleEventFieldsEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEventUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEventUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventUnionEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEventUnion_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_FlexibleEventUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _flexibleEventUnionEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEventTable_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEventTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventTableEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEventTable_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_FlexibleEventTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          _flexibleEventTableEventStreamController.add($response);
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEventErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEventErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEventErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleEventErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleEventErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleEventErrResultTag.response) {
            _flexibleEventErrEventStreamController.add(null);
          } else {
            _flexibleEventErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventFieldsErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleEventFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleEventFieldsErrResultTag
                  .response) {
            _flexibleEventFieldsErrEventStreamController
                .add($response.response!.someField);
          } else {
            _flexibleEventFieldsErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventUnionErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleEventUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleEventUnionErrResultTag
                  .response) {
            _flexibleEventUnionErrEventStreamController
                .add($response.response!);
          } else {
            _flexibleEventUnionErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleEventTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleEventTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(_name, ctrl, 'event',
            _flexibleEventTableErrEventStreamController.addError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleEventTableErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleEventTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleEventTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleEventTableErrResultTag
                  .response) {
            _flexibleEventTableErrEventStreamController
                .add($response.response!);
          } else {
            _flexibleEventTableErrEventStreamController
                .addError($fidl.MethodException($response.err));
          }
        });
        break;
      default:
        $message.closeHandles();
        switch ($message.strictness) {
          case $fidl.CallStrictness.flexible:
            const String _name = "UnknownInteractionsProtocol [UnknownEvent]";
            $fidl.performCtrlWithExceptionHandling(
                _name, ctrl, 'event', _$unknownEventStreamController.addError,
                () {
              _$unknownEventStreamController
                  .add($fidl.UnknownEvent($message.ordinal));
            });
            break;
          case $fidl.CallStrictness.strict:
            ctrl.proxyError($fidl.FidlError(
                'Unexpected message ordinal: ${$message.ordinal}'));
            break;
        }
        break;
    }
  }

  void _handleResponse($fidl.IncomingMessage $message) {
    final int $txid = $message.txid;
    if ($txid == 0) {
      _handleEvent($message);
      return;
    }
    final $async.Completer? $completer = ctrl.getCompleter($txid);
    if ($completer == null) {
      $message.closeHandles();
      return;
    }
    switch ($message.ordinal) {
      case _kUnknownInteractionsProtocol_StrictTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWay_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWay_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = null;

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayFields_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_StrictTwoWayFields_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayTable_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final $response = $fidl.decodeMessage(
              $message,
              _kUnknownInteractionsProtocol_StrictTwoWayTable_Type
                  .responseInlineSize($wireFormat),
              $types[0]);

          $completer.complete($response);
        });
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictTwoWayErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictTwoWayErrResultTag.response) {
            $completer.complete(null);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictTwoWayFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictTwoWayFieldsErrResultTag
                  .response) {
            $completer.complete($response.response!.someField);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictTwoWayUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictTwoWayUnionErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolStrictTwoWayTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolStrictTwoWayTableErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError($fidl.MethodException($response.err));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWay_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWay_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWay_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayResultTag.response) {
            $completer.complete(null);
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayFieldsResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayFieldsResultTag
                  .response) {
            $completer.complete($response.response!.someField);
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayUnionResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayUnionResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayTableResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayTableResultTag
                  .response) {
            $completer.complete($response.response!);
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type.response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayErrResult $response =
              $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayErrResultTag.response) {
            $completer.complete(null);
          } else if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayErrResultTag.err) {
            $completer.completeError($fidl.MethodException($response.err));
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag
                  .response) {
            $completer.complete($response.response!.someField);
          } else if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResultTag.err) {
            $completer.completeError($fidl.MethodException($response.err));
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayUnionErrResultTag.err) {
            $completer.completeError($fidl.MethodException($response.err));
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type.name;
        $fidl.performCtrlWithExceptionHandling(
            _name, ctrl, 'method response', $completer.completeError, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type
                  .response!;
          final $wireFormat = $message.parseWireFormat();
          // ignore: prefer_const_declarations
          final UnknownInteractionsProtocolFlexibleTwoWayTableErrResult
              $response = $fidl.decodeMessage(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type
                      .responseInlineSize($wireFormat),
                  $types[0]);

          if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag
                  .response) {
            $completer.complete($response.response!);
          } else if ($response.$tag ==
              UnknownInteractionsProtocolFlexibleTwoWayTableErrResultTag.err) {
            $completer.completeError($fidl.MethodException($response.err));
          } else {
            $completer.completeError(
                $fidl.FidlError.fromTransportErr($response.transportErr!));
          }
        });
        break;
      default:
        ctrl.proxyError(
            $fidl.FidlError('Unexpected message ordinal: ${$message.ordinal}'));
        break;
    }
  }

  @override
  $async.Future<void> strictOneWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictOneWay_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    return $async.Future.sync(() {
      ctrl.sendMessage($encoder.message);
    });
  }

  @override
  $async.Future<void> flexibleOneWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleOneWay_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    return $async.Future.sync(() {
      ctrl.sendMessage($encoder.message);
    });
  }

  @override
  $async.Future<void> strictTwoWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWay_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> strictTwoWayFields() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWayFields_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolStrictTwoWayUnionResponse>
      strictTwoWayUnion() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWayUnion_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolStrictTwoWayUnionResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolStrictTwoWayTableResponse>
      strictTwoWayTable() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWayTable_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolStrictTwoWayTableResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<void> strictTwoWayErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWayErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> strictTwoWayFieldsErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>
      strictTwoWayUnionErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolStrictTwoWayTableErrResponse>
      strictTwoWayTableErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Ordinal,
        0,
        $fidl.CallStrictness.strict);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolStrictTwoWayTableErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<void> flexibleTwoWay() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWay_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> flexibleTwoWayFields() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>
      flexibleTwoWayUnion() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayTableResponse>
      flexibleTwoWayTable() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolFlexibleTwoWayTableResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<void> flexibleTwoWayErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<void>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<int> flexibleTwoWayFieldsErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<int>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>
      flexibleTwoWayUnionErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  @override
  $async.Future<UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>
      flexibleTwoWayTableErr() {
    if (!ctrl.isBound) {
      return $async.Future.error(
          $fidl.FidlStateException('Proxy<${ctrl.$interfaceName}> is closed.'),
          StackTrace.current);
    }

    final $fidl.Encoder $encoder = $fidl.Encoder($fidl.kWireFormatDefault);
    $encoder.encodeMessageHeader(
        _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Ordinal,
        0,
        $fidl.CallStrictness.flexible);
    final $completer = $async.Completer<
        UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>();
    ctrl.sendMessageWithResponse($encoder.message, $completer);
    return $completer.future;
  }

  final _strictEventEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get strictEvent =>
      _strictEventEventStreamController.stream;

  final _strictEventFieldsEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get strictEventFields =>
      _strictEventFieldsEventStreamController.stream;

  final _strictEventUnionEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolStrictEventUnionRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolStrictEventUnionRequest>
      get strictEventUnion => _strictEventUnionEventStreamController.stream;

  final _strictEventTableEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolStrictEventTableRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolStrictEventTableRequest>
      get strictEventTable => _strictEventTableEventStreamController.stream;

  final _strictEventErrEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get strictEventErr =>
      _strictEventErrEventStreamController.stream;

  final _strictEventFieldsErrEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get strictEventFieldsErr =>
      _strictEventFieldsErrEventStreamController.stream;

  final _strictEventUnionErrEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolStrictEventUnionErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolStrictEventUnionErrResponse>
      get strictEventUnionErr =>
          _strictEventUnionErrEventStreamController.stream;

  final _strictEventTableErrEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolStrictEventTableErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolStrictEventTableErrResponse>
      get strictEventTableErr =>
          _strictEventTableErrEventStreamController.stream;

  final _flexibleEventEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get flexibleEvent =>
      _flexibleEventEventStreamController.stream;

  final _flexibleEventFieldsEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get flexibleEventFields =>
      _flexibleEventFieldsEventStreamController.stream;

  final _flexibleEventUnionEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolFlexibleEventUnionRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolFlexibleEventUnionRequest>
      get flexibleEventUnion => _flexibleEventUnionEventStreamController.stream;

  final _flexibleEventTableEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolFlexibleEventTableRequest>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolFlexibleEventTableRequest>
      get flexibleEventTable => _flexibleEventTableEventStreamController.stream;

  final _flexibleEventErrEventStreamController =
      $async.StreamController<void>.broadcast();
  @override
  $async.Stream<void> get flexibleEventErr =>
      _flexibleEventErrEventStreamController.stream;

  final _flexibleEventFieldsErrEventStreamController =
      $async.StreamController<int>.broadcast();
  @override
  $async.Stream<int> get flexibleEventFieldsErr =>
      _flexibleEventFieldsErrEventStreamController.stream;

  final _flexibleEventUnionErrEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolFlexibleEventUnionErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolFlexibleEventUnionErrResponse>
      get flexibleEventUnionErr =>
          _flexibleEventUnionErrEventStreamController.stream;

  final _flexibleEventTableErrEventStreamController = $async.StreamController<
      UnknownInteractionsProtocolFlexibleEventTableErrResponse>.broadcast();
  @override
  $async.Stream<UnknownInteractionsProtocolFlexibleEventTableErrResponse>
      get flexibleEventTableErr =>
          _flexibleEventTableErrEventStreamController.stream;

  final _$unknownEventStreamController =
      $async.StreamController<$fidl.UnknownEvent>.broadcast();
  @override
  $async.Stream<$fidl.UnknownEvent> get $unknownEvents =>
      _$unknownEventStreamController.stream;
}

class UnknownInteractionsProtocolBinding
    extends $fidl.AsyncBinding<UnknownInteractionsProtocolServer> {
  UnknownInteractionsProtocolBinding() : super(r"UnknownInteractionsProtocol") {
    final List<$async.StreamSubscription<dynamic>> $subscriptions = [];
    void $unsubscribe() {
      for (final $sub in $subscriptions) {
        $sub.cancel();
      }
      $subscriptions.clear();
    }

    whenBound.then((_) {
      final impl = this.impl;
      if (impl != null) {
        final _strictEvent_stream = impl.strictEvent;
        if (_strictEvent_stream != null) {
          $subscriptions.add(_strictEvent_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEvent_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEvent_Type.response!;

            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEvent_Type.name, _e, close);
          }));
        }
        final _strictEventFields_stream = impl.strictEventFields;
        if (_strictEventFields_stream != null) {
          $subscriptions.add(_strictEventFields_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEventFields_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEventFields_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictEventFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEventFields_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventUnion_stream = impl.strictEventUnion;
        if (_strictEventUnion_stream != null) {
          $subscriptions.add(_strictEventUnion_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEventUnion_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEventUnion_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictEventUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEventUnion_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventTable_stream = impl.strictEventTable;
        if (_strictEventTable_stream != null) {
          $subscriptions.add(_strictEventTable_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEventTable_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEventTable_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictEventTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEventTable_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventErr_stream = impl.strictEventErr;
        if (_strictEventErr_stream != null) {
          $subscriptions.add(_strictEventErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (void $responseValue,
                      $async.EventSink<
                              UnknownInteractionsProtocolStrictEventErrResult>
                          $sink) {
            $sink.add(
                UnknownInteractionsProtocolStrictEventErrResult.withResponse(
                    UnknownInteractionsProtocolStrictEventErrResponse()));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolStrictEventErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(UnknownInteractionsProtocolStrictEventErrResult.withErr(
                  $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEventErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEventErr_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictEventErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEventErr_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventFieldsErr_stream = impl.strictEventFieldsErr;
        if (_strictEventFieldsErr_stream != null) {
          $subscriptions.add(_strictEventFieldsErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (int
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsProtocolStrictEventFieldsErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsProtocolStrictEventFieldsErrResult
                .withResponse(
                    UnknownInteractionsProtocolStrictEventFieldsErrResponse(
                        someField: $responseValue)));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolStrictEventFieldsErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsProtocolStrictEventFieldsErrResult.withErr(
                      $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEventFieldsErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEventFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictEventFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEventFieldsErr_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventUnionErr_stream = impl.strictEventUnionErr;
        if (_strictEventUnionErr_stream != null) {
          $subscriptions.add(_strictEventUnionErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsProtocolStrictEventUnionErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsProtocolStrictEventUnionErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsProtocolStrictEventUnionErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolStrictEventUnionErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsProtocolStrictEventUnionErrResult.withErr(
                      $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEventUnionErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEventUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictEventUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEventUnionErr_Type.name,
                _e,
                close);
          }));
        }
        final _strictEventTableErr_stream = impl.strictEventTableErr;
        if (_strictEventTableErr_stream != null) {
          $subscriptions.add(_strictEventTableErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsProtocolStrictEventTableErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsProtocolStrictEventTableErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsProtocolStrictEventTableErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolStrictEventTableErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsProtocolStrictEventTableErrResult.withErr(
                      $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictEventTableErr_Ordinal,
                0,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictEventTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictEventTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_StrictEventTableErr_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEvent_stream = impl.flexibleEvent;
        if (_flexibleEvent_stream != null) {
          $subscriptions.add(_flexibleEvent_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEvent_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEvent_Type.response!;

            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEvent_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventFields_stream = impl.flexibleEventFields;
        if (_flexibleEventFields_stream != null) {
          $subscriptions.add(_flexibleEventFields_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEventFields_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEventFields_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleEventFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEventFields_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventUnion_stream = impl.flexibleEventUnion;
        if (_flexibleEventUnion_stream != null) {
          $subscriptions.add(_flexibleEventUnion_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEventUnion_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEventUnion_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleEventUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEventUnion_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventTable_stream = impl.flexibleEventTable;
        if (_flexibleEventTable_stream != null) {
          $subscriptions.add(_flexibleEventTable_stream.listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEventTable_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEventTable_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleEventTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
              // TODO: was ignoring errors intentional here? For methods, the
              // channel gets closed on error.
              onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEventTable_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventErr_stream = impl.flexibleEventErr;
        if (_flexibleEventErr_stream != null) {
          $subscriptions.add(_flexibleEventErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (void $responseValue,
                      $async.EventSink<
                              UnknownInteractionsProtocolFlexibleEventErrResult>
                          $sink) {
            $sink.add(
                UnknownInteractionsProtocolFlexibleEventErrResult.withResponse(
                    UnknownInteractionsProtocolFlexibleEventErrResponse()));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolFlexibleEventErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(
                  UnknownInteractionsProtocolFlexibleEventErrResult.withErr(
                      $error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEventErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEventErr_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleEventErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEventErr_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventFieldsErr_stream = impl.flexibleEventFieldsErr;
        if (_flexibleEventFieldsErr_stream != null) {
          $subscriptions.add(_flexibleEventFieldsErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData: (int
                      $responseValue,
                  $async.EventSink<
                          UnknownInteractionsProtocolFlexibleEventFieldsErrResult>
                      $sink) {
            $sink.add(UnknownInteractionsProtocolFlexibleEventFieldsErrResult
                .withResponse(
                    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(
                        someField: $responseValue)));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolFlexibleEventFieldsErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(UnknownInteractionsProtocolFlexibleEventFieldsErrResult
                  .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEventFieldsErr_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventUnionErr_stream = impl.flexibleEventUnionErr;
        if (_flexibleEventUnionErr_stream != null) {
          $subscriptions.add(_flexibleEventUnionErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsProtocolFlexibleEventUnionErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsProtocolFlexibleEventUnionErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsProtocolFlexibleEventUnionErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolFlexibleEventUnionErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(UnknownInteractionsProtocolFlexibleEventUnionErrResult
                  .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEventUnionErr_Type.name,
                _e,
                close);
          }));
        }
        final _flexibleEventTableErr_stream = impl.flexibleEventTableErr;
        if (_flexibleEventTableErr_stream != null) {
          $subscriptions.add(_flexibleEventTableErr_stream
              .transform($async.StreamTransformer.fromHandlers(handleData:
                  (UnknownInteractionsProtocolFlexibleEventTableErrResponse
                          $responseValue,
                      $async.EventSink<
                              UnknownInteractionsProtocolFlexibleEventTableErrResult>
                          $sink) {
            $sink.add(UnknownInteractionsProtocolFlexibleEventTableErrResult
                .withResponse($responseValue));
          }, handleError: (Object $error,
                  StackTrace $stackTrace,
                  $async.EventSink<
                          UnknownInteractionsProtocolFlexibleEventTableErrResult>
                      $sink) {
            if ($error is $fidl.MethodException) {
              $sink.add(UnknownInteractionsProtocolFlexibleEventTableErrResult
                  .withErr($error.value));
            } else {
              $sink.addError($error, $stackTrace);
            }
          }))
              .listen(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleEventTableErr_Ordinal,
                0,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleEventTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleEventTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            sendMessage($encoder.message);
          },
                  // TODO: was ignoring errors intentional here? For methods, the
                  // channel gets closed on error.
                  onError: (_e) {
            $fidl.handleException(
                _kUnknownInteractionsProtocol_FlexibleEventTableErr_Type.name,
                _e,
                close);
          }));
        }
      }
    });
    whenClosed.then((_) => $unsubscribe());
  }

  @override
  void handleMessage(
      $fidl.IncomingMessage $message, $fidl.OutgoingMessageSink $respond) {
    final $wireFormat = $message.parseWireFormat();
    switch ($message.ordinal) {
      case _kUnknownInteractionsProtocol_StrictOneWay_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictOneWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictOneWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictOneWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictOneWay();
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleOneWay_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleOneWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleOneWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleOneWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleOneWay();
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWay();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWay_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayFields_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayFields_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayFields_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayFields();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWayFields_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictTwoWayFields_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictTwoWayFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async
                  .Future<UnknownInteractionsProtocolStrictTwoWayUnionResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolStrictTwoWayUnionResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayUnion();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWayUnion_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictTwoWayUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayTable_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayTable_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async
                  .Future<UnknownInteractionsProtocolStrictTwoWayTableResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolStrictTwoWayTableResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayTable_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayTable();
          });
          $future.then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWayTable_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictTwoWayTable_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictTwoWayTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayErr_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolStrictTwoWayErrResult
                .withResponse(
                    UnknownInteractionsProtocolStrictTwoWayErrResponse());
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolStrictTwoWayErrResult.withErr(
                  $error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWayErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictTwoWayErr_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictTwoWayErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayFieldsErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult
                .withResponse(
                    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(
                        someField: $responseValue));
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictTwoWayFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayUnionErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolStrictTwoWayUnionErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolStrictTwoWayUnionErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictTwoWayUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsProtocolStrictTwoWayTableErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolStrictTwoWayTableErrResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.strictTwoWayTableErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolStrictTwoWayTableErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolStrictTwoWayTableErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.strict);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_StrictTwoWayTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWay_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWay_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWay_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWay_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWay();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayResult.withResponse(
                UnknownInteractionsProtocolFlexibleTwoWayResponse());
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWay_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWay_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWay_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWayFields();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult
                .withResponse(
                    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(
                        someField: $responseValue));
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWayFields_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWayUnion();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayUnionResult
                .withResponse($responseValue);
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWayUnion_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsProtocolFlexibleTwoWayTableResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolFlexibleTwoWayTableResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWayTable();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayTableResult
                .withResponse($responseValue);
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWayTable_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type.request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<void> $future = $fidl
              .decodeMessageWithCallback<$async.Future<void>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWayErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayErrResult
                .withResponse(
                    UnknownInteractionsProtocolFlexibleTwoWayErrResponse());
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolFlexibleTwoWayErrResult.withErr(
                  $error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type.response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWayErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<int> $future = $fidl
              .decodeMessageWithCallback<$async.Future<int>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWayFieldsErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult
                .withResponse(
                    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(
                        someField: $responseValue));
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWayFieldsErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWayUnionErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWayUnionErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      case _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Ordinal:
        final String _name =
            _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type.name;
        $fidl.performWithExceptionHandling(_name, () {
          final List<$fidl.MemberType> $types =
              _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type
                  .request!;
          // ignore: prefer_const_declarations
          final _impl = impl!;
          final $async.Future<
                  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>
              $future = $fidl.decodeMessageWithCallback<
                      $async.Future<
                          UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>>(
                  $message,
                  _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type
                      .requestInlineSize($wireFormat),
                  ($fidl.Decoder $decoder, int $offset) {
            return _impl.flexibleTwoWayTableErr();
          });
          $future.then(($responseValue) {
            return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult
                .withResponse($responseValue);
          }, onError: ($error) {
            if ($error is $fidl.MethodException) {
              return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult
                  .withErr($error.value);
            } else {
              return Future.error($error, StackTrace.current);
            }
          }).then(($response) {
            final $fidl.Encoder $encoder =
                $fidl.Encoder($fidl.kWireFormatDefault);
            $encoder.encodeMessageHeader(
                _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Ordinal,
                $message.txid,
                $fidl.CallStrictness.flexible);
            final List<$fidl.MemberType> $types =
                _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type
                    .response!;
            $fidl.encodeMessage(
                $encoder,
                _kUnknownInteractionsProtocol_FlexibleTwoWayTableErr_Type
                    .responseInlineSize($encoder.wireFormat),
                $types[0],
                $response);
            $respond($encoder.message);
          }, onError: (_e) {
            $fidl.handleException(_name, _e, close);
          });
        }, close);
        break;
      default:
        $message.closeHandles();
        switch ($message.strictness) {
          case $fidl.CallStrictness.flexible:
            if ($message.txid == 0) {
              final $fidl.UnknownMethodMetadata $metadata =
                  $fidl.UnknownMethodMetadata(
                      $message.ordinal, $fidl.UnknownMethodType.oneWay);
              impl!.$unknownMethod($metadata).catchError((_e) {
                $fidl.handleException("unknown one-way", _e, close);
              });
            } else {
              final $fidl.Encoder $encoder =
                  $fidl.Encoder($fidl.kWireFormatDefault);
              $encoder.encodeUnknownMethodResponse(
                  $message.ordinal, $message.txid);
              $respond($encoder.message);
              final $fidl.UnknownMethodMetadata $metadata =
                  $fidl.UnknownMethodMetadata(
                      $message.ordinal, $fidl.UnknownMethodType.twoWay);
              impl!.$unknownMethod($metadata).catchError((_e) {
                $fidl.handleException("unknown one-way", _e, close);
              });
            }
            break;
          case $fidl.CallStrictness.strict:
            throw $fidl.FidlError(
                r'Unexpected message name for UnknownInteractionsProtocolBinding');
        }
        break;
    }
  }
}
