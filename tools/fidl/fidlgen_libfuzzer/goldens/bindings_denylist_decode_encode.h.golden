// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions
// fidl_experiment = zx_select_case_sensitivity

#pragma once

#include <fidl/test.bindingsdenylist/cpp/wire.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 28>
    test_bindingsdenylist_decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartTopResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartTopResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartTopResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartTopResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoTopResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoTopResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoTopResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoTopResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustTopResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustTopResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustTopResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustTopResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerTopResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerTopResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerTopResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerTopResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary, true>,
        },
};

}  // namespace fuzzing
