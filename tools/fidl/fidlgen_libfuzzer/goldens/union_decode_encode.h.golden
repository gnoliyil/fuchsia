// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = no_optional_structs
// fidl_experiment = output_index_json
// fidl_experiment = simple_empty_response_syntax
// fidl_experiment = unknown_interactions
// fidl_experiment = unknown_interactions_mandate

#pragma once

#include <fidl/test.union/cpp/wire.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 16>
    test_union_decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::Pizza",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Pizza, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::Pizza as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Pizza, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::Pasta",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Pasta, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::Pasta as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Pasta, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::NullableUnionStruct",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::NullableUnionStruct, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::NullableUnionStruct as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::NullableUnionStruct, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::Empty",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Empty, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::Empty as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Empty, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::TestProtocolStrictUnionHenceResponseMayBeStackAllocatedResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::TestProtocolStrictUnionHenceResponseMayBeStackAllocatedResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::TestProtocolStrictUnionHenceResponseMayBeStackAllocatedResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::TestProtocolStrictUnionHenceResponseMayBeStackAllocatedResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::TestProtocolFlexibleUnionHenceResponseMustBeHeapAllocatedResponse",
            .has_flexible_envelope = true,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::TestProtocolFlexibleUnionHenceResponseMustBeHeapAllocatedResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::TestProtocolFlexibleUnionHenceResponseMustBeHeapAllocatedResponse as the body",
            .has_flexible_envelope = true,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::TestProtocolFlexibleUnionHenceResponseMustBeHeapAllocatedResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::StructWithNullableUnion",
            .has_flexible_envelope = true,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::StructWithNullableUnion, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::StructWithNullableUnion as the body",
            .has_flexible_envelope = true,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::StructWithNullableUnion, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::UnionSandwich",
            .has_flexible_envelope = true,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::UnionSandwich, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_union::wire::UnionSandwich as the body",
            .has_flexible_envelope = true,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::UnionSandwich, true>,
        },
};

}  // namespace fuzzing
