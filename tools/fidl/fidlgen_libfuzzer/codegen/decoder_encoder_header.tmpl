{{/*
// Copyright 2021 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
*/}}

{{- define "Filename:DecoderEncoderHeader" -}}
  {{- .LibrarySlashes }}/cpp/libfuzzer_decode_encode.h
{{- end }}


{{- define "File:DecoderEncoderHeader" -}}
// WARNING: This file is machine generated by fidlgen.
{{ range $experiment := .Experiments }}
// fidl_experiment = {{ $experiment }}
{{- end }}

#pragma once
{{ "" }}
{{- /* Import the wire types and messaging API from the LLCPP bindings. */}}
#include <{{ .UnifiedIncludeDir }}/wire.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, {{ CountDecoderEncoders .Decls }}>
{{ range .Library }}{{ . }}_{{ end }}decoder_encoders = {
{{ range .Decls }}
{{- if Eq .Kind Kinds.Struct }}{{ template "DecoderEncoder" . }}{{- end -}}
{{- if Eq .Kind Kinds.Table }}{{ template "DecoderEncoder" . }}{{- end -}}
{{- end }}
};

}  // namespace fuzzing
{{ end }}
