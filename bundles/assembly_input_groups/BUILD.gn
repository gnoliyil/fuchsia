# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# DISCLAIMER: This only for IN-TREE TESTS that do not use platform assembly
# input bundles. Any other use case is not supported.

import("//build/images/args.gni")
import("//build/security/policies_swd.gni")
import("//build/zbi/kernel_cmdline.gni")
import("//bundles/assembly_input_groups/assembly_input_groups.gni")

# Turn security policies into input groupss.
foreach(policy, policies_swd) {
  assembly_input_groups("swd_policy.${policy.name}") {
    base_packages = policy.base_package_deps
    system_image_deps = policy.system_image_deps
  }
}

# When setting 'userboot.test.next', 'userboot.next' must be set explicitly, to differentiate
# between running a test, booting or both.
kernel_cmdline("userboot.next-component-manager") {
  visibility = [ ":*" ]
  args = [ "userboot.next=bin/component_manager+--boot" ]
}

assembly_input_groups("bootstrap") {
  visibility = [ "*" ]
  bootfs_labels = [
    "//bundles:bootstrap",
    "//bundles:debugging",
    "//bundles/bringup:manual_testing",
    "//bundles/drivers:bootstrap",
    "//bundles/drivers:usb-host-stack",
    "//bundles/drivers:usb-peripheral-stack",
    "//bundles/drivers:utils",
    "//src/sys/component_manager:component_manager_bootfs_config",
  ]
  base_packages = [ "//src/sys/full-resolver" ]
  cmdline_deps = [ ":userboot.next-component-manager" ]
}

assembly_input_groups("legacy") {
  visibility = [ "*" ]
  base_packages = [
    "//src/sys/appmgr",
    "//src/sys/appmgr:appmgr_scheme_config",
    "//src/sys/appmgr:component_id_index_no_restrict_storage",
    "//src/security/policy:appmgr_policy_eng",
  ]
}

assembly_input_groups("network") {
  visibility = [ "*" ]
  base_packages = [
    "//src/connectivity/network/netcfg:config-default",
    "//src/connectivity/network:for_transition",
    "//src/connectivity/network/mdns/bundles:services",
    "//src/sys/pkg:tools",
  ]
  core_realm_shards =
      [ "//src/sys/pkg/bin/system-updater:system-updater-core-shard" ]
}

assembly_input_groups("ssh") {
  visibility = [ "*" ]
  base_packages = [ "//src/developer/sshd-host:config-for_transition" ]
  if (authorized_ssh_keys != []) {
    base_packages +=
        [ "//src/developer/sshd-host:authorized_ssh_keys_config_data" ]
  }
}

assembly_input_groups("debug") {
  visibility = [ "*" ]
  base_packages = [
    "//src/connectivity/network/mdns/service:mdns_fuchsia_udp_config",
    "//bundles/assembly:third_party_sbase_for_transition",
    "//src/diagnostics/log_listener:for_transition",
    "//src/connectivity/wlan/wlancfg/tool:for_transition",
    "//build/info:build-info",
    "//src/factory/factory_store_providers",
    "//src/cobalt/bin/app:cobalt_registry",
  ]
  core_realm_shards =
      [ "//src/factory/factory_store_providers:factory_store_providers_shard" ]
}

assembly_input_groups("test") {
  visibility = [ "*" ]

  core_realm_shards = [
    "//src/media/audio/audio_core:core_shard",
    "//src/settings/service:setui_service_core_shard",
    "//src/media/sounds/soundplayer:core_shard",
  ]
}
