{{/*
// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
*/}}
{{- define "GenerateGoOverlay" -}}

{{ $overlayName := Name . }}
{{ $discType := print $overlayName "Discriminant" }}

type {{ $discType }} uint64

{{ if .Variants }}
const (
{{ range .Variants }}
{{- if .Comments }}
{{ range .Comments }}
//{{ . }}
{{- end }}
{{- end }}
    {{ $discType }}{{ Name . }} {{ $discType }} = {{ .Discriminant }}
{{- end }}
)
{{- end }}

{{ range .Comments }}
//{{ . }}
{{- end }}
type {{ $overlayName }} struct {
    Discriminant {{ $discType }}
    variant [{{ .MaxVariantSize }}]byte
}

{{ range .Variants }}
{{- $name := Name . }}
func (o {{ $overlayName }}) Is{{ $name }}() bool {
    return o.Discriminant == {{ $discType }}{{ $name }}
}

{{- $type := DescribeType .Type }}
func (o* {{ $overlayName }}) As{{ $name }}() *{{ $type }} {
    if !o.Is{{ $name }}() {
        return nil
    }
    return (*{{ $type }})(unsafe.Pointer(&o.variant))
}
{{ end }}
{{ end }}