{{/*
// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
*/}}
{{- define "Generate-vdso_keys_fuchsia.go" -}}
// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// DO NOT EDIT. Generated from FIDL library zx by zither, a Fuchsia platform
// tool.

package runtime

import "unsafe"

const (
	// vdsoArrayMax is the byte-size of a maximally sized array on this architecture.
	// See cmd/compile/internal/amd64/galign.go arch.MAXWIDTH initialization.
	vdsoArrayMax = 1<<50 - 1
)

var vdsoSymbolKeys = []vdsoSymbolKey{
{{ range . }}
{{- $name := LowerCaseWithUnderscores . | printf "_zx_%s" }}
{{- "" }}   { "{{ $name }}", {{ Hash $name }}, {{ printf "&vdso%s" $name }} },
{{ end }}
}

{{ range . }}
{{- $name := LowerCaseWithUnderscores . | printf "zx_%s" }}
{{- "" -}} //go:cgo_import_dynamic vdso_{{ $name }} {{ $name }}
{{ end }}

{{ range . }}
{{- $name := LowerCaseWithUnderscores . | printf "zx_%s" }}
{{- "" -}} //go:linkname vdso_{{ $name }} vdso_{{ $name }}
{{ end }}

{{ range . }}
{{ $lastParamIndex := LastParameterIndex . }}
//go:noescape
//go:nosplit
func vdsoCall_zx_{{ LowerCaseWithUnderscores . }}(
{{- range $i, $param := .Parameters }}
    {{- LowerCaseWithUnderscores $param }} {{ FFIParameterType $param }}{{ if ne $i $lastParamIndex }}, {{ end }}
{{- end -}}
) {{ FFIReturnType . }}
{{ end }}

var (
{{ range . }}
{{- "" }}  vdso_zx_{{ LowerCaseWithUnderscores . }} uintptr
{{ end }}
)

{{ end }}
