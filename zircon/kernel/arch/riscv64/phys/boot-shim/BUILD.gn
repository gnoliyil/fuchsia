# Copyright 2023 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

import("//build/images/args.gni")
import("//build/testing/zbi_test.gni")
import("//build/toolchain/toolchain_environment.gni")
import("//zircon/kernel/phys/phys_executable.gni")
import("//zircon/kernel/phys/qemu.gni")

# Just the one for now, but will be more later.
legacy_shims = [ "riscv64-qemu-boot-shim" ]

group("boot-shim") {
  deps = []
  foreach(shim, legacy_shims) {
    deps += [ ":$shim" ]
  }
}

phys_executable("riscv64-qemu-boot-shim") {
  sources = [ "riscv64-qemu-boot-shim.cc" ]
  deps = [
    "..:linuxboot",
    "//zircon/kernel/lib/boot-options",
    "//zircon/kernel/lib/devicetree",
    "//zircon/kernel/lib/ktl",
    "//zircon/kernel/lib/libc",
    "//zircon/kernel/phys:allocation-init",
    "//zircon/kernel/phys:boot-zbi",
    "//zircon/kernel/phys:exception",
    "//zircon/kernel/phys:main",
    "//zircon/kernel/phys:stdio",
    "//zircon/kernel/phys:symbolize",
    "//zircon/kernel/phys:uart",
    "//zircon/kernel/phys/lib/boot-shim",
  ]

  # This marks it as the official default boot shim for using QEMU.
  images_metadata = {
    name = "qemu-kernel"
    archive = add_qemu_to_build_archives
  }
}

qemu_shim_phys_tests = [
  "physload-handoff-test",
  "zbi-phys-unittests",
  "zbi-memory-test",
]

qemu_shim_tests = qemu_shim_phys_tests + [
                    #  "core-tests", TODO(mcgrathr): kernel not there yet
                  ]

qemu_boot_format = "linuxboot"

template("qemu_shim_test") {
  foreach(shim, legacy_shims) {
    zbi_test("$shim-$target_name") {
      foreach(qemu, qemu_boot_formats) {
        if (qemu.name == qemu_boot_format) {
          qemu_kernel = ":$shim(${qemu.environment})"
          forward_variables_from(qemu, [ "timeout" ])
        }
      }
      assert(defined(qemu_kernel),
             "$qemu_boot_format not in $qemu_boot_formats")

      device_types = [ "QEMU" ]

      forward_variables_from(invoker, "*")
    }
  }
}

group("tests") {
  testonly = true
  deps = []
}

group("boot_tests") {
  testonly = true
  deps = []
  foreach(shim, legacy_shims) {
    deps += [ ":$shim" ]
    foreach(test, qemu_shim_tests) {
      deps += [ ":$shim-$test" ]
    }
  }
}

foreach(test, qemu_shim_phys_tests) {
  qemu_shim_test(test) {
    deps = [ "//zircon/kernel/phys/test:$test.zbi($phys_toolchain)" ]
  }
}

qemu_shim_test("core-tests") {
  deps = [ "//zircon/system/utest/core:core-tests.zbi($default_toolchain)" ]

  # This runs the real kernel with full hardware reboot/shutdown support and it
  # isn't necessarily really quick, so don't impose the short timeout used for
  # raw phys tests.
  timeout = false
}
