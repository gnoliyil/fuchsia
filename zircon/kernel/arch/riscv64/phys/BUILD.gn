# Copyright 2023 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

import("//build/toolchain/toolchain_environment.gni")
import("//build/toolchain/variant.gni")
import("//zircon/system/ulib/hwreg/hwreg_asm_header.gni")

if (toolchain_environment == "kernel.phys" ||
    toolchain_environment == "kernel.efi") {
  assert(current_cpu == "riscv64")

  # riscv64-specific definitions for things in <phys/address-space.h>.
  static_library("address-space") {
    visibility = [ "//zircon/kernel/phys:*" ]
    sources = [ "address-space.cc" ]
    deps = [ "//zircon/kernel/phys:address-space.header" ]
  }

  static_library("phys") {
    public = [ "riscv64.h" ]
    sources = [
      "exception.S",
      "exception.cc",
      "reset.cc",
      "setup.cc",
      "start.S",
    ]
    public_deps = [ "//zircon/kernel/phys:main" ]
    deps = [
      ":arch-phys-info-asm",
      "//zircon/kernel/lib/arch",
      "//zircon/kernel/lib/ktl",
      "//zircon/kernel/lib/libc",
    ]
  }

  config("qemu.config") {
    # Like ZBI executables, direct QEMU phys executables can be loaded
    # anywhere, so they are linked at 0.
    configs = [ "//zircon/kernel/phys:load-pic" ]
  }

  source_set("linuxboot") {
    sources = [ "linuxboot-header.S" ]
    deps = [ "//zircon/kernel/lib/arch" ]
    libs = [ "./linuxboot.ld" ]
  }

  source_set("arch-handoff-prep") {
    sources = [ "arch-handoff-prep.cc" ]
    deps = [
      ":phys",
      "//zircon/kernel/lib/ktl",
      "//zircon/kernel/phys:handoff",
      "//zircon/kernel/phys:handoff-prep.h",
    ]
    include_dirs = [ "//zircon/kernel/phys" ]
  }

  source_set("arch-on-physload-handoff") {
    sources = [ "arch-on-physload-handoff.cc" ]
    include_dirs = [ "//zircon/kernel/phys" ]
    deps = [ "//zircon/kernel/phys:physload.header" ]
  }

  source_set("arch-boot-zbi") {
    sources = [ "arch-boot-zbi.cc" ]
    deps = [
      ":phys",
      "//zircon/kernel/lib/arch",
      "//zircon/kernel/phys:boot-zbi.deps",
    ]
  }
}

source_set("arch-phys-info") {
  visibility = [ "./*" ]
  public = [ "arch-phys-info.h" ]
}

hwreg_asm_header("arch-phys-info-asm") {
  visibility = [ ":*" ]
  output_name = "arch-phys-info-asm.h"
  sources = [ "gen-arch-phys-info-asm.cc" ]
  deps = [ ":arch-phys-info" ]
}

if (current_cpu == "riscv64") {
  group("tests") {
    testonly = true
    deps = [ "boot-shim:boot_tests" ]
  }
}
